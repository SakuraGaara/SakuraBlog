<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>༺Sakura.Gaara༻</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ngames-dev.cn/"/>
  <updated>2019-10-31T11:06:27.979Z</updated>
  <id>https://ngames-dev.cn/</id>
  
  <author>
    <name>༺Sakura.Gaara༻</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Kubernetes架构</title>
    <link href="https://ngames-dev.cn/2019/10/31/Kubernetes%E6%9E%B6%E6%9E%84/"/>
    <id>https://ngames-dev.cn/2019/10/31/Kubernetes架构/</id>
    <published>2019-10-30T16:00:00.000Z</published>
    <updated>2019-10-31T11:06:27.979Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Kubernetes的总架构图"><a href="#Kubernetes的总架构图" class="headerlink" title="Kubernetes的总架构图"></a>Kubernetes的总架构图</h2><p><img src="/images/img/20191031/Kubernetes%E6%80%BB%E6%9E%B6%E6%9E%84%E5%9B%BE.png" alt="master的工作流程图"> </p><a id="more"></a><h2 id="Kubernetes各个组件"><a href="#Kubernetes各个组件" class="headerlink" title="Kubernetes各个组件"></a>Kubernetes各个组件</h2><h3 id="kube-master-控制节点"><a href="#kube-master-控制节点" class="headerlink" title="kube-master[控制节点]"></a>kube-master[控制节点]</h3><ul><li>master的工作流程图<br><img src="/images/img/20191031/master%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt="master的工作流程图"> </li></ul><ol><li>Kubecfg将特定的请求，比如创建Pod，发送给Kubernetes Client。</li><li>Kubernetes Client将请求发送给API server。</li><li>API Server根据请求的类型，比如创建Pod时storage类型是pods，然后依此选择何种REST Storage API对请求作出处理。</li><li>REST Storage API对的请求作相应的处理。</li><li>将处理的结果存入高可用键值存储系统Etcd中。</li><li>在API Server响应Kubecfg的请求后，Scheduler会根据Kubernetes Client获取集群中运行Pod及Minion/Node信息。</li><li>依据从Kubernetes Client获取的信息，Scheduler将未分发的Pod分发到可用的Minion/Node节点上</li></ol><h4 id="API-Server-资源操作入口"><a href="#API-Server-资源操作入口" class="headerlink" title="API Server[资源操作入口]"></a>API Server[资源操作入口]</h4><ul><li><p>提供了资源对象的唯一操作入口，其他所有组件都必须通过它提供的API来操作资源数据，只有API Server与存储通信，其他模块通过API Server访问集群状态。<br>第一，是为了保证集群状态访问的安全。<br>第二，是为了隔离集群状态访问的方式和后端存储实现的方式：API Server是状态访问的方式，不会因为后端存储技术etcd的改变而改变。</p></li><li><p>作为kubernetes系统的入口，封装了核心对象的增删改查操作，以RESTFul接口方式提供给外部客户和内部组件调用。对相关的资源数据“全量查询”+“变化监听”，实时完成相关的业务功能。</p></li></ul><h4 id="Controller-Manager-内部管理控制中心"><a href="#Controller-Manager-内部管理控制中心" class="headerlink" title="Controller Manager[内部管理控制中心]"></a>Controller Manager[内部管理控制中心]</h4><p>实现集群故障检测和恢复的自动化工作，负责执行各种控制器，主要有：</p><ul><li>endpoint-controller：定期关联service和pod(关联信息由endpoint对象维护)，保证service到pod的映射总是最新的。</li><li>replication-controller：定期关联replicationController和pod，保证replicationController定义的复制数量与实际运行pod的数量总是一致的。</li></ul><h4 id="Scheduler-集群分发调度器"><a href="#Scheduler-集群分发调度器" class="headerlink" title="Scheduler[集群分发调度器]"></a>Scheduler[集群分发调度器]</h4><ol><li>Scheduler收集和分析当前Kubernetes集群中所有Minion节点的资源(内存、CPU)负载情况，然后依此分发新建的Pod到Kubernetes集群中可用的节点。</li><li>实时监测Kubernetes集群中未分发和已分发的所有运行的Pod。</li><li>Scheduler也监测Minion节点信息，由于会频繁查找Minion节点，Scheduler会缓存一份最新的信息在本地。</li><li>最后，Scheduler在分发Pod到指定的Minion节点后，会把Pod相关的信息Binding写回API Server。</li></ol><h3 id="kube-node-服务节点"><a href="#kube-node-服务节点" class="headerlink" title="kube-node[服务节点]"></a>kube-node[服务节点]</h3><ul><li>kubelet结构图<br><img src="/images/img/20191031/kubelet%E7%BB%93%E6%9E%84%E5%9B%BE.png" alt="kubelet结构图"> </li></ul><h4 id="Kubelet-节点上的Pod管家"><a href="#Kubelet-节点上的Pod管家" class="headerlink" title="Kubelet[节点上的Pod管家]"></a>Kubelet[节点上的Pod管家]</h4><ul><li><p>负责Node节点上pod的创建、修改、监控、删除等全生命周期的管理</p></li><li><p>定时上报本Node的状态信息给API Server。</p></li><li><p>kubelet是Master API Server和Minion之间的桥梁，接收Master API Server分配给它的commands和work，与持久性键值存储etcd、file、server和http进行交互，读取配置信息。</p></li><li><p>具体的工作如下：</p></li></ul><ol><li>设置容器的环境变量、给容器绑定Volume、给容器绑定Port、根据指定的Pod运行一个单一容器、给指定的Pod创建network 容器。</li><li>同步Pod的状态、同步Pod的状态、从cAdvisor获取Container info、 pod info、 root info、 machine info。</li><li>在容器中运行命令、杀死容器、删除Pod的所有容器。</li></ol><h4 id="Proxy-负载均衡、路由转发"><a href="#Proxy-负载均衡、路由转发" class="headerlink" title="Proxy[负载均衡、路由转发]"></a>Proxy[负载均衡、路由转发]</h4><p>Proxy是为了解决外部网络能够访问跨机器集群中容器提供的应用服务而设计的，运行在每个Node上。Proxy提供TCP/UDP sockets的proxy，每创建一种Service，Proxy主要从etcd获取Services和Endpoints的配置信息（也可以从file获取），然后根据配置信息在Minion上启动一个Proxy的进程并监听相应的服务端口，当外部请求发生时，Proxy会根据Load Balancer将请求分发到后端正确的容器处理。</p><p>Proxy不但解决了同一主宿机相同服务端口冲突的问题，还提供了Service转发服务端口对外提供服务的能力，Proxy后端使用了随机、轮循负载均衡算法。</p><h3 id="kubectl（kubelet-client）-集群管理命令行工具集"><a href="#kubectl（kubelet-client）-集群管理命令行工具集" class="headerlink" title="kubectl（kubelet client）[集群管理命令行工具集]"></a>kubectl（kubelet client）[集群管理命令行工具集]</h3><p>通过客户端的kubectl命令集操作，API Server响应对应的命令结果，从而达到对kubernetes集群的管理。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Kubernetes的总架构图&quot;&gt;&lt;a href=&quot;#Kubernetes的总架构图&quot; class=&quot;headerlink&quot; title=&quot;Kubernetes的总架构图&quot;&gt;&lt;/a&gt;Kubernetes的总架构图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/img/20191031/Kubernetes%E6%80%BB%E6%9E%B6%E6%9E%84%E5%9B%BE.png&quot; alt=&quot;master的工作流程图&quot;&gt; &lt;/p&gt;
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://ngames-dev.cn/categories/kubernetes/"/>
    
    
      <category term="kubernetes" scheme="https://ngames-dev.cn/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>etcd用户及角色权限</title>
    <link href="https://ngames-dev.cn/2019/10/10/etcd%E7%94%A8%E6%88%B7%E5%8F%8A%E8%A7%92%E8%89%B2%E6%9D%83%E9%99%90/"/>
    <id>https://ngames-dev.cn/2019/10/10/etcd用户及角色权限/</id>
    <published>2019-10-09T16:00:00.000Z</published>
    <updated>2019-10-14T07:44:27.011Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>etcd用户和角色设置：<br>1.etcd默认没有用户<br>2.etcd默认角色guest和root<br>3.etcd默认关闭用户登录认证</p></blockquote><a id="more"></a><p>创建root用户<br>etcdctl user add root<br>查看用户<br>etcdctl user list<br>开启/关闭用户登录认证<br>etcdctl auth enable/disable</p><p>创建用户<br>etcdctl -u root user add etcduser<br>删除用户<br>etcdctl -u root user remove etcduser<br>用户修改密码<br>etcdctl -u root user passwd etcduser</p><p>创建角色<br>etcdctl -u root role add etcdrole<br>查看角色<br>etcdctl -u root role list<br>删除角色<br>etcdctl -u root role remove etcdrole<br>角色授权,角色没有密码，仅仅是定义的一组访问权限,角色的访问权限可以被赋予read（读）,write（写）,readwrite（读和写）权限<br>etcdctl -u root role grant etcdrole –path “/*” –read<br>etcdctl -u root role grant etcdrole –path “/*” –write<br>etcdctl -u root role grant etcdrole –path “/*” –rw<br>角色权限回收<br>etcdctl -u root role revoke etcdrole –path “/*” –write</p><p>用户和角色绑定、解除绑定<br>etcdctl -u root user grant –roles etcdrole etcduser<br>etcdctl -u root user revoke –roles etcdrole etcduser</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;etcd用户和角色设置：&lt;br&gt;1.etcd默认没有用户&lt;br&gt;2.etcd默认角色guest和root&lt;br&gt;3.etcd默认关闭用户登录认证&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="etcd" scheme="https://ngames-dev.cn/categories/etcd/"/>
    
    
      <category term="etcd" scheme="https://ngames-dev.cn/tags/etcd/"/>
    
  </entry>
  
  <entry>
    <title>二进制k8s安装部署</title>
    <link href="https://ngames-dev.cn/2019/08/25/%E4%BA%8C%E8%BF%9B%E5%88%B6k8s%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"/>
    <id>https://ngames-dev.cn/2019/08/25/二进制k8s安装部署/</id>
    <published>2019-08-24T16:00:00.000Z</published>
    <updated>2019-10-14T07:39:31.008Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>所有操作全部用root使用者进行，高可用一般建议大于等于3台的奇数,我们使用3台master来做高可用<br>    <strong>k8s各版本组件下载地址:</strong><br>    <a href="https://github.com/kubernetes/kubernetes/tree/v1.14.3" target="_blank" rel="noopener">https://github.com/kubernetes/kubernetes/tree/v1.14.3</a><br>    <em>kubernetes:</em><br>    wget <a href="https://storage.googleapis.com/kubernetes-release/release/v1.14.3/kubernetes-node-linux-amd64.tar.gz" target="_blank" rel="noopener">https://storage.googleapis.com/kubernetes-release/release/v1.14.3/kubernetes-node-linux-amd64.tar.gz</a><br>    wget <a href="https://storage.googleapis.com/kubernetes-release/release/v1.14.3/kubernetes-client-linux-amd64.tar.gz" target="_blank" rel="noopener">https://storage.googleapis.com/kubernetes-release/release/v1.14.3/kubernetes-client-linux-amd64.tar.gz</a><br>    wget <a href="https://storage.googleapis.com/kubernetes-release/release/v1.14.3/kubernetes-server-linux-amd64.tar.gz" target="_blank" rel="noopener">https://storage.googleapis.com/kubernetes-release/release/v1.14.3/kubernetes-server-linux-amd64.tar.gz</a><br>    wget <a href="https://storage.googleapis.com/kubernetes-release/release/v1.14.3/kubernetes.tar.gz" target="_blank" rel="noopener">https://storage.googleapis.com/kubernetes-release/release/v1.14.3/kubernetes.tar.gz</a><br>    <em>etcd:</em><br>    wget <a href="https://github.com/etcd-io/etcd/releases/download/v3.3.13/etcd-v3.3.13-linux-amd64.tar.gz" target="_blank" rel="noopener">https://github.com/etcd-io/etcd/releases/download/v3.3.13/etcd-v3.3.13-linux-amd64.tar.gz</a><br>    <em>flannel:</em><br>    wget <a href="https://github.com/coreos/flannel/releases/download/v0.11.0/flannel-v0.11.0-linux-amd64.tar.gz" target="_blank" rel="noopener">https://github.com/coreos/flannel/releases/download/v0.11.0/flannel-v0.11.0-linux-amd64.tar.gz</a><br>    <em>cni-plugins:</em><br>    wget <a href="https://github.com/containernetworking/plugins/releases/download/v0.8.1/cni-plugins-linux-amd64-v0.8.1.tgz" target="_blank" rel="noopener">https://github.com/containernetworking/plugins/releases/download/v0.8.1/cni-plugins-linux-amd64-v0.8.1.tgz</a><br>    <em>docker:</em><br>    wget <a href="https://download.docker.com/linux/static/stable/x86_64/docker-18.09.6.tgz" target="_blank" rel="noopener">https://download.docker.com/linux/static/stable/x86_64/docker-18.09.6.tgz</a><br>    <em>cfssl:</em><br>    wget <a href="https://pkg.cfssl.org/R1.2/cfssl_linux-amd64" target="_blank" rel="noopener">https://pkg.cfssl.org/R1.2/cfssl_linux-amd64</a><br>    wget <a href="https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64" target="_blank" rel="noopener">https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64</a><br>    wget <a href="https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64" target="_blank" rel="noopener">https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64</a><br>    <em>heapster:</em><br>    wget <a href="https://github.com/kubernetes-retired/heapster/archive/v1.5.4.tar.gz" target="_blank" rel="noopener">https://github.com/kubernetes-retired/heapster/archive/v1.5.4.tar.gz</a>  </p></blockquote><a id="more"></a><h2 id="环境准备-Centos7"><a href="#环境准备-Centos7" class="headerlink" title="环境准备 Centos7"></a>环境准备 Centos7</h2><h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><p>master: kube-apiserver,kube-controller-manager,kube-scheduler,flanneId<br>node: kubelet,kube-proxy,flanneId<br>Service_CIDR: 10.254.0.0/16 服务网段，部署前路由不可达，部署后集群内部使用IP:Port可达<br>Cluster_CIDR：172.30.0.0/16 pod网段，部署前路由不可达，部署后路由可达(flanneld 保证)  </p><table><thead><tr><th>hostname</th><th>IP</th><th>部署软件</th></tr></thead><tbody><tr><td>k8s-master1</td><td>192.168.1.31</td><td>etcd+keepalived+haproxy+master</td></tr><tr><td>k8s-master2</td><td>192.168.1.32</td><td>etcd+keepalived+haproxy+master</td></tr><tr><td>k8s-master3</td><td>192.168.1.33</td><td>etcd+keepalived+haproxy+master</td></tr><tr><td>k8s-worker1</td><td>192.168.1.35</td><td>docker+node</td></tr><tr><td>VIP</td><td>192.168.1.10</td><td>VIP</td></tr></tbody></table><h3 id="配置主机环境-etc-hosts，设置master免密登陆"><a href="#配置主机环境-etc-hosts，设置master免密登陆" class="headerlink" title="配置主机环境 /etc/hosts，设置master免密登陆"></a>配置主机环境 /etc/hosts，设置master免密登陆</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">192.168.1.31 k8s-master1</span><br><span class="line">192.168.1.32 k8s-master2</span><br><span class="line">192.168.1.33 k8s-master3</span><br></pre></td></tr></table></figure><h3 id="安装前配置"><a href="#安装前配置" class="headerlink" title="安装前配置"></a>安装前配置</h3><ol><li><p>禁止selinux,防火墙,swap分区</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">'s/SELINUX=enforcing/SELINUX=disabled/g'</span> /etc/selinux/config</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line">swapoff -a</span><br></pre></td></tr></table></figure></li><li><p>安装软件包</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install ntpdate gcc git vim wget</span><br></pre></td></tr></table></figure></li><li><p>时间统一定时更新</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">*/5 * * * * /usr/sbin/ntpdate ntp.api.bz &gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure></li><li><p>修改文件句柄数</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt;&gt;/etc/security/limits.conf</span><br><span class="line">* soft nofile 65536</span><br><span class="line">* hard nofile 65536</span><br><span class="line">* soft nproc 65536</span><br><span class="line">* hard nproc 65536</span><br><span class="line">* soft  memlock  unlimited</span><br><span class="line">* hard memlock  unlimited</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>ipvs安装</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">yum install ipvsadm ipset sysstat conntrack libseccomp -y</span><br></pre></td></tr></table></figure></li><li><p>开机加载内核模块，并设置开机自动加载</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">cat &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt;EOF</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">modprobe -- ip_vs</span><br><span class="line">modprobe -- ip_vs_rr</span><br><span class="line">modprobe -- ip_vs_wrr</span><br><span class="line">modprobe -- ip_vs_sh</span><br><span class="line">modprobe -- nf_conntrack_ipv4</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#然后执行脚本</span></span><br><span class="line">chmod 755 /etc/sysconfig/modules/ipvs.modules &amp;&amp; bash /etc/sysconfig/modules/ipvs.modules</span><br><span class="line">lsmod | grep -e ip_vs -e nf_conntrack_ipv4</span><br></pre></td></tr></table></figure></li><li><p>修改系统参数</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt; /etc/sysctl.d/k8s.conf</span><br><span class="line">net.ipv4.tcp_keepalive_time = 600</span><br><span class="line">net.ipv4.tcp_keepalive_intvl = 30</span><br><span class="line">net.ipv4.tcp_keepalive_probes = 10</span><br><span class="line">net.ipv6.conf.all.disable_ipv6 = 1</span><br><span class="line">net.ipv6.conf.default.disable_ipv6 = 1</span><br><span class="line">net.ipv6.conf.lo.disable_ipv6 = 1</span><br><span class="line">net.ipv4.neigh.default.gc_stale_time = 120</span><br><span class="line">net.ipv4.conf.all.rp_filter = 0</span><br><span class="line">net.ipv4.conf.default.rp_filter = 0</span><br><span class="line">net.ipv4.conf.default.arp_announce = 2</span><br><span class="line">net.ipv4.conf.lo.arp_announce = 2</span><br><span class="line">net.ipv4.conf.all.arp_announce = 2</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 5000</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 1024</span><br><span class="line">net.ipv4.tcp_synack_retries = 2</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">net.netfilter.nf_conntrack_max = 2310720</span><br><span class="line">fs.inotify.max_user_watches=89100</span><br><span class="line">fs.may_detach_mounts = 1</span><br><span class="line">fs.file-max = 52706963</span><br><span class="line">fs.nr_open = 52706963</span><br><span class="line">net.bridge.bridge-nf-call-arptables = 1</span><br><span class="line">vm.swappiness = 0</span><br><span class="line">vm.overcommit_memory=1</span><br><span class="line">vm.panic_on_oom=0</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sysctl --system</span><br></pre></td></tr></table></figure></li><li><p>预留内存,避免由于内存耗尽导致ssh连不上主机,比如100M，资源充足建议大点</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'vm.min_free_kbytes=100000'</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure></li></ol><h2 id="部署docker"><a href="#部署docker" class="headerlink" title="部署docker"></a>部署docker</h2><ol><li><p>安装yum源工具包</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure></li><li><p>下载docker-ce官方的yum源配置文件 </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure></li><li><p>安装docker-ce相应版本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install docker-ce.x86_64</span><br></pre></td></tr></table></figure></li><li><p>配置daemon, 因为kubelet的启动环境变量要与docker的cgroup-driver驱动相同</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/docker &amp;&amp; </span><br><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"exec-opts"</span>: [<span class="string">"native.cgroupdriver=systemd"</span>],</span><br><span class="line">  <span class="string">"log-driver"</span>: <span class="string">"json-file"</span>,</span><br><span class="line">  <span class="string">"log-opts"</span>: &#123;</span><br><span class="line">    <span class="string">"max-size"</span>: <span class="string">"100m"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"storage-driver"</span>: <span class="string">"overlay2"</span>,</span><br><span class="line">  <span class="string">"storage-opts"</span>: [</span><br><span class="line">    <span class="string">"overlay2.override_kernel_check=true"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://uyah70su.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>设置开机自启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker &amp;&amp; systemctl <span class="built_in">enable</span> docker &amp;&amp; systemctl status docker</span><br></pre></td></tr></table></figure></li></ol><h2 id="部署etcd"><a href="#部署etcd" class="headerlink" title="部署etcd"></a>部署etcd</h2><p>etcd是用来保存集群所有状态的 Key/Value 存储系统，常用于服务发现、共享配置以及并发控制（如 leader 选举、分布式锁等）。kubernetes 使用 etcd 存储所有运行数据。</p><p>所有 Kubernetes 组件会通过 API Server 来跟 Etcd 进行沟通从而保存或读取资源状态。有条件的可以单独几台机器跑,不过需要配置apiserver指向etcd集群。</p><h3 id="安装cfssl"><a href="#安装cfssl" class="headerlink" title="安装cfssl"></a>安装cfssl</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 -O /usr/<span class="built_in">local</span>/bin/cfssl</span><br><span class="line">wget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 -O /usr/<span class="built_in">local</span>/bin/cfssljson</span><br><span class="line">wget https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 -O /usr/<span class="built_in">local</span>/bin/cfssl-certinfo</span><br><span class="line"></span><br><span class="line">chmod +x /usr/<span class="built_in">local</span>/bin/cfssl*</span><br></pre></td></tr></table></figure><h3 id="安装配置etcd"><a href="#安装配置etcd" class="headerlink" title="安装配置etcd"></a>安装配置etcd</h3><ol><li><p>配置etcd证书</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">mkdir /root/ssl &amp;&amp; <span class="built_in">cd</span> /root/ssl</span><br><span class="line">cat &gt;  ca-config.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"signing"</span>: &#123;</span><br><span class="line"><span class="string">"default"</span>: &#123;</span><br><span class="line">  <span class="string">"expiry"</span>: <span class="string">"8760h"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"profiles"</span>: &#123;</span><br><span class="line">  <span class="string">"kubernetes"</span>: &#123;</span><br><span class="line">    <span class="string">"usages"</span>: [</span><br><span class="line">        <span class="string">"signing"</span>,</span><br><span class="line">        <span class="string">"key encipherment"</span>,</span><br><span class="line">        <span class="string">"server auth"</span>,</span><br><span class="line">        <span class="string">"client auth"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"expiry"</span>: <span class="string">"8760h"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &gt;  ca-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"CN"</span>: <span class="string">"kubernetes"</span>,</span><br><span class="line"><span class="string">"key"</span>: &#123;</span><br><span class="line"><span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line"><span class="string">"size"</span>: 2048</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"names"</span>: [</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">  <span class="string">"ST"</span>: <span class="string">"ShangHai"</span>,</span><br><span class="line">  <span class="string">"L"</span>: <span class="string">"ShangHai"</span>,</span><br><span class="line">  <span class="string">"O"</span>: <span class="string">"k8s"</span>,</span><br><span class="line">  <span class="string">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &gt; etcd-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"CN"</span>: <span class="string">"etcd"</span>,</span><br><span class="line">  <span class="string">"hosts"</span>: [</span><br><span class="line">    <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="string">"192.168.1.31"</span>,</span><br><span class="line">    <span class="string">"192.168.1.32"</span>,</span><br><span class="line">    <span class="string">"192.168.1.33"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"key"</span>: &#123;</span><br><span class="line">    <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">    <span class="string">"size"</span>: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"names"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">      <span class="string">"ST"</span>: <span class="string">"ShangHai"</span>,</span><br><span class="line">      <span class="string">"L"</span>: <span class="string">"ShangHai"</span>,</span><br><span class="line">      <span class="string">"O"</span>: <span class="string">"k8s"</span>,</span><br><span class="line">      <span class="string">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>创建etcd证书</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -initca ca-csr.json | cfssljson -bare ca</span><br><span class="line"></span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes etcd-csr.json | cfssljson -bare etcd</span><br><span class="line"></span><br><span class="line"><span class="comment">#生产后证书包含文件如下，共9个</span></span><br><span class="line">ca-config.json</span><br><span class="line">ca.csr</span><br><span class="line">ca-csr.json</span><br><span class="line">ca-key.pem</span><br><span class="line">ca.pem</span><br><span class="line">etcd.csr</span><br><span class="line">etcd-csr.json</span><br><span class="line">etcd-key.pem</span><br><span class="line">etcd.pem</span><br></pre></td></tr></table></figure></li><li><p>将生成好的etcd.pem和etcd-key.pem以及ca.pem三个文件拷贝到etcd机器上</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/kubernetes/ssl &amp;&amp; cp *.pem /etc/kubernetes/ssl/</span><br><span class="line">ssh -n 192.168.1.32 <span class="string">"mkdir -p /etc/kubernetes/ssl &amp;&amp; exit"</span></span><br><span class="line">ssh -n 192.168.1.33 <span class="string">"mkdir -p /etc/kubernetes/ssl &amp;&amp; exit"</span></span><br><span class="line"></span><br><span class="line">scp -r /etc/kubernetes/ssl/*.pem 192.168.1.32:/etc/kubernetes/ssl/</span><br><span class="line">scp -r /etc/kubernetes/ssl/*.pem 192.168.1.33:/etc/kubernetes/ssl/</span><br></pre></td></tr></table></figure></li><li><p>配置部署etcd</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/etcd-io/etcd/releases/download/v3.3.13/etcd-v3.3.13-linux-amd64.tar.gz</span><br><span class="line">tar -zxvf etcd-v3.3.13-linux-amd64.tar.gz</span><br><span class="line">cp etcd-v3.3.13-linux-amd64/etcd* /usr/<span class="built_in">local</span>/bin</span><br><span class="line">scp etcd-v3.3.13-linux-amd64/etcd* 192.168.1.32:/usr/<span class="built_in">local</span>/bin</span><br><span class="line">scp etcd-v3.3.13-linux-amd64/etcd* 192.168.1.33:/usr/<span class="built_in">local</span>/bin</span><br></pre></td></tr></table></figure></li><li><p>创建启动配置文件(三台配置文件不同)</p></li></ol><ul><li><p>k8s-master1:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt;/etc/systemd/system/etcd.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=Etcd Server</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line">Documentation=https://github.com/coreos</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">WorkingDirectory=/var/lib/etcd/</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/etcd \</span><br><span class="line">  --name k8s-master1 \</span><br><span class="line">  --cert-file=/etc/kubernetes/ssl/etcd.pem \</span><br><span class="line">  --key-file=/etc/kubernetes/ssl/etcd-key.pem \</span><br><span class="line">  --trusted-ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --peer-cert-file=/etc/kubernetes/ssl/etcd.pem \</span><br><span class="line">  --peer-key-file=/etc/kubernetes/ssl/etcd-key.pem \</span><br><span class="line">  --peer-trusted-ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --initial-advertise-peer-urls https://192.168.1.31:2380 \</span><br><span class="line">  --listen-peer-urls https://192.168.1.31:2380 \</span><br><span class="line">  --listen-client-urls https://192.168.1.31:2379,http://127.0.0.1:2379 \</span><br><span class="line">  --advertise-client-urls https://192.168.1.31:2379 \</span><br><span class="line">  --initial-cluster-token etcd-cluster-0 \</span><br><span class="line">  --initial-cluster k8s-master1=https://192.168.1.31:2380,k8s-master2=https://192.168.1.32:2380,k8s-master3=https://192.168.1.33:2380 \</span><br><span class="line">  --initial-cluster-state new \</span><br><span class="line">  --data-dir=/var/lib/etcd</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动etcd服务</span></span><br><span class="line">mkdir /var/lib/etcd</span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl <span class="built_in">enable</span> etcd.service &amp;&amp; systemctl start etcd.service &amp;&amp; systemctl status etcd</span><br></pre></td></tr></table></figure></li><li><p>k8s-master2:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt;/etc/systemd/system/etcd.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=Etcd Server</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line">Documentation=https://github.com/coreos</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">WorkingDirectory=/var/lib/etcd/</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/etcd \</span><br><span class="line">  --name k8s-master2 \</span><br><span class="line">  --cert-file=/etc/kubernetes/ssl/etcd.pem \</span><br><span class="line">  --key-file=/etc/kubernetes/ssl/etcd-key.pem \</span><br><span class="line">  --trusted-ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --peer-cert-file=/etc/kubernetes/ssl/etcd.pem \</span><br><span class="line">  --peer-key-file=/etc/kubernetes/ssl/etcd-key.pem \</span><br><span class="line">  --peer-trusted-ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --initial-advertise-peer-urls https://192.168.1.32:2380 \</span><br><span class="line">  --listen-peer-urls https://192.168.1.32:2380 \</span><br><span class="line">  --listen-client-urls https://192.168.1.32:2379,http://127.0.0.1:2379 \</span><br><span class="line">  --advertise-client-urls https://192.168.1.32:2379 \</span><br><span class="line">  --initial-cluster-token etcd-cluster-0 \</span><br><span class="line">  --initial-cluster k8s-master1=https://192.168.1.31:2380,k8s-master2=https://192.168.1.32:2380,k8s-master3=https://192.168.1.33:2380 \</span><br><span class="line">  --initial-cluster-state new \</span><br><span class="line">  --data-dir=/var/lib/etcd</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动etcd服务</span></span><br><span class="line">mkdir /var/lib/etcd</span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl <span class="built_in">enable</span> etcd.service &amp;&amp; systemctl start etcd.service &amp;&amp; systemctl status etcd</span><br></pre></td></tr></table></figure></li><li><p>k8s-master3:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt;/etc/systemd/system/etcd.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=Etcd Server</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line">Documentation=https://github.com/coreos</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">WorkingDirectory=/var/lib/etcd/</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/etcd \</span><br><span class="line">  --name k8s-master3 \</span><br><span class="line">  --cert-file=/etc/kubernetes/ssl/etcd.pem \</span><br><span class="line">  --key-file=/etc/kubernetes/ssl/etcd-key.pem \</span><br><span class="line">  --trusted-ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --peer-cert-file=/etc/kubernetes/ssl/etcd.pem \</span><br><span class="line">  --peer-key-file=/etc/kubernetes/ssl/etcd-key.pem \</span><br><span class="line">  --peer-trusted-ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --initial-advertise-peer-urls https://192.168.1.33:2380 \</span><br><span class="line">  --listen-peer-urls https://192.168.1.33:2380 \</span><br><span class="line">  --listen-client-urls https://192.168.1.33:2379,http://127.0.0.1:2379 \</span><br><span class="line">  --advertise-client-urls https://192.168.1.33:2379 \</span><br><span class="line">  --initial-cluster-token etcd-cluster-0 \</span><br><span class="line">  --initial-cluster k8s-master1=https://192.168.1.31:2380,k8s-master2=https://192.168.1.32:2380,k8s-master3=https://192.168.1.33:2380 \</span><br><span class="line">  --initial-cluster-state new \</span><br><span class="line">  --data-dir=/var/lib/etcd</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动etcd服务</span></span><br><span class="line">mkdir /var/lib/etcd</span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl <span class="built_in">enable</span> etcd.service &amp;&amp; systemctl start etcd.service &amp;&amp; systemctl status etcd</span><br></pre></td></tr></table></figure></li></ul><ol><li>验证集群<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">etcdctl --ca-file=/etc/kubernetes/ssl/ca.pem --cert-file=/etc/kubernetes/ssl/etcd.pem --key-file=/etc/kubernetes/ssl/etcd-key.pem cluster-health</span><br><span class="line"><span class="comment">#返回如下正常</span></span><br><span class="line">member 22a9d61e6821c4d is healthy: got healthy result from https://192.168.1.32:2379</span><br><span class="line">member 68afffba56612fd is healthy: got healthy result from https://192.168.1.31:2379</span><br><span class="line">member ff1f72bab5edb59f is healthy: got healthy result from https://192.168.1.33:2379</span><br><span class="line">cluster is healthy</span><br></pre></td></tr></table></figure></li></ol><h2 id="部署flannel"><a href="#部署flannel" class="headerlink" title="部署flannel"></a>部署flannel</h2><p>所有的节点都需要安装flannel，，主要目的是跨主机的docker能够互相通信，也是保障kubernetes集群的网络基础和保障</p><ol><li><p>生产TLS证书，是让kubectl当做client证书使用,(证书只需要生成一次)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/ssl</span><br><span class="line">cat &gt; flanneld-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"CN"</span>: <span class="string">"flanneld"</span>,</span><br><span class="line">  <span class="string">"hosts"</span>: [],</span><br><span class="line">  <span class="string">"key"</span>: &#123;</span><br><span class="line">    <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">    <span class="string">"size"</span>: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"names"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">      <span class="string">"ST"</span>: <span class="string">"ShangHai"</span>,</span><br><span class="line">      <span class="string">"L"</span>: <span class="string">"ShangHai"</span>,</span><br><span class="line">      <span class="string">"O"</span>: <span class="string">"k8s"</span>,</span><br><span class="line">      <span class="string">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>生成证书和私钥</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes flanneld-csr.json | cfssljson -bare flanneld</span><br><span class="line"></span><br><span class="line"><span class="comment">#包含以下文件</span></span><br><span class="line">flanneld.csr</span><br><span class="line">flanneld-csr.json</span><br><span class="line">flanneld-key.pem</span><br><span class="line">flanneld.pem</span><br><span class="line"><span class="comment">#然后将证书拷贝到所有节点下</span></span><br><span class="line">cp flanneld*.pem /etc/kubernetes/ssl</span><br><span class="line">scp flanneld*.pem 192.168.1.32:/etc/kubernetes/ssl</span><br><span class="line">scp flanneld*.pem 192.168.1.33:/etc/kubernetes/ssl</span><br></pre></td></tr></table></figure></li><li><p>安装flannel</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/coreos/flannel/releases/download/v0.11.0/flannel-v0.11.0-linux-amd64.tar.gz</span><br><span class="line">tar -zvxf flannel-v0.11.0-linux-amd64.tar.gz</span><br><span class="line">cp flanneld mk-docker-opts.sh /usr/<span class="built_in">local</span>/bin</span><br><span class="line">cp flanneld mk-docker-opts.sh /usr/<span class="built_in">local</span>/bin</span><br><span class="line">scp flanneld mk-docker-opts.sh 192.168.1.32:/usr/<span class="built_in">local</span>/bin</span><br><span class="line">scp flanneld mk-docker-opts.sh 192.168.1.33:/usr/<span class="built_in">local</span>/bin</span><br></pre></td></tr></table></figure></li><li><p>向etcd写入集群Pod网段信息，在etcd集群中任意一台执行一次即可</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">etcdctl \</span><br><span class="line">--endpoints=https://192.168.1.31:2379,https://192.168.1.32:2379,https://192.168.1.33:2379 \</span><br><span class="line">--ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">--cert-file=/etc/kubernetes/ssl/flanneld.pem \</span><br><span class="line">--key-file=/etc/kubernetes/ssl/flanneld-key.pem \</span><br><span class="line">mk /kubernetes/network/config <span class="string">'&#123;"Network":"172.30.0.0/16", "SubnetLen": 24, "Backend": &#123;"Type": "vxlan"&#125;&#125;'</span></span><br><span class="line"><span class="comment">#返回结果</span></span><br><span class="line">&#123;<span class="string">"Network"</span>:<span class="string">"172.30.0.0/16"</span>, <span class="string">"SubnetLen"</span>: 24, <span class="string">"Backend"</span>: &#123;<span class="string">"Type"</span>: <span class="string">"vxlan"</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#验证</span></span><br><span class="line"><span class="comment">#列出键值存储的目录</span></span><br><span class="line">etcdctl \</span><br><span class="line">--ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">--cert-file=/etc/kubernetes/ssl/flanneld.pem \</span><br><span class="line">--key-file=/etc/kubernetes/ssl/flanneld-key.pem ls -r</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看键值存储</span></span><br><span class="line">etcdctl \</span><br><span class="line">--ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">--cert-file=/etc/kubernetes/ssl/flanneld.pem \</span><br><span class="line">--key-file=/etc/kubernetes/ssl/flanneld-key.pem get /kubernetes/network/config</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看已分配pod的子网列表（暂时没有为docker分配子网，启动flannel可以查看）</span></span><br><span class="line">etcdctl \</span><br><span class="line">--ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">--cert-file=/etc/kubernetes/ssl/flanneld.pem \</span><br><span class="line">--key-file=/etc/kubernetes/ssl/flanneld-key.pem ls  /kubernetes/network/subnets</span><br></pre></td></tr></table></figure></li><li><p>创建flannel.service文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/systemd/system/flannel.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Flanneld overlay address etcd agent</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line">After=etcd.service</span><br><span class="line">Before=docker.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/flanneld \</span><br><span class="line">  -etcd-cafile=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  -etcd-certfile=/etc/kubernetes/ssl/flanneld.pem \</span><br><span class="line">  -etcd-keyfile=/etc/kubernetes/ssl/flanneld-key.pem \</span><br><span class="line">  -etcd-endpoints=https://192.168.1.31:2379,https://192.168.1.32:2379,https://192.168.1.33:2379 \</span><br><span class="line">  -etcd-prefix=/kubernetes/network</span><br><span class="line">ExecStartPost=/usr/<span class="built_in">local</span>/bin/mk-docker-opts.sh -k DOCKER_NETWORK_OPTIONS -d /run/flannel/docker</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">RequiredBy=docker.service</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>启动flannel</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload &amp;&amp; systemctl <span class="built_in">enable</span> flannel &amp;&amp; systemctl start flannel &amp;&amp; systemctl status flannel</span><br></pre></td></tr></table></figure></li><li><p>验证flannel</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cat /run/flannel/docker</span><br><span class="line"><span class="comment">#/run/flannel/docker是flannel分配给docker的子网信息，显示如下</span></span><br><span class="line">DOCKER_OPT_BIP=<span class="string">"--bip=172.30.10.1/24"</span></span><br><span class="line">DOCKER_OPT_IPMASQ=<span class="string">"--ip-masq=true"</span></span><br><span class="line">DOCKER_OPT_MTU=<span class="string">"--mtu=1450"</span></span><br><span class="line">DOCKER_NETWORK_OPTIONS=<span class="string">" --bip=172.30.10.1/24 --ip-masq=true --mtu=1450"</span></span><br><span class="line"></span><br><span class="line">ip add | grep flannel </span><br><span class="line">4: flannel.1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1450 qdisc noqueue state UNKNOWN group default </span><br><span class="line">    inet 172.30.10.0/32 scope global flannel.1</span><br><span class="line"></span><br><span class="line">cat /run/flannel/subnet.env</span><br><span class="line">FLANNEL_NETWORK=172.30.0.0/16</span><br><span class="line">FLANNEL_SUBNET=172.30.10.1/24</span><br><span class="line">FLANNEL_MTU=1450</span><br><span class="line">FLANNEL_IPMASQ=<span class="literal">false</span></span><br></pre></td></tr></table></figure></li><li><p>配置docker支持flannel</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/systemd/system/multi-user.target.wants/docker.service</span><br><span class="line">EnvironmentFile=/run/flannel/docker</span><br><span class="line">ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock <span class="variable">$DOCKER_NETWORK_OPTIONS</span></span><br></pre></td></tr></table></figure></li><li><p>重启docker,然后可以查看到已分配pod的子网列表</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload &amp;&amp; systemctl restart docker &amp;&amp; systemctl status docker</span><br><span class="line"></span><br><span class="line">ip add | grep docker</span><br><span class="line">3: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default </span><br><span class="line">    inet 172.30.10.1/24 brd 172.30.10.255 scope global docker0</span><br></pre></td></tr></table></figure></li><li><p>设置CNI插件支持flannel</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/containernetworking/plugins/releases/download/v0.8.1/cni-plugins-linux-amd64-v0.8.1.tgz</span><br><span class="line">mkdir /opt/cni</span><br><span class="line">tar -zxvf cni-plugins-linux-amd64-v0.8.1.tgz -C /opt/cni</span><br><span class="line">mkdir -p /etc/cni/net.d</span><br><span class="line">cat &gt; /etc/cni/net.d/10-default.conf &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"flannel"</span>,</span><br><span class="line">    <span class="string">"type"</span>: <span class="string">"flannel"</span>,</span><br><span class="line">    <span class="string">"delegate"</span>: &#123;</span><br><span class="line">        <span class="string">"bridge"</span>: <span class="string">"docker0"</span>,</span><br><span class="line">        <span class="string">"isDefaultGateway"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"mtu"</span>: 1400</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cp /opt/cni/* /usr/<span class="built_in">local</span>/bin</span><br><span class="line">scp /opt/cni/* 192.168.1.32:/usr/<span class="built_in">local</span>/bin</span><br><span class="line">scp /opt/cni/* 192.168.1.33:/usr/<span class="built_in">local</span>/bin</span><br><span class="line">ssh -n 192.168.1.32 <span class="string">"mkdir -p /etc/cni/net.d &amp;&amp; exit"</span></span><br><span class="line">ssh -n 192.168.1.33 <span class="string">"mkdir -p /etc/cni/net.d &amp;&amp; exit"</span></span><br><span class="line">scp /etc/cni/net.d/10-default.conf 192.168.1.32:/etc/cni/net.d/</span><br><span class="line">scp /etc/cni/net.d/10-default.conf 192.168.1.33:/etc/cni/net.d/</span><br></pre></td></tr></table></figure></li></ol><h2 id="部署keepalived-haproxy"><a href="#部署keepalived-haproxy" class="headerlink" title="部署keepalived+haproxy"></a>部署keepalived+haproxy</h2><p>keepalived 提供 kube-apiserver 对外服务的 VIP；haproxy 监听 VIP，后端连接所有 kube-apiserver 实例，提供健康检查和负载均衡功能  </p><p>本文档复用 master 节点的三台机器，haproxy 监听的端口(8443) 需要与 kube-apiserver 的端口 6443 不同，避免冲突。  </p><p>keepalived 在运行过程中周期检查本机的 haproxy 进程状态，如果检测到 haproxy 进程异常，则触发重新选主的过程，VIP 将飘移到新选出来的主节点，从而实现 VIP 的高可用。<br>所有组件（如 kubeclt、apiserver、controller-manager、scheduler 等）都通过 VIP 和 haproxy 监听的 8443 端口访问 kube-apiserver 服务。  </p><h3 id="部署haproxy"><a href="#部署haproxy" class="headerlink" title="部署haproxy"></a>部署haproxy</h3><ol><li><p>安装配置haproxy</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">yum install -y haproxy</span><br><span class="line"></span><br><span class="line">cat &lt;&lt; EOF &gt; /etc/haproxy/haproxy.cfg</span><br><span class="line">global</span><br><span class="line">    <span class="built_in">log</span>         127.0.0.1 local2</span><br><span class="line">    chroot      /var/lib/haproxy</span><br><span class="line">    pidfile     /var/run/haproxy.pid</span><br><span class="line">    maxconn     4000</span><br><span class="line">    user        haproxy</span><br><span class="line">    group       haproxy</span><br><span class="line">    daemon</span><br><span class="line"></span><br><span class="line">defaults</span><br><span class="line">    mode                    tcp</span><br><span class="line">    <span class="built_in">log</span>                     global</span><br><span class="line">    retries                 3</span><br><span class="line">    timeout connect         10s</span><br><span class="line">    timeout client          1m</span><br><span class="line">    timeout server          1m</span><br><span class="line"></span><br><span class="line">listen  admin_stats</span><br><span class="line">    <span class="built_in">bind</span> 0.0.0.0:9090</span><br><span class="line">    mode http</span><br><span class="line">    <span class="built_in">log</span> 127.0.0.1 local0 err</span><br><span class="line">    stats refresh 30s</span><br><span class="line">    stats uri /status</span><br><span class="line">    stats realm welcome login\ Haproxy</span><br><span class="line">    stats auth admin:123456</span><br><span class="line">    stats hide-version</span><br><span class="line">    stats admin <span class="keyword">if</span> TRUE</span><br><span class="line"></span><br><span class="line">frontend kubernetes</span><br><span class="line">    <span class="built_in">bind</span> *:8443</span><br><span class="line">    mode tcp</span><br><span class="line">    default_backend kubernetes-master</span><br><span class="line"></span><br><span class="line">backend kubernetes-master</span><br><span class="line">    balance roundrobin</span><br><span class="line">    server k8s-master1 192.168.1.31:6443 check maxconn 2000</span><br><span class="line">    server k8s-master2 192.168.1.32:6443 check maxconn 2000</span><br><span class="line">    server k8s-master3 192.168.1.33:6443 check maxconn 2000</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>启动haproxy</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> haproxy &amp;&amp; systemctl start haproxy &amp;&amp; systemctl status haproxy</span><br></pre></td></tr></table></figure></li></ol><h3 id="部署keepalived"><a href="#部署keepalived" class="headerlink" title="部署keepalived"></a>部署keepalived</h3><ol><li><p>安装keepalived</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y keepalived</span><br></pre></td></tr></table></figure></li><li><p>keepalived配置文件，注意网卡interface未必全部一样，配置VIP为192.168.1.10</p></li></ol><ul><li><p>k8s-master1:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt; /etc/keepalived/keepalived.conf</span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id LVS_k8s</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script CheckK8sMaster &#123;</span><br><span class="line">    script <span class="string">"curl -k https://192.168.1.10:8443"</span></span><br><span class="line">    interval 3</span><br><span class="line">    timeout 9</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens160</span><br><span class="line">    virtual_router_id 100</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    mcast_src_ip 192.168.1.31</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass fana123</span><br><span class="line">    &#125;</span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">        192.168.1.32</span><br><span class="line">        192.168.1.33</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.1.10/24</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        CheckK8sMaster</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>k8s-master2:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt; /etc/keepalived/keepalived.conf</span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id LVS_k8s</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script CheckK8sMaster &#123;</span><br><span class="line">    script <span class="string">"curl -k https://192.168.1.10:8443"</span></span><br><span class="line">    interval 3</span><br><span class="line">    timeout 9</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface ens32</span><br><span class="line">    virtual_router_id 100</span><br><span class="line">    priority 90</span><br><span class="line">    advert_int 1</span><br><span class="line">    mcast_src_ip 192.168.1.32</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass fana123</span><br><span class="line">    &#125;</span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">        192.168.1.31</span><br><span class="line">        192.168.1.33</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.1.10/24</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        CheckK8sMaster</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>k8s-master3:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt; /etc/keepalived/keepalived.conf</span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id LVS_k8s</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script CheckK8sMaster &#123;</span><br><span class="line">    script <span class="string">"curl -k https://192.168.1.10:8443"</span></span><br><span class="line">    interval 3</span><br><span class="line">    timeout 9</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface ens160</span><br><span class="line">    virtual_router_id 100</span><br><span class="line">    priority 80</span><br><span class="line">    advert_int 1</span><br><span class="line">    mcast_src_ip 192.168.1.33</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass fana123</span><br><span class="line">    &#125;</span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">        192.168.1.31</span><br><span class="line">        192.168.1.32</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.1.10/24</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        CheckK8sMaster</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li></ul><ol><li><p>启动keepalived</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart keepalived &amp;&amp; systemctl <span class="built_in">enable</span> keepalived &amp;&amp; systemctl status keepalived</span><br></pre></td></tr></table></figure></li><li><p>查看三台vip(只有一台为VIP)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip addr |grep 1.10</span><br><span class="line">    inet 192.168.1.10/24 scope global secondary ens160</span><br></pre></td></tr></table></figure></li></ol><h2 id="部署master"><a href="#部署master" class="headerlink" title="部署master"></a>部署master</h2><p>kube-scheduler，kube-controller-manager 和 kube-apiserver 三者的功能紧密相关；同时kube-scheduler 和 kube-controller-manager 只能有一个进程处于工作状态，如果运行多个，则需要通过选举产生一个 leader；</p><h3 id="部署kubectl命令工具"><a href="#部署kubectl命令工具" class="headerlink" title="部署kubectl命令工具"></a>部署kubectl命令工具</h3><ol><li><p>创建CA证书</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://storage.googleapis.com/kubernetes-release/release/v1.14.3/kubernetes-server-linux-amd64.tar.gz</span><br><span class="line">tar -zxvf kubernetes-server-linux-amd64.tar.gz</span><br><span class="line"><span class="built_in">cd</span> kubernetes/server/bin</span><br><span class="line">cp kube-apiserver kubeadm kube-controller-manager kubectl kube-scheduler /usr/<span class="built_in">local</span>/bin</span><br><span class="line">scp -r kube-apiserver kubeadm kube-controller-manager kubectl kube-scheduler k8s-master2:/usr/<span class="built_in">local</span>/bin</span><br><span class="line">scp -r kube-apiserver kubeadm kube-controller-manager kubectl kube-scheduler k8s-master3:/usr/<span class="built_in">local</span>/bin</span><br></pre></td></tr></table></figure></li><li><p>创建CA证书</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/ssl</span><br><span class="line">cat &gt; admin-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"CN"</span>: <span class="string">"admin"</span>,</span><br><span class="line">  <span class="string">"hosts"</span>: [],</span><br><span class="line">  <span class="string">"key"</span>: &#123;</span><br><span class="line">    <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">    <span class="string">"size"</span>: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"names"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">      <span class="string">"ST"</span>: <span class="string">"ShangHai"</span>,</span><br><span class="line">      <span class="string">"L"</span>: <span class="string">"ShangHai"</span>,</span><br><span class="line">      <span class="string">"O"</span>: <span class="string">"system:masters"</span>,</span><br><span class="line">      <span class="string">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>生成证书和私钥</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=ca.pem \</span><br><span class="line">  -ca-key=ca-key.pem \</span><br><span class="line">  -config=ca-config.json \</span><br><span class="line">  -profile=kubernetes admin-csr.json | cfssljson -bare admin</span><br></pre></td></tr></table></figure></li><li><p>创建($HOME)/.kube/config文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl config <span class="built_in">set</span>-cluster kubernetes \</span><br><span class="line">  --certificate-authority=ca.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=https://192.168.1.10:8443 \</span><br><span class="line">  --kubeconfig=kubectl.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>设置客户端认证参数</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl config <span class="built_in">set</span>-credentials admin \</span><br><span class="line">  --client-certificate=admin.pem \</span><br><span class="line">  --client-key=admin-key.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --kubeconfig=kubectl.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>设置上下文参数</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl config <span class="built_in">set</span>-context kubernetes \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=admin \</span><br><span class="line">  --kubeconfig=kubectl.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>设置默认上下文</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl config use-context kubernetes --kubeconfig=kubectl.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>拷贝kubectl.kubeconfig文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cp kubectl.kubeconfig ~/.kube/config</span><br><span class="line">ssh -n 192.168.1.32 <span class="string">"mkdir -p /root/.kube &amp;&amp; exit"</span></span><br><span class="line">ssh -n 192.168.1.33 <span class="string">"mkdir -p /root/.kube &amp;&amp; exit"</span></span><br><span class="line">scp kubectl.kubeconfig 192.168.1.32:/root/.kube/config</span><br><span class="line">scp kubectl.kubeconfig 192.168.1.33:/root/.kube/config</span><br><span class="line"></span><br><span class="line">cp admin*.pem /etc/kubernetes/ssl/</span><br><span class="line">scp admin*.pem 192.168.1.32:/etc/kubernetes/ssl/</span><br><span class="line">scp admin*.pem 192.168.1.33:/etc/kubernetes/ssl/</span><br></pre></td></tr></table></figure></li></ol><h3 id="部署api-server"><a href="#部署api-server" class="headerlink" title="部署api-server"></a>部署api-server</h3><ol><li><p>创建CA证书,hosts字段指定授权使用该证书的IP或域名列表，这里列出了VIP/apiserver节点IP/kubernetes服务IP和域名  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/ssl</span><br><span class="line">cat &gt; kubernetes-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"CN"</span>: <span class="string">"kubernetes"</span>,</span><br><span class="line">  <span class="string">"hosts"</span>: [</span><br><span class="line">    <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="string">"192.168.1.31"</span>,</span><br><span class="line">    <span class="string">"192.168.1.32"</span>,</span><br><span class="line">    <span class="string">"192.168.1.33"</span>,</span><br><span class="line">    <span class="string">"192.168.1.10"</span>,</span><br><span class="line">    <span class="string">"10.254.0.1"</span>,</span><br><span class="line">    <span class="string">"kubernetes"</span>,</span><br><span class="line">    <span class="string">"kubernetes.default"</span>,</span><br><span class="line">    <span class="string">"kubernetes.default.svc"</span>,</span><br><span class="line">    <span class="string">"kubernetes.default.svc.cluster"</span>,</span><br><span class="line">    <span class="string">"kubernetes.default.svc.cluster.local"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"key"</span>: &#123;</span><br><span class="line">    <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">    <span class="string">"size"</span>: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"names"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">      <span class="string">"ST"</span>: <span class="string">"ShangHai"</span>,</span><br><span class="line">      <span class="string">"L"</span>: <span class="string">"ShangHai"</span>,</span><br><span class="line">      <span class="string">"O"</span>: <span class="string">"k8s"</span>,</span><br><span class="line">      <span class="string">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>生成证书和私钥</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=ca.pem \</span><br><span class="line">  -ca-key=ca-key.pem \</span><br><span class="line">  -config=ca-config.json \</span><br><span class="line">  -profile=kubernetes kubernetes-csr.json | cfssljson -bare kubernetes</span><br></pre></td></tr></table></figure></li><li><p>将证书拷贝到其他master节点</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp kubernetes*.pem /etc/kubernetes/ssl/</span><br><span class="line">scp kubernetes*.pem 192.168.1.32:/etc/kubernetes/ssl/</span><br><span class="line">scp kubernetes*.pem 192.168.1.33:/etc/kubernetes/ssl/</span><br></pre></td></tr></table></figure></li><li><p>创建加密配置文件，创建kube-apiserver使用的客户端令牌文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; encryption-config.yaml &lt;&lt;EOF</span><br><span class="line">kind: EncryptionConfig</span><br><span class="line">apiVersion: v1</span><br><span class="line">resources:</span><br><span class="line">  - resources:</span><br><span class="line">      - secrets</span><br><span class="line">    providers:</span><br><span class="line">      - aescbc:</span><br><span class="line">          keys:</span><br><span class="line">            - name: key1</span><br><span class="line">              secret: $(head -c 32 /dev/urandom | base64)</span><br><span class="line">      - identity: &#123;&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt; bootstrap-token.csv</span><br><span class="line">$(head -c 32 /dev/urandom | base64),kubelet-bootstrap,10001,<span class="string">"system:kubelet-bootstrap"</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>将加密文件拷贝到其他master节点</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp encryption-config.yaml bootstrap-token.csv /etc/kubernetes/ssl</span><br><span class="line">scp encryption-config.yaml bootstrap-token.csv 192.168.1.32:/etc/kubernetes/ssl</span><br><span class="line">scp encryption-config.yaml bootstrap-token.csv 192.168.1.33:/etc/kubernetes/ssl</span><br></pre></td></tr></table></figure></li><li><p>创建kube-apiserver.service文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/systemd/system/kube-apiserver.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes API Server</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/kube-apiserver \</span><br><span class="line">  --<span class="built_in">enable</span>-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota \</span><br><span class="line">  --anonymous-auth=<span class="literal">false</span> \</span><br><span class="line">  --experimental-encryption-provider-config=/etc/kubernetes/ssl/encryption-config.yaml \</span><br><span class="line">  --advertise-address=0.0.0.0 \</span><br><span class="line">  --<span class="built_in">bind</span>-address=0.0.0.0 \</span><br><span class="line">  --insecure-bind-address=127.0.0.1 \</span><br><span class="line">  --secure-port=6443 \</span><br><span class="line">  --insecure-port=0 \</span><br><span class="line">  --authorization-mode=Node,RBAC \</span><br><span class="line">  --runtime-config=api/all \</span><br><span class="line">  --<span class="built_in">enable</span>-bootstrap-token-auth \</span><br><span class="line">  --service-cluster-ip-range=10.254.0.0/16 \</span><br><span class="line">  --service-node-port-range=30000-32700 \</span><br><span class="line">  --tls-cert-file=/etc/kubernetes/ssl/kubernetes.pem \</span><br><span class="line">  --tls-private-key-file=/etc/kubernetes/ssl/kubernetes-key.pem \</span><br><span class="line">  --client-ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --kubelet-client-certificate=/etc/kubernetes/ssl/kubernetes.pem \</span><br><span class="line">  --kubelet-client-key=/etc/kubernetes/ssl/kubernetes-key.pem \</span><br><span class="line">  --service-account-key-file=/etc/kubernetes/ssl/ca-key.pem \</span><br><span class="line">  --etcd-cafile=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --etcd-certfile=/etc/kubernetes/ssl/kubernetes.pem \</span><br><span class="line">  --etcd-keyfile=/etc/kubernetes/ssl/kubernetes-key.pem \</span><br><span class="line">  --etcd-servers=https://192.168.1.31:2379,https://192.168.1.32:2379,https://192.168.1.33:2379 \</span><br><span class="line">  --<span class="built_in">enable</span>-swagger-ui=<span class="literal">true</span> \</span><br><span class="line">  --allow-privileged=<span class="literal">true</span> \</span><br><span class="line">  --apiserver-count=3 \</span><br><span class="line">  --audit-log-maxage=30 \</span><br><span class="line">  --audit-log-maxbackup=3 \</span><br><span class="line">  --audit-log-maxsize=100 \</span><br><span class="line">  --audit-log-path=/var/<span class="built_in">log</span>/kubernetes/kube-apiserver-audit.log \</span><br><span class="line">  --event-ttl=1h \</span><br><span class="line">  --alsologtostderr=<span class="literal">true</span> \</span><br><span class="line">  --logtostderr=<span class="literal">false</span> \</span><br><span class="line">  --<span class="built_in">log</span>-dir=/var/<span class="built_in">log</span>/kubernetes \</span><br><span class="line">  --v=2</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line">Type=notify</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">mkdir -p /var/<span class="built_in">log</span>/kubernetes</span><br><span class="line">ssh -n 192.168.1.32 <span class="string">"mkdir -p /var/log/kubernetes &amp;&amp; exit"</span></span><br><span class="line">ssh -n 192.168.1.33 <span class="string">"mkdir -p /var/log/kubernetes &amp;&amp; exit"</span></span><br><span class="line">scp /etc/systemd/system/kube-apiserver.service 192.168.1.32:/etc/systemd/system/</span><br><span class="line">scp /etc/systemd/system/kube-apiserver.service 192.168.1.33:/etc/systemd/system/</span><br><span class="line"><span class="comment"># --bind-address --insecure-bind-address 填固定IPv4地址，不然启动为ipv6，controller-manager总是报错</span></span><br></pre></td></tr></table></figure></li><li><p>启动服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload &amp;&amp; systemctl <span class="built_in">enable</span> kube-apiserver &amp;&amp; systemctl start kube-apiserver &amp;&amp; systemctl status kube-apiserver</span><br></pre></td></tr></table></figure></li><li><p>授予kubernetes证书访问kubelet api权限。在执行kubectl exec、run、logs 等命令时，apiserver会转发到kubelet。这里定义 RBAC规则，授权apiserver调用kubelet API。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl create clusterrolebinding kube-apiserver:kubelet-apis --clusterrole=system:kubelet-api-admin --user kubernetes</span><br><span class="line">＃预定义的ClusterRole system:kubelet-api-admin授予访问kubelet所有 API 的权限</span><br><span class="line">kubectl describe clusterrole system:kubelet-api-admin</span><br></pre></td></tr></table></figure></li><li><p>检查api-server和集群状态</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">netstat -tnlp|grep 6443</span><br><span class="line">tcp6       0      0 :::6443                 :::*                    LISTEN      23462/kube-apiserve </span><br><span class="line"></span><br><span class="line">kubectl cluster-info</span><br><span class="line">Kubernetes master is running at https://192.168.1.10:8443</span><br><span class="line">To further debug and diagnose cluster problems, use <span class="string">'kubectl cluster-info dump'</span>.</span><br><span class="line"></span><br><span class="line">kubectl get all --all-namespaces</span><br><span class="line">NAMESPACE   NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">default     service/kubernetes   ClusterIP   10.254.0.1   &lt;none&gt;        443/TCP   6m44s</span><br><span class="line"></span><br><span class="line">kubectl get componentstatuses</span><br><span class="line">NAME                 STATUS      MESSAGE                                                                                     ERROR</span><br><span class="line">scheduler            Unhealthy   Get http://127.0.0.1:10251/healthz: dial tcp 127.0.0.1:10251: connect: connection refused   </span><br><span class="line">controller-manager   Unhealthy   Get http://127.0.0.1:10252/healthz: dial tcp 127.0.0.1:10252: connect: connection refused   </span><br><span class="line">etcd-0               Healthy     &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125;                                                                           </span><br><span class="line">etcd-1               Healthy     &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125;                                                                           </span><br><span class="line">etcd-2               Healthy     &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="部署kube-controller-manager"><a href="#部署kube-controller-manager" class="headerlink" title="部署kube-controller-manager"></a>部署kube-controller-manager</h3><p>该集群包含 3 个节点，启动后将通过竞争选举机制产生一个 leader 节点，其它节点为阻塞状态。当 leader 节点不可用后，剩余节点将再次进行选举产生新的 leader 节点，从而保证服务的可用性。  </p><ol><li><p>创建CA证书</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/ssl</span><br><span class="line">cat &gt; kube-controller-manager-csr.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"CN"</span>: <span class="string">"system:kube-controller-manager"</span>,</span><br><span class="line">    <span class="string">"key"</span>: &#123;</span><br><span class="line">        <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">        <span class="string">"size"</span>: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"hosts"</span>: [</span><br><span class="line">      <span class="string">"127.0.0.1"</span>,</span><br><span class="line">      <span class="string">"192.168.1.31"</span>,</span><br><span class="line">      <span class="string">"192.168.1.32"</span>,</span><br><span class="line">      <span class="string">"192.168.1.33"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"names"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">        <span class="string">"ST"</span>: <span class="string">"ShangHai"</span>,</span><br><span class="line">        <span class="string">"L"</span>: <span class="string">"ShangHai"</span>,</span><br><span class="line">        <span class="string">"O"</span>: <span class="string">"system:kube-controller-manager"</span>,</span><br><span class="line">        <span class="string">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>生成证书</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=ca.pem \</span><br><span class="line">  -ca-key=ca-key.pem \</span><br><span class="line">  -config=ca-config.json \</span><br><span class="line">  -profile=kubernetes kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager</span><br></pre></td></tr></table></figure></li><li><p>将证书拷贝到其他master节点</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp kube-controller-manager*.pem /etc/kubernetes/ssl/</span><br><span class="line">scp kube-controller-manager*.pem 192.168.1.32:/etc/kubernetes/ssl/</span><br><span class="line">scp kube-controller-manager*.pem 192.168.1.33:/etc/kubernetes/ssl/</span><br></pre></td></tr></table></figure></li><li><p>创建kubeconfig文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">kubectl config <span class="built_in">set</span>-cluster kubernetes \</span><br><span class="line">  --certificate-authority=ca.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=https://192.168.1.10:8443 \</span><br><span class="line">  --kubeconfig=kube-controller-manager.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config <span class="built_in">set</span>-credentials system:kube-controller-manager \</span><br><span class="line">  --client-certificate=kube-controller-manager.pem \</span><br><span class="line">  --client-key=kube-controller-manager-key.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --kubeconfig=kube-controller-manager.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config <span class="built_in">set</span>-context system:kube-controller-manager \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=system:kube-controller-manager \</span><br><span class="line">  --kubeconfig=kube-controller-manager.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config use-context system:kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>拷贝kube-controller-manager.kubeconfig到其他master节点</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp kube-controller-manager.kubeconfig /etc/kubernetes/ssl/</span><br><span class="line">scp kube-controller-manager.kubeconfig 192.168.1.32:/etc/kubernetes/ssl/</span><br><span class="line">scp kube-controller-manager.kubeconfig 192.168.1.33:/etc/kubernetes/ssl/</span><br></pre></td></tr></table></figure></li><li><p>创建kube-controller-manager.service文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/systemd/system/kube-controller-manager.service  &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Controller Manager</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/kube-controller-manager \</span><br><span class="line">  --address=127.0.0.1 \</span><br><span class="line">  --master=https://192.168.1.10:8443 \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/ssl/kube-controller-manager.kubeconfig \</span><br><span class="line">  --allocate-node-cidrs=<span class="literal">true</span> \</span><br><span class="line">  --authentication-kubeconfig=/etc/kubernetes/ssl/kube-controller-manager.kubeconfig \</span><br><span class="line">  --service-cluster-ip-range=10.254.0.0/16 \</span><br><span class="line">  --cluster-cidr=172.30.0.0/16 \</span><br><span class="line">  --cluster-name=kubernetes \</span><br><span class="line">  --cluster-signing-cert-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --cluster-signing-key-file=/etc/kubernetes/ssl/ca-key.pem \</span><br><span class="line">  --experimental-cluster-signing-duration=8760h \</span><br><span class="line">  --leader-elect=<span class="literal">true</span> \</span><br><span class="line">  --feature-gates=RotateKubeletServerCertificate=<span class="literal">true</span> \</span><br><span class="line">  --controllers=*,bootstrapsigner,tokencleaner \</span><br><span class="line">  --horizontal-pod-autoscaler-use-rest-clients=<span class="literal">true</span> \</span><br><span class="line">  --horizontal-pod-autoscaler-sync-period=10s \</span><br><span class="line">  --tls-cert-file=/etc/kubernetes/ssl/kube-controller-manager.pem \</span><br><span class="line">  --tls-private-key-file=/etc/kubernetes/ssl/kube-controller-manager-key.pem \</span><br><span class="line">  --service-account-private-key-file=/etc/kubernetes/ssl/ca-key.pem \</span><br><span class="line">  --root-ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --use-service-account-credentials=<span class="literal">true</span> \</span><br><span class="line">  --alsologtostderr=<span class="literal">true</span> \</span><br><span class="line">  --logtostderr=<span class="literal">false</span> \</span><br><span class="line">  --<span class="built_in">log</span>-dir=/var/<span class="built_in">log</span>/kubernetes \</span><br><span class="line">  --v=2</span><br><span class="line">Restart=on</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>拷贝到其他master节点，然后启动服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scp /etc/systemd/system/kube-controller-manager.service 192.168.1.32:/etc/systemd/system/</span><br><span class="line">scp /etc/systemd/system/kube-controller-manager.service 192.168.1.33:/etc/systemd/system/</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl <span class="built_in">enable</span> kube-controller-manager &amp;&amp; systemctl start kube-controller-manager &amp;&amp; systemctl status kube-controller-manager</span><br></pre></td></tr></table></figure></li><li><p>检查服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">netstat -tnlp|grep kube-controll</span><br><span class="line">tcp        0      0 127.0.0.1:10252         0.0.0.0:*               LISTEN      24125/kube-controll </span><br><span class="line">tcp6       0      0 :::10257                :::*                    LISTEN      24125/kube-controll</span><br><span class="line"></span><br><span class="line">kubectl get cs</span><br><span class="line">NAME                 STATUS      MESSAGE                                                                                     ERROR</span><br><span class="line">scheduler            Unhealthy   Get http://127.0.0.1:10251/healthz: dial tcp 127.0.0.1:10251: connect: connection refused   </span><br><span class="line">controller-manager   Healthy     ok                                                                                          </span><br><span class="line">etcd-0               Healthy     &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125;                                                                           </span><br><span class="line">etcd-1               Healthy     &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125;                                                                           </span><br><span class="line">etcd-2               Healthy     &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125;</span><br><span class="line"></span><br><span class="line">检查leader所在机器,如下k8s-master1选为leader</span><br><span class="line">kubectl get endpoints kube-controller-manager --namespace=kube-system -o yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  annotations:</span><br><span class="line">    control-plane.alpha.kubernetes.io/leader: <span class="string">'&#123;"holderIdentity":"k8s-master1_836ddc44-c586-11e9-94e1-000c29178d85","leaseDurationSeconds":15,"acquireTime":"2019-08-23T09:15:13Z","renewTime":"2019-08-23T09:16:49Z","leaderTransitions":0&#125;'</span></span><br><span class="line">  creationTimestamp: <span class="string">"2019-08-23T09:15:13Z"</span></span><br><span class="line">  name: kube-controller-manager</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  resourceVersion: <span class="string">"654"</span></span><br><span class="line">  selfLink: /api/v1/namespaces/kube-system/endpoints/kube-controller-manager</span><br><span class="line">  uid: 8371cd23-c586-11e9-b643-000c29327412</span><br></pre></td></tr></table></figure></li></ol><h3 id="部署kube-scheduler"><a href="#部署kube-scheduler" class="headerlink" title="部署kube-scheduler"></a>部署kube-scheduler</h3><p>该集群包含 3 个节点，启动后将通过竞争选举机制产生一个 leader 节点，其它节点为阻塞状态。当 leader 节点不可用后，剩余节点将再次进行选举产生新的 leader 节点，从而保证服务的可用性</p><ol><li><p>创建CA证书</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/ssl</span><br><span class="line">cat &gt; kube-scheduler-csr.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"CN"</span>: <span class="string">"system:kube-scheduler"</span>,</span><br><span class="line">    <span class="string">"hosts"</span>: [</span><br><span class="line">      <span class="string">"127.0.0.1"</span>,</span><br><span class="line">      <span class="string">"192.168.1.31"</span>,</span><br><span class="line">      <span class="string">"192.168.1.32"</span>,</span><br><span class="line">      <span class="string">"192.168.1.33"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"key"</span>: &#123;</span><br><span class="line">        <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">        <span class="string">"size"</span>: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"names"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">        <span class="string">"ST"</span>: <span class="string">"ShangHai"</span>,</span><br><span class="line">        <span class="string">"L"</span>: <span class="string">"ShangHai"</span>,</span><br><span class="line">        <span class="string">"O"</span>: <span class="string">"system:kube-scheduler"</span>,</span><br><span class="line">        <span class="string">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>生成证书</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=ca.pem \</span><br><span class="line">  -ca-key=ca-key.pem \</span><br><span class="line">  -config=ca-config.json \</span><br><span class="line">  -profile=kubernetes kube-scheduler-csr.json | cfssljson -bare kube-scheduler</span><br></pre></td></tr></table></figure></li><li><p>创建kube-scheduler.kubeconfig文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">kubectl config <span class="built_in">set</span>-cluster kubernetes \</span><br><span class="line">  --certificate-authority=ca.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=https://192.168.1.10:8443 \</span><br><span class="line">  --kubeconfig=kube-scheduler.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config <span class="built_in">set</span>-credentials system:kube-scheduler \</span><br><span class="line">  --client-certificate=kube-scheduler.pem \</span><br><span class="line">  --client-key=kube-scheduler-key.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --kubeconfig=kube-scheduler.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config <span class="built_in">set</span>-context system:kube-scheduler \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=system:kube-scheduler \</span><br><span class="line">  --kubeconfig=kube-scheduler.kubeconfig</span><br><span class="line"></span><br><span class="line">kubectl config use-context system:kube-scheduler --kubeconfig=kube-scheduler.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>拷贝kubeconfig到其他master节点</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp kube-scheduler.kubeconfig kube-scheduler*.pem /etc/kubernetes/ssl/</span><br><span class="line">scp kube-scheduler.kubeconfig kube-scheduler*.pem 192.168.1.32:/etc/kubernetes/ssl/</span><br><span class="line">scp kube-scheduler.kubeconfig kube-scheduler*.pem 192.168.1.33:/etc/kubernetes/ssl/</span><br></pre></td></tr></table></figure></li><li><p>创建kube-scheduler.service文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/systemd/system/kube-scheduler.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Scheduler</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/kube-scheduler \</span><br><span class="line">  --address=127.0.0.1 \</span><br><span class="line">  --master=https://192.168.1.10:8443 \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/ssl/kube-scheduler.kubeconfig \</span><br><span class="line">  --leader-elect=<span class="literal">true</span> \</span><br><span class="line">  --alsologtostderr=<span class="literal">true</span> \</span><br><span class="line">  --logtostderr=<span class="literal">false</span> \</span><br><span class="line">  --<span class="built_in">log</span>-dir=/var/<span class="built_in">log</span>/kubernetes \</span><br><span class="line">  --v=2</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>将kube-scheduler.service拷贝到其他master节点，然后启动服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scp /etc/systemd/system/kube-scheduler.service 192.168.1.32:/etc/systemd/system</span><br><span class="line">scp /etc/systemd/system/kube-scheduler.service 192.168.1.33:/etc/systemd/system</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl <span class="built_in">enable</span> kube-scheduler &amp;&amp; systemctl start kube-scheduler &amp;&amp; systemctl status kube-scheduler</span><br></pre></td></tr></table></figure></li><li><p>检查服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">netstat -lnpt|grep kube-sched</span><br><span class="line">tcp        0      0 127.0.0.1:10251         0.0.0.0:*               LISTEN      24760/kube-schedule </span><br><span class="line">tcp6       0      0 :::10259                :::*                    LISTEN      24760/kube-schedule </span><br><span class="line"></span><br><span class="line">kubectl get cs</span><br><span class="line">NAME                 STATUS    MESSAGE             ERROR</span><br><span class="line">controller-manager   Healthy   ok                  </span><br><span class="line">scheduler            Healthy   ok                  </span><br><span class="line">etcd-2               Healthy   &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125;   </span><br><span class="line">etcd-0               Healthy   &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125;   </span><br><span class="line">etcd-1               Healthy   &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125; </span><br><span class="line"></span><br><span class="line">kubectl get endpoints kube-scheduler --namespace=kube-system  -o yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  annotations:</span><br><span class="line">    control-plane.alpha.kubernetes.io/leader: <span class="string">'&#123;"holderIdentity":"k8s-master3_74560974-c588-11e9-b994-000c297ea248","leaseDurationSeconds":15,"acquireTime":"2019-08-23T09:29:07Z","renewTime":"2019-08-23T09:30:38Z","leaderTransitions":0&#125;'</span></span><br><span class="line">  creationTimestamp: <span class="string">"2019-08-23T09:29:07Z"</span></span><br><span class="line">  name: kube-scheduler</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  resourceVersion: <span class="string">"1365"</span></span><br><span class="line">  selfLink: /api/v1/namespaces/kube-system/endpoints/kube-scheduler</span><br><span class="line">  uid: 74ec81d5-c588-11e9-b643-000c29327412</span><br></pre></td></tr></table></figure></li></ol><h3 id="在所有master节点上查看功能是否正常"><a href="#在所有master节点上查看功能是否正常" class="headerlink" title="在所有master节点上查看功能是否正常"></a>在所有master节点上查看功能是否正常</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">kubectl get componentstatuses</span><br><span class="line">NAME                 STATUS    MESSAGE             ERROR</span><br><span class="line">controller-manager   Healthy   ok                  </span><br><span class="line">scheduler            Healthy   ok                  </span><br><span class="line">etcd-2               Healthy   &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125;   </span><br><span class="line">etcd-1               Healthy   &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125;   </span><br><span class="line">etcd-0               Healthy   &#123;<span class="string">"health"</span>:<span class="string">"true"</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="部署node"><a href="#部署node" class="headerlink" title="部署node"></a>部署node</h2><p>node节点运行 docker flannel kubelet kube-proxy</p><p><strong><em>先配置Centos环境,完成安装前配置和Docker，flannel的安装</em></strong></p><ol><li>安装flanneld<br><strong><em>将master上的文件cp到worker节点，并且安装启动flanneld</em></strong><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh -n 192.168.1.35 <span class="string">"mkdir -p /etc/kubernetes/ssl &amp;&amp; exit"</span></span><br><span class="line">scp ca.pem 192.168.1.35:/etc/kubernetes/ssl</span><br><span class="line">scp flanneld*.pem 192.168.1.35:/etc/kubernetes/ssl</span><br></pre></td></tr></table></figure></li></ol><p>之后完成部署flannel中的安装flannel</p><h3 id="部署kubelet"><a href="#部署kubelet" class="headerlink" title="部署kubelet"></a>部署kubelet</h3><p>kubelet运行在每个 worker 节点上，接收 kube-apiserver 发送的请求，管理 Pod 容器，执行交互式命令，如 exec、run、logs 等。kubelet 启动时自动向 kube-apiserver注册节点信息，内置的 cadvisor 统计和监控节点的资源使用情况。</p><ol><li><p>下载解压包，拷贝命令(worker节点)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://storage.googleapis.com/kubernetes-release/release/v1.14.3/kubernetes-node-linux-amd64.tar.gz</span><br><span class="line">tar -zxvf kubernetes-node-linux-amd64.tar.gz</span><br><span class="line">cp kubectl kubelet kube-proxy /usr/<span class="built_in">local</span>/bin</span><br></pre></td></tr></table></figure></li><li><p>创建kubelet-bootstrap.kubeconfig文件,要创建3次分别是(k8s-master1,k8s-master2,k8s-master3),都在master1上执行</p></li></ol><ul><li><p>k8s-master1:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建token</span></span><br><span class="line"><span class="built_in">cd</span> /root/ssl</span><br><span class="line"><span class="built_in">export</span> BOOTSTRAP_TOKEN=$(kubeadm token create \</span><br><span class="line">  --description kubelet-bootstrap-token \</span><br><span class="line">  --groups system:bootstrappers:k8s-master1 \</span><br><span class="line">  --kubeconfig ~/.kube/config)</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置集群参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-cluster kubernetes \</span><br><span class="line">  --certificate-authority=ca.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=https://192.168.1.10:8443 \</span><br><span class="line">  --kubeconfig=kubelet-bootstrap-k8s-master1.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置客户端认证参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-credentials kubelet-bootstrap \</span><br><span class="line">  --token=<span class="variable">$&#123;BOOTSTRAP_TOKEN&#125;</span> \</span><br><span class="line">  --kubeconfig=kubelet-bootstrap-k8s-master1.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置上下文参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=kubelet-bootstrap \</span><br><span class="line">  --kubeconfig=kubelet-bootstrap-k8s-master1.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置默认上下文</span></span><br><span class="line">kubectl config use-context default --kubeconfig=kubelet-bootstrap-k8s-master1.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>k8s-master2:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建token</span></span><br><span class="line"><span class="built_in">cd</span> /root/ssl</span><br><span class="line"><span class="built_in">export</span> BOOTSTRAP_TOKEN=$(kubeadm token create \</span><br><span class="line">  --description kubelet-bootstrap-token \</span><br><span class="line">  --groups system:bootstrappers:k8s-master2 \</span><br><span class="line">  --kubeconfig ~/.kube/config)</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置集群参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-cluster kubernetes \</span><br><span class="line">  --certificate-authority=ca.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=https://192.168.1.10:8443 \</span><br><span class="line">  --kubeconfig=kubelet-bootstrap-k8s-master2.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置客户端认证参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-credentials kubelet-bootstrap \</span><br><span class="line">  --token=<span class="variable">$&#123;BOOTSTRAP_TOKEN&#125;</span> \</span><br><span class="line">  --kubeconfig=kubelet-bootstrap-k8s-master2.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置上下文参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=kubelet-bootstrap \</span><br><span class="line">  --kubeconfig=kubelet-bootstrap-k8s-master2.kubeconfig</span><br><span class="line"><span class="comment">#设置默认上下文</span></span><br><span class="line">kubectl config use-context default --kubeconfig=kubelet-bootstrap-k8s-master2.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>k8s-master3:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建token</span></span><br><span class="line"><span class="built_in">cd</span> /root/ssl</span><br><span class="line"><span class="built_in">export</span> BOOTSTRAP_TOKEN=$(kubeadm token create \</span><br><span class="line">  --description kubelet-bootstrap-token \</span><br><span class="line">  --groups system:bootstrappers:k8s-master3 \</span><br><span class="line">  --kubeconfig ~/.kube/config)</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置集群参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-cluster kubernetes \</span><br><span class="line">  --certificate-authority=ca.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=https://192.168.1.10:8443 \</span><br><span class="line">  --kubeconfig=kubelet-bootstrap-k8s-master3.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置客户端认证参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-credentials kubelet-bootstrap \</span><br><span class="line">  --token=<span class="variable">$&#123;BOOTSTRAP_TOKEN&#125;</span> \</span><br><span class="line">  --kubeconfig=kubelet-bootstrap-k8s-master3.kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置上下文参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=kubelet-bootstrap \</span><br><span class="line">  --kubeconfig=kubelet-bootstrap-k8s-master3.kubeconfig</span><br><span class="line"><span class="comment">#设置默认上下文</span></span><br><span class="line">kubectl config use-context default --kubeconfig=kubelet-bootstrap-k8s-master3.kubeconfig</span><br></pre></td></tr></table></figure></li></ul><ol><li><p>查看kubeadm为各节点创建的token(各master节点都可以查看)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">kubeadm token list --kubeconfig ~/.kube/config</span><br><span class="line"><span class="comment">#显示如下</span></span><br><span class="line">TOKEN                     TTL       EXPIRES                     USAGES                   DESCRIPTION               EXTRA GROUPS</span><br><span class="line">3exm03.8530h7t1j1v1sfl5   22h       2019-08-28T18:00:05+08:00   authentication,signing   kubelet-bootstrap-token   system:bootstrappers:k8s-master1</span><br><span class="line">6p1ewd.om5m45f26imnd7an   22h       2019-08-28T18:00:05+08:00   authentication,signing   kubelet-bootstrap-token   system:bootstrappers:k8s-master2</span><br><span class="line">l9yyz0.6g13y8ffsdab9lo5   22h       2019-08-28T18:00:05+08:00   authentication,signing   kubelet-bootstrap-token   system:bootstrappers:k8s-master3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果需要删除创建的token</span></span><br><span class="line">kubeadm token --kubeconfig ~/.kube/config delete l9yyz0.6g13y8ffsdab9lo5</span><br><span class="line"><span class="comment"># 查看各token关联的secret</span></span><br><span class="line">kubectl get secrets  -n kube-system</span><br></pre></td></tr></table></figure></li><li><p>拷贝bootstrap kubeconfig文件到各个node机器上</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh -n 192.168.1.35 <span class="string">"mkdir -p /etc/kubernetes/ssl &amp;&amp; exit"</span></span><br><span class="line">scp kubelet-bootstrap-k8s-master1.kubeconfig 192.168.1.35:/etc/kubernetes/ssl/kubelet-bootstrap.kubeconfig</span><br><span class="line">scp kubelet-bootstrap-k8s-master2.kubeconfig 192.168.1.35:/etc/kubernetes/ssl/kubelet-bootstrap.kubeconfig</span><br><span class="line">scp kubelet-bootstrap-k8s-master3.kubeconfig 192.168.1.35:/etc/kubernetes/ssl/kubelet-bootstrap.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>创建kubelet配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/ssl</span><br><span class="line">cat &gt; kubelet.config.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"kind"</span>: <span class="string">"KubeletConfiguration"</span>,</span><br><span class="line">  <span class="string">"apiVersion"</span>: <span class="string">"kubelet.config.k8s.io/v1beta1"</span>,</span><br><span class="line">  <span class="string">"authentication"</span>: &#123;</span><br><span class="line">    <span class="string">"x509"</span>: &#123;</span><br><span class="line">      <span class="string">"clientCAFile"</span>: <span class="string">"/etc/kubernetes/ssl/ca.pem"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"webhook"</span>: &#123;</span><br><span class="line">      <span class="string">"enabled"</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">"cacheTTL"</span>: <span class="string">"2m0s"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"anonymous"</span>: &#123;</span><br><span class="line">      <span class="string">"enabled"</span>: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"authorization"</span>: &#123;</span><br><span class="line">    <span class="string">"mode"</span>: <span class="string">"Webhook"</span>,</span><br><span class="line">    <span class="string">"webhook"</span>: &#123;</span><br><span class="line">      <span class="string">"cacheAuthorizedTTL"</span>: <span class="string">"5m0s"</span>,</span><br><span class="line">      <span class="string">"cacheUnauthorizedTTL"</span>: <span class="string">"30s"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"address"</span>: <span class="string">"192.168.1.35"</span>,</span><br><span class="line">  <span class="string">"port"</span>: 10250,</span><br><span class="line">  <span class="string">"readOnlyPort"</span>: 0,</span><br><span class="line">  <span class="string">"cgroupDriver"</span>: <span class="string">"cgroupfs"</span>,</span><br><span class="line">  <span class="string">"hairpinMode"</span>: <span class="string">"promiscuous-bridge"</span>,</span><br><span class="line">  <span class="string">"serializeImagePulls"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"featureGates"</span>: &#123;</span><br><span class="line">    <span class="string">"RotateKubeletClientCertificate"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">"RotateKubeletServerCertificate"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"clusterDomain"</span>: <span class="string">"cluster.local"</span>,</span><br><span class="line">  <span class="string">"clusterDNS"</span>: [<span class="string">"10.254.0.2"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>拷贝到其他主机,注意，可以修改address为本机IP地址</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp kubelet.config.json /etc/kubernetes/ssl</span><br><span class="line">scp kubelet.config.json 192.168.1.35:/etc/kubernetes/ssl</span><br></pre></td></tr></table></figure></li><li><p>创建kubelet.service文件(worker节点)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/<span class="built_in">log</span>/kubernetes &amp;&amp; mkdir -p /var/lib/kubelet</span><br><span class="line">cat &lt;&lt;EOF &gt; /etc/systemd/system/kubelet.service </span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Kubelet</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line">After=docker.service</span><br><span class="line">Requires=docker.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">WorkingDirectory=/var/lib/kubelet</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/kubelet \</span><br><span class="line">  --bootstrap-kubeconfig=/etc/kubernetes/ssl/kubelet-bootstrap.kubeconfig \</span><br><span class="line">  --cert-dir=/etc/kubernetes/ssl \</span><br><span class="line">  --network-plugin=cni \</span><br><span class="line">  --cni-conf-dir=/etc/cni/net.d \</span><br><span class="line">  --cni-bin-dir=/usr/<span class="built_in">local</span>/bin/ \</span><br><span class="line">  --fail-swap-on=<span class="literal">false</span> \</span><br><span class="line">  --kubeconfig=/etc/kubernetes/ssl/kubelet-bootstrap.kubeconfig \</span><br><span class="line">  --config=/etc/kubernetes/ssl/kubelet.config.json \</span><br><span class="line">  --hostname-override=192.168.1.35 \</span><br><span class="line">  --pod-infra-container-image=registry.cn-hangzhou.aliyuncs.com/google_containers/pause-amd64:3.1 \</span><br><span class="line">  --allow-privileged=<span class="literal">true</span> \</span><br><span class="line">  --alsologtostderr=<span class="literal">true</span> \</span><br><span class="line">  --logtostderr=<span class="literal">false</span> \</span><br><span class="line">  --cgroup-driver=systemd \</span><br><span class="line">  --<span class="built_in">log</span>-dir=/var/<span class="built_in">log</span>/kubernetes \</span><br><span class="line">  --v=2</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li></ol><p><strong><em>Bootstrap Token Auth 和授予权限 ,需要先将bootstrap-token文件中的kubelet-bootstrap用户赋予system:node-bootstrapper角色，然后kubelet才有权限创建认证请求</em></strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create clusterrolebinding kubelet-bootstrap --clusterrole=system:node-bootstrapper --group=system:bootstrappers</span><br></pre></td></tr></table></figure><ol><li><p>启动kubele服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload &amp;&amp; systemctl <span class="built_in">enable</span> kubelet &amp;&amp; systemctl restart kubelet &amp;&amp; systemctl status kubelet</span><br></pre></td></tr></table></figure></li><li><p>检查服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">netstat -lantp|grep kubelet</span><br><span class="line"><span class="comment"># 通过kubelet 的TLS 证书请求，kubelet 首次启动时向kube-apiserver 发送证书签名请求，必须通过后kubernetes 系统才会将该 Node 加入到集群。查看未授权的CSR 请求</span></span><br><span class="line">kubectl get csr</span><br><span class="line">NAME                                                   AGE   REQUESTOR                 CONDITION</span><br><span class="line">node-csr-F0yftUyMpWGyDFRPUoGfF5XgbtPFEfyakLidUu9GY6c   99m   system:bootstrap:balnwx   Pending</span><br></pre></td></tr></table></figure></li><li><p>approve kubelet csr请求(手动和自动选其一)</p></li></ol><p>1.手动approve csr请求(推荐自动的方式)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">kubectl certificate approve node-csr-YNCI2r5QgwPTj4JR7X0VswSR0klbgG2rZ6R7rb_NIcs</span><br><span class="line"><span class="comment">#显示</span></span><br><span class="line">certificatesigningrequest.certificates.k8s.io/node-csr-YNCI2r5QgwPTj4JR7X0VswSR0klbgG2rZ6R7rb_NIcs approved</span><br><span class="line"><span class="comment">#查看结果</span></span><br><span class="line">kubectl describe csr node-csr-YNCI2r5QgwPTj4JR7X0VswSR0klbgG2rZ6R7rb_NIcs</span><br><span class="line">Name:               node-csr-YNCI2r5QgwPTj4JR7X0VswSR0klbgG2rZ6R7rb_NIcs</span><br><span class="line">Labels:             &lt;none&gt;</span><br><span class="line">Annotations:        &lt;none&gt;</span><br><span class="line">CreationTimestamp:  Tue, 27 Aug 2019 17:23:29 +0800</span><br><span class="line">Requesting User:    system:bootstrap:balnwx</span><br><span class="line">Status:             Approved,Issued</span><br><span class="line">Subject:</span><br><span class="line">         Common Name:    system:node:192.168.1.35</span><br><span class="line">         Serial Number:  </span><br><span class="line">         Organization:   system:nodes</span><br><span class="line">Events:  &lt;none&gt;</span><br></pre></td></tr></table></figure><p>2.自动approve csr请求方式</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建ClusterRoleBinding，分别用于自动 approve client、renew client、renew server 证书</span></span><br><span class="line"><span class="built_in">cd</span> /root/ssl</span><br><span class="line">cat &gt; csr-crb.yaml &lt;&lt;EOF</span><br><span class="line"><span class="comment"># Approve all CSRs for the group "system:bootstrappers"</span></span><br><span class="line"> kind: ClusterRoleBinding</span><br><span class="line"> apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line"> metadata:</span><br><span class="line">   name: auto-approve-csrs-for-group</span><br><span class="line"> subjects:</span><br><span class="line"> - kind: Group</span><br><span class="line">   name: system:bootstrappers</span><br><span class="line">   apiGroup: rbac.authorization.k8s.io</span><br><span class="line"> roleRef:</span><br><span class="line">   kind: ClusterRole</span><br><span class="line">   name: system:certificates.k8s.io:certificatesigningrequests:nodeclient</span><br><span class="line">   apiGroup: rbac.authorization.k8s.io</span><br><span class="line">---</span><br><span class="line"> <span class="comment"># To let a node of the group "system:bootstrappers" renew its own credentials</span></span><br><span class="line"> kind: ClusterRoleBinding</span><br><span class="line"> apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line"> metadata:</span><br><span class="line">   name: node-client-cert-renewal</span><br><span class="line"> subjects:</span><br><span class="line"> - kind: Group</span><br><span class="line">   name: system:bootstrappers</span><br><span class="line">   apiGroup: rbac.authorization.k8s.io</span><br><span class="line"> roleRef:</span><br><span class="line">   kind: ClusterRole</span><br><span class="line">   name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient</span><br><span class="line">   apiGroup: rbac.authorization.k8s.io</span><br><span class="line">---</span><br><span class="line"><span class="comment"># A ClusterRole which instructs the CSR approver to approve a node requesting a</span></span><br><span class="line"><span class="comment"># serving cert matching its client cert.</span></span><br><span class="line">kind: ClusterRole</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">metadata:</span><br><span class="line">  name: approve-node-server-renewal-csr</span><br><span class="line">rules:</span><br><span class="line">- apiGroups: [<span class="string">"certificates.k8s.io"</span>]</span><br><span class="line">  resources: [<span class="string">"certificatesigningrequests/selfnodeserver"</span>]</span><br><span class="line">  verbs: [<span class="string">"create"</span>]</span><br><span class="line">---</span><br><span class="line"> <span class="comment"># To let a node of the group "system:nodes" renew its own server credentials</span></span><br><span class="line"> kind: ClusterRoleBinding</span><br><span class="line"> apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line"> metadata:</span><br><span class="line">   name: node-server-cert-renewal</span><br><span class="line"> subjects:</span><br><span class="line"> - kind: Group</span><br><span class="line">   name: system:nodes</span><br><span class="line">   apiGroup: rbac.authorization.k8s.io</span><br><span class="line"> roleRef:</span><br><span class="line">   kind: ClusterRole</span><br><span class="line">   name: approve-node-server-renewal-csr</span><br><span class="line">   apiGroup: rbac.authorization.k8s.io</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#拷贝到其他master节点上</span></span><br><span class="line">cp csr-crb.yaml /etc/kubernetes/ssl</span><br><span class="line">scp csr-crb.yaml 192.168.1.32:/etc/kubernetes/ssl</span><br><span class="line">scp csr-crb.yaml 192.168.1.33:/etc/kubernetes/ssl</span><br><span class="line"><span class="comment">#生效配置</span></span><br><span class="line">kubectl apply -f /etc/kubernetes/ssl/csr-crb.yaml</span><br></pre></td></tr></table></figure><ol><li>查看<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl get --all-namespaces -o wide nodes</span><br><span class="line">NAME           STATUS   ROLES    AGE   VERSION   INTERNAL-IP    EXTERNAL-IP   OS-IMAGE                KERNEL-VERSION               CONTAINER-RUNTIME</span><br><span class="line">192.168.1.35   Ready    &lt;none&gt;   7m    v1.14.3   192.168.1.35   &lt;none&gt;        CentOS Linux 7 (Core)   3.10.0-957.27.2.el7.x86_64   docker://19.3.1</span><br></pre></td></tr></table></figure></li></ol><h3 id="部署kube-proxy"><a href="#部署kube-proxy" class="headerlink" title="部署kube-proxy"></a>部署kube-proxy</h3><p>kube-proxy 运行在所有 worker 节点上，，它监听 apiserver 中 service 和 Endpoint 的变化情况，创建路由规则来进行服务负载均衡。</p><ol><li><p>创建kube-proxy证书</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/ssl</span><br><span class="line">cat &gt; kube-proxy-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"CN"</span>: <span class="string">"system:kube-proxy"</span>,</span><br><span class="line">  <span class="string">"key"</span>: &#123;</span><br><span class="line">    <span class="string">"algo"</span>: <span class="string">"rsa"</span>,</span><br><span class="line">    <span class="string">"size"</span>: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"names"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"C"</span>: <span class="string">"CN"</span>,</span><br><span class="line">      <span class="string">"ST"</span>: <span class="string">"ShangHai"</span>,</span><br><span class="line">      <span class="string">"L"</span>: <span class="string">"ShangHai"</span>,</span><br><span class="line">      <span class="string">"O"</span>: <span class="string">"k8s"</span>,</span><br><span class="line">      <span class="string">"OU"</span>: <span class="string">"System"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>生成证书和私钥</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=ca.pem \</span><br><span class="line">  -ca-key=ca-key.pem \</span><br><span class="line">  -config=ca-config.json \</span><br><span class="line">  -profile=kubernetes  kube-proxy-csr.json | cfssljson -bare kube-proxy</span><br></pre></td></tr></table></figure></li><li><p>创建kubeconfig文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.设置集群参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-cluster kubernetes \</span><br><span class="line">  --certificate-authority=ca.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --server=https://192.168.1.10:8443 \</span><br><span class="line">  --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line"><span class="comment">#2.设置客户端认证参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-credentials kube-proxy \</span><br><span class="line">  --client-certificate=kube-proxy.pem \</span><br><span class="line">  --client-key=kube-proxy-key.pem \</span><br><span class="line">  --embed-certs=<span class="literal">true</span> \</span><br><span class="line">  --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line"><span class="comment">#3.设置上下文参数</span></span><br><span class="line">kubectl config <span class="built_in">set</span>-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=kube-proxy \</span><br><span class="line">  --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line"><span class="comment">#4.设置默认上下文</span></span><br><span class="line">kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig</span><br></pre></td></tr></table></figure></li><li><p>拷贝到worker节点</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp kube-proxy*.pem kube-proxy.kubeconfig 192.168.1.35:/etc/kubernetes/ssl/</span><br></pre></td></tr></table></figure></li><li><p>创建kube-proxy配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/ssl</span><br><span class="line">cat &gt;kube-proxy.config.yaml &lt;&lt;EOF</span><br><span class="line">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span><br><span class="line">bindAddress: 192.168.1.35</span><br><span class="line">clientConnection:</span><br><span class="line">  kubeconfig: /etc/kubernetes/ssl/kube-proxy.kubeconfig</span><br><span class="line">clusterCIDR: 172.30.0.0/16</span><br><span class="line">healthzBindAddress: 192.168.1.35:10256</span><br><span class="line">hostnameOverride: 192.168.1.35</span><br><span class="line">kind: KubeProxyConfiguration</span><br><span class="line">metricsBindAddress: 192.168.1.35:10249</span><br><span class="line">mode: <span class="string">"ipvs"</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>拷贝到其他节点</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp kube-proxy.config.yaml 192.168.1.35:/etc/kubernetes/ssl/</span><br></pre></td></tr></table></figure></li><li><p>创建kube-proxy.service文件(worker节点)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt; EOF &gt; /etc/systemd/system/kube-proxy.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Kube-Proxy Server</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">WorkingDirectory=/var/lib/kube-proxy</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/kube-proxy \</span><br><span class="line">  --config=/etc/kubernetes/ssl/kube-proxy.config.yaml \</span><br><span class="line">  --alsologtostderr=<span class="literal">true</span> \</span><br><span class="line">  --logtostderr=<span class="literal">false</span> \</span><br><span class="line">  --<span class="built_in">log</span>-dir=/var/<span class="built_in">log</span>/kubernetes/kube-proxy \</span><br><span class="line">  --v=2</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>启动kube-proxy服务(worker节点)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/lib/kube-proxy &amp;&amp; mkdir -p /var/<span class="built_in">log</span>/kubernetes/kube-proxy</span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl <span class="built_in">enable</span> kube-proxy &amp;&amp; systemctl restart kube-proxy &amp;&amp; systemctl status kube-proxy</span><br></pre></td></tr></table></figure></li><li><p>检查</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">netstat -lnpt|grep kube-proxy</span><br><span class="line">tcp        0      0 192.168.1.35:10249      0.0.0.0:*               LISTEN      1031/kube-proxy     </span><br><span class="line">tcp        0      0 192.168.1.35:10256      0.0.0.0:*               LISTEN      1031/kube-proxy  </span><br><span class="line"></span><br><span class="line">ipvsadm -ln</span><br><span class="line"><span class="comment">#显示如下</span></span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port Scheduler Flags</span><br><span class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</span><br><span class="line">TCP  10.254.0.1:443 rr</span><br><span class="line">  -&gt; 192.168.1.31:6443            Masq    1      0          0         </span><br><span class="line">  -&gt; 192.168.1.32:6443            Masq    1      0          0         </span><br><span class="line">  -&gt; 192.168.1.33:6443            Masq    1      0          0         </span><br><span class="line">TCP  10.254.189.67:80 rr</span><br><span class="line">  -&gt; 172.30.87.3:80               Masq    1      0          0</span><br></pre></td></tr></table></figure></li><li><p>测试集群可用性</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建一个pod</span></span><br><span class="line">kubectl run nginx --image=nginx</span><br><span class="line"><span class="comment">#查看pod状态</span></span><br><span class="line">kubectl get pod -o wide</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE   IP            NODE           NOMINATED NODE   READINESS GATES</span><br><span class="line">nginx-7db9fccd9b-glrx5   1/1     Running   0          27m   172.30.87.3   192.168.1.35   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"><span class="comment">#测试IP是否ping通</span></span><br><span class="line">ping -c4 172.30.87.3</span><br><span class="line">PING 172.30.87.3 (172.30.87.3) 56(84) bytes of data.</span><br><span class="line">64 bytes from 172.30.87.3: icmp_seq=1 ttl=63 time=0.372 ms</span><br><span class="line">64 bytes from 172.30.87.3: icmp_seq=2 ttl=63 time=0.188 ms</span><br><span class="line">64 bytes from 172.30.87.3: icmp_seq=3 ttl=63 time=0.160 ms</span><br><span class="line">64 bytes from 172.30.87.3: icmp_seq=4 ttl=63 time=0.169 ms</span><br><span class="line"></span><br><span class="line">--- 172.30.87.3 ping statistics ---</span><br><span class="line">4 packets transmitted, 4 received, 0% packet loss, time 2999ms</span><br><span class="line">rtt min/avg/max/mdev = 0.160/0.222/0.372/0.087 ms</span><br><span class="line"><span class="comment">#创建服务</span></span><br><span class="line">kubectl expose deployment nginx --name=nginx --port=80 --target-port=80 --<span class="built_in">type</span>=NodePort</span><br><span class="line">service/nginx exposed</span><br><span class="line"><span class="comment">#查看服务</span></span><br><span class="line">kubectl get svc -o wide</span><br><span class="line">NAME         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE    SELECTOR</span><br><span class="line">kubernetes   ClusterIP   10.254.0.1      &lt;none&gt;        443/TCP        2d1h   &lt;none&gt;</span><br><span class="line">nginx        NodePort    10.254.215.97   &lt;none&gt;        80:31401/TCP   31s    run=nginx</span><br><span class="line"><span class="comment">#访问curl访问node_ip：nodeport</span></span><br><span class="line">curl -I 192.168.1.35:31401</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.17.3</span><br><span class="line">Date: Wed, 28 Aug 2019 10:06:40 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 612</span><br><span class="line">Last-Modified: Tue, 13 Aug 2019 08:50:00 GMT</span><br><span class="line">Connection: keep-alive</span><br><span class="line">ETag: <span class="string">"5d5279b8-264"</span></span><br><span class="line">Accept-Ranges: bytes</span><br><span class="line"><span class="comment">#在flannel worker主机上访问集群IP</span></span><br><span class="line">ip add | grep 10.254</span><br><span class="line">    inet 10.254.0.1/32 brd 10.254.0.1 scope global kube-ipvs0</span><br><span class="line">    inet 10.254.189.67/32 brd 10.254.189.67 scope global kube-ipvs0</span><br><span class="line">    inet 10.254.215.97/32 brd 10.254.215.97 scope global kube-ipvs0</span><br><span class="line"></span><br><span class="line">curl -I http://10.254.189.67:80</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.17.3</span><br><span class="line">Date: Wed, 28 Aug 2019 10:10:26 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 612</span><br><span class="line">Last-Modified: Tue, 13 Aug 2019 08:50:00 GMT</span><br><span class="line">Connection: keep-alive</span><br><span class="line">ETag: <span class="string">"5d5279b8-264"</span></span><br><span class="line">Accept-Ranges: bytes</span><br></pre></td></tr></table></figure></li></ol><h2 id="部署coredns插件"><a href="#部署coredns插件" class="headerlink" title="部署coredns插件"></a>部署coredns插件</h2><p>插件是集群的附件组件，丰富和完善了集群的功能</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将kubernetes-server-linux-amd64.tar.gz解压后，再解压其中的 kubernetes-src.tar.gz 文件,获取coredns配置文件</span></span><br><span class="line">tar -zxvf kubernetes-server-linux-amd64.tar.gz</span><br><span class="line"><span class="built_in">cd</span> kubernetes</span><br><span class="line">mkdir src</span><br><span class="line">tar -zxvf kubernetes-src.tar.gz -C src</span><br><span class="line"><span class="built_in">cd</span> src/cluster/addons/dns/coredns</span><br><span class="line">cp coredns.yaml.base /etc/kubernetes/coredns.yaml</span><br><span class="line">sed -i <span class="string">"s/__PILLAR__DNS__DOMAIN__/cluster.local/g"</span> /etc/kubernetes/coredns.yaml</span><br><span class="line">sed -i <span class="string">"s/__PILLAR__DNS__SERVER__/10.254.0.2/g"</span> /etc/kubernetes/coredns.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建coredns</span></span><br><span class="line">kubectl create -f /etc/kubernetes/coredns.yaml</span><br><span class="line">serviceaccount/coredns created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/system:coredns created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/system:coredns created</span><br><span class="line">configmap/coredns created</span><br><span class="line">deployment.apps/coredns created</span><br><span class="line">service/kube-dns created</span><br><span class="line"><span class="comment">#检查codedns功能</span></span><br><span class="line">kubectl -n kube-system get all -o wide</span><br><span class="line">NAME                           READY   STATUS             RESTARTS   AGE     IP            NODE           NOMINATED NODE   READINESS GATES</span><br><span class="line">pod/coredns-5b969f4c88-7l7c9   0/1     ImagePullBackOff   0          4m18s   172.30.87.4   192.168.1.35   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line">NAME               TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)                  AGE     SELECTOR</span><br><span class="line">service/kube-dns   ClusterIP   10.254.0.2   &lt;none&gt;        53/UDP,53/TCP,9153/TCP   4m18s   k8s-app=kube-dns</span><br><span class="line"></span><br><span class="line">NAME                      READY   UP-TO-DATE   AVAILABLE   AGE     CONTAINERS   IMAGES                     SELECTOR</span><br><span class="line">deployment.apps/coredns   0/1     1            0           4m18s   coredns      k8s.gcr.io/coredns:1.3.1   k8s-app=kube-dns</span><br><span class="line"></span><br><span class="line">NAME                                 DESIRED   CURRENT   READY   AGE     CONTAINERS   IMAGES                     SELECTOR</span><br><span class="line">replicaset.apps/coredns-5b969f4c88   1         1         0       4m18s   coredns      k8s.gcr.io/coredns:1.3.1   k8s-app=kube-dns,pod-template-hash=5b969f4c88</span><br><span class="line"><span class="comment"># ImagePullBackOff 镜像下载失败，修改</span></span><br><span class="line">sed -i <span class="string">"s/k8s.gcr.io/coredns/g"</span> /etc/kubernetes/coredns.yaml</span><br><span class="line">kubectl apply -f /etc/kubernetes/coredns.yaml   </span><br><span class="line">Warning: kubectl apply should be used on resource created by either kubectl create --save-config or kubectl apply</span><br><span class="line">serviceaccount/coredns configured</span><br><span class="line">Warning: kubectl apply should be used on resource created by either kubectl create --save-config or kubectl apply</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/system:coredns configured</span><br><span class="line">Warning: kubectl apply should be used on resource created by either kubectl create --save-config or kubectl apply</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/system:coredns configured</span><br><span class="line">Warning: kubectl apply should be used on resource created by either kubectl create --save-config or kubectl apply</span><br><span class="line">configmap/coredns configured</span><br><span class="line">Warning: kubectl apply should be used on resource created by either kubectl create --save-config or kubectl apply</span><br><span class="line">deployment.apps/coredns configured</span><br><span class="line">Warning: kubectl apply should be used on resource created by either kubectl create --save-config or kubectl apply</span><br><span class="line">service/kube-dns configured</span><br><span class="line"><span class="comment"># 再次查看</span></span><br><span class="line">kubectl -n kube-system get all -o wide</span><br></pre></td></tr></table></figure><h2 id="部署dashboard插件"><a href="#部署dashboard插件" class="headerlink" title="部署dashboard插件"></a>部署dashboard插件</h2><p>将kubernetes-server-linux-amd64.tar.gz 解压后，再解压其中的 kubernetes-src.tar.gz 文件。dashboard 对应的目录是：cluster/addons/dashboard ，拷贝dashboard的文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置文件</span></span><br><span class="line"><span class="built_in">cd</span> kubernetes/src/cluster/addons/dashboard</span><br><span class="line">mkdir -p /etc/kubernetes/dashboard</span><br><span class="line">cp *.yaml /etc/kubernetes/dashboard/</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /etc/kubernetes/dashboard</span><br><span class="line">sed -i <span class="string">"s@image:.*@image: registry.cn-hangzhou.aliyuncs.com/google_containers/kubernetes-dashboard-amd64:v1.10.1@g"</span> dashboard-controller.yaml</span><br><span class="line">sed -i <span class="string">"/spec/a\  type: NodePort"</span> dashboard-service.yaml</span><br><span class="line">sed -i <span class="string">"/targetPort/a\    nodePort: 32700"</span> dashboard-service.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#执行所有</span></span><br><span class="line">kubectl create -f /etc/kubernetes/dashboard</span><br><span class="line">configmap/kubernetes-dashboard-settings created</span><br><span class="line">serviceaccount/kubernetes-dashboard created</span><br><span class="line">deployment.apps/kubernetes-dashboard created</span><br><span class="line">role.rbac.authorization.k8s.io/kubernetes-dashboard-minimal created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/kubernetes-dashboard-minimal created</span><br><span class="line">secret/kubernetes-dashboard-certs created</span><br><span class="line">secret/kubernetes-dashboard-key-holder created</span><br><span class="line">service/kubernetes-dashboard created</span><br><span class="line"><span class="comment">#查看分配的NodePort</span></span><br><span class="line">kubectl -n kube-system get all -o wide</span><br><span class="line"></span><br><span class="line">kubectl get pod -o wide -n kube-system      </span><br><span class="line">NAME                                    READY   STATUS    RESTARTS   AGE    IP            NODE           NOMINATED NODE   READINESS GATES</span><br><span class="line">coredns-8854569d4-7w7gb                 1/1     Running   0          21m    172.30.87.5   192.168.1.35   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kubernetes-dashboard-7d5f7c58f5-c5nxc   1/1     Running   0          3m6s   172.30.87.7   192.168.1.35   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kubectl get svc -o wide -n kube-system </span><br><span class="line">NAME                   TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                  AGE     SELECTOR</span><br><span class="line">kube-dns               ClusterIP   10.254.0.2       &lt;none&gt;        53/UDP,53/TCP,9153/TCP   28m     k8s-app=kube-dns</span><br><span class="line">kubernetes-dashboard   NodePort    10.254.219.188   &lt;none&gt;        443:32700/TCP            3m13s   k8s-app=kubernetes-dashboard</span><br><span class="line"><span class="comment">#此时可访问dashboard https://192.168.1.35:32700，但需要口令，使用帮助命令</span></span><br><span class="line">kubectl <span class="built_in">exec</span> -n kube-system -it kubernetes-dashboard-7d5f7c58f5-c5nxc -- /dashboard --<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建登录token</span></span><br><span class="line">kubectl create sa dashboard-admin -n kube-system</span><br><span class="line">serviceaccount/dashboard-admin created</span><br><span class="line"></span><br><span class="line">kubectl create clusterrolebinding dashboard-admin --clusterrole=cluster-admin --serviceaccount=kube-system:dashboard-admin</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/dashboard-admin created</span><br><span class="line"></span><br><span class="line">ADMIN_SECRET=$(kubectl get secrets -n kube-system | grep dashboard-admin | awk <span class="string">'&#123;print $1&#125;'</span>)</span><br><span class="line">DASHBOARD_LOGIN_TOKEN=$(kubectl describe secret -n kube-system <span class="variable">$&#123;ADMIN_SECRET&#125;</span> | grep -E <span class="string">'^token'</span> | awk <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;DASHBOARD_LOGIN_TOKEN&#125;</span> <span class="comment"># 使用输出的DASHBOARD_LOGIN_TOKEN登录</span></span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/fan-gx/p/11108276.html" target="_blank" rel="noopener"><strong>本文来源参照</strong></a>  <a href="https://www.cnblogs.com/fan-gx/p/11108276.html" target="_blank" rel="noopener"><strong>本文来源参照</strong></a>  <a href="https://www.cnblogs.com/fan-gx/p/11108276.html" target="_blank" rel="noopener"><strong>本文来源参照</strong></a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;所有操作全部用root使用者进行，高可用一般建议大于等于3台的奇数,我们使用3台master来做高可用&lt;br&gt;    &lt;strong&gt;k8s各版本组件下载地址:&lt;/strong&gt;&lt;br&gt;    &lt;a href=&quot;https://github.com/kubernetes/kubernetes/tree/v1.14.3&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/kubernetes/kubernetes/tree/v1.14.3&lt;/a&gt;&lt;br&gt;    &lt;em&gt;kubernetes:&lt;/em&gt;&lt;br&gt;    wget &lt;a href=&quot;https://storage.googleapis.com/kubernetes-release/release/v1.14.3/kubernetes-node-linux-amd64.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://storage.googleapis.com/kubernetes-release/release/v1.14.3/kubernetes-node-linux-amd64.tar.gz&lt;/a&gt;&lt;br&gt;    wget &lt;a href=&quot;https://storage.googleapis.com/kubernetes-release/release/v1.14.3/kubernetes-client-linux-amd64.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://storage.googleapis.com/kubernetes-release/release/v1.14.3/kubernetes-client-linux-amd64.tar.gz&lt;/a&gt;&lt;br&gt;    wget &lt;a href=&quot;https://storage.googleapis.com/kubernetes-release/release/v1.14.3/kubernetes-server-linux-amd64.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://storage.googleapis.com/kubernetes-release/release/v1.14.3/kubernetes-server-linux-amd64.tar.gz&lt;/a&gt;&lt;br&gt;    wget &lt;a href=&quot;https://storage.googleapis.com/kubernetes-release/release/v1.14.3/kubernetes.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://storage.googleapis.com/kubernetes-release/release/v1.14.3/kubernetes.tar.gz&lt;/a&gt;&lt;br&gt;    &lt;em&gt;etcd:&lt;/em&gt;&lt;br&gt;    wget &lt;a href=&quot;https://github.com/etcd-io/etcd/releases/download/v3.3.13/etcd-v3.3.13-linux-amd64.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/etcd-io/etcd/releases/download/v3.3.13/etcd-v3.3.13-linux-amd64.tar.gz&lt;/a&gt;&lt;br&gt;    &lt;em&gt;flannel:&lt;/em&gt;&lt;br&gt;    wget &lt;a href=&quot;https://github.com/coreos/flannel/releases/download/v0.11.0/flannel-v0.11.0-linux-amd64.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/coreos/flannel/releases/download/v0.11.0/flannel-v0.11.0-linux-amd64.tar.gz&lt;/a&gt;&lt;br&gt;    &lt;em&gt;cni-plugins:&lt;/em&gt;&lt;br&gt;    wget &lt;a href=&quot;https://github.com/containernetworking/plugins/releases/download/v0.8.1/cni-plugins-linux-amd64-v0.8.1.tgz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/containernetworking/plugins/releases/download/v0.8.1/cni-plugins-linux-amd64-v0.8.1.tgz&lt;/a&gt;&lt;br&gt;    &lt;em&gt;docker:&lt;/em&gt;&lt;br&gt;    wget &lt;a href=&quot;https://download.docker.com/linux/static/stable/x86_64/docker-18.09.6.tgz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://download.docker.com/linux/static/stable/x86_64/docker-18.09.6.tgz&lt;/a&gt;&lt;br&gt;    &lt;em&gt;cfssl:&lt;/em&gt;&lt;br&gt;    wget &lt;a href=&quot;https://pkg.cfssl.org/R1.2/cfssl_linux-amd64&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://pkg.cfssl.org/R1.2/cfssl_linux-amd64&lt;/a&gt;&lt;br&gt;    wget &lt;a href=&quot;https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64&lt;/a&gt;&lt;br&gt;    wget &lt;a href=&quot;https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64&lt;/a&gt;&lt;br&gt;    &lt;em&gt;heapster:&lt;/em&gt;&lt;br&gt;    wget &lt;a href=&quot;https://github.com/kubernetes-retired/heapster/archive/v1.5.4.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/kubernetes-retired/heapster/archive/v1.5.4.tar.gz&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://ngames-dev.cn/categories/kubernetes/"/>
    
    
      <category term="kubernetes" scheme="https://ngames-dev.cn/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>hive添加用户权限</title>
    <link href="https://ngames-dev.cn/2019/07/02/hive%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90/"/>
    <id>https://ngames-dev.cn/2019/07/02/hive添加用户权限/</id>
    <published>2019-07-01T16:00:00.000Z</published>
    <updated>2019-10-14T07:39:31.008Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在前面<a href="https://ngames-dev.cn/2019/06/30/hadoop+hive+hbase%E7%8E%AF%E5%A2%83/">hadoop+hive+hbase环境</a>里面，hive部分简单的配置了基于MySQL的本地模式安装<br>但是考虑到安全，需要给hive添加认证登陆<br>而且，使用hive命令beeline链接hive，也是强行需要密码的</p></blockquote><p>在之前的hive-site.xml配置中，<code>hive.server2.authentication</code> 的配置为NONE，表示没有用户认证。<br>而HiveServer2支持多种用户安全认证方式：NONE,NOSASL, KERBEROS, LDAP, PAM ,CUSTOM等等，在此，我们使用CUSTOM自定义安全认证  </p><a id="more"></a><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>安全认证代码  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.apache.hive;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.conf.HiveConf;</span><br><span class="line"><span class="keyword">import</span> org.apache.hive.service.auth.PasswdAuthenticationProvider;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.security.sasl.AuthenticationException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> SakuraGaara</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/07/01</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomPasswdAuthenticator</span> <span class="keyword">implements</span> <span class="title">PasswdAuthenticationProvider</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Logger LOG = org.slf4j.LoggerFactory.getLogger(CustomPasswdAuthenticator.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String HIVE_JDBC_PASSWD_AUTH_PREFIX = <span class="string">"hive.jdbc_passwd.auth.%s"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Configuration conf = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Authenticate</span><span class="params">(String userName, String passwd)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">        LOG.info(<span class="string">"user: "</span> + userName + <span class="string">" try login."</span>);</span><br><span class="line">        String passwdConf = getConf().get(String.format(HIVE_JDBC_PASSWD_AUTH_PREFIX, userName));</span><br><span class="line">        <span class="keyword">if</span> (passwdConf == <span class="keyword">null</span>) &#123;</span><br><span class="line">            String message = <span class="string">"user's ACL configration is not found. user:"</span> + userName;</span><br><span class="line">            LOG.info(message);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> AuthenticationException(message);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!passwd.equals(passwdConf)) &#123;</span><br><span class="line">            String message = <span class="string">"user name and password is mismatch. user:"</span> + userName;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> AuthenticationException(message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Configuration <span class="title">getConf</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (conf == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.conf = <span class="keyword">new</span> Configuration(<span class="keyword">new</span> HiveConf());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> conf;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setConf</span><span class="params">(Configuration conf)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.conf = conf;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将以上代码打包<a href="/images/file/hive-1.0-SNAPSHOT.jar">hive-1.0-SNAPSHOT.jar</a>，将jar放置<code>$HIVE_HOME/lib</code>目录  </p><p>修改hive-site.xml文件配置<br>hive.server2.authentication  // 指定认证方式CUSTOM<br>hive.server2.custom.authentication.class  // 指定认证方式接口<br>hive.jdbc_passwd.auth // 设置用户为admin，value为用户密码  </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.server2.authentication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>CUSTOM<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">    Expects one of [nosasl, none, ldap, kerberos, pam, custom].</span><br><span class="line">  <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.server2.custom.authentication.class<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hive.CustomPasswdAuthenticator<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">    Custom authentication class. Used when property</span><br><span class="line">  <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.jdbc_passwd.auth.admin<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>12345678<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>重新启动hiveserver2,此时可jps看出RunJar进程，则启动成功  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./bin/hiveserver2 &gt; /dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>使用beeline命令链接，此时需要用户密码</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">shell&gt; beeline </span><br><span class="line">SLF4J: Class path contains multiple SLF4J bindings.</span><br><span class="line">SLF4J: Found binding <span class="keyword">in</span> [jar:file:/yibao/data/app/hive-2.3.5/lib/log4j-slf4j-impl-2.6.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span><br><span class="line">SLF4J: Found binding <span class="keyword">in</span> [jar:file:/yibao/data/app/hadoop-2.7.7/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span><br><span class="line">SLF4J: See http://www.slf4j.org/codes.html<span class="comment">#multiple_bindings for an explanation.</span></span><br><span class="line">SLF4J: Actual binding is of <span class="built_in">type</span> [org.apache.logging.slf4j.Log4jLoggerFactory]</span><br><span class="line">Beeline version 2.3.5 by Apache Hive</span><br><span class="line">beeline&gt; !connect jdbc:hive2://master:10000</span><br><span class="line">Connecting to jdbc:hive2://master:10000</span><br><span class="line">Enter username <span class="keyword">for</span> jdbc:hive2://master:10000: admin</span><br><span class="line">Enter password <span class="keyword">for</span> jdbc:hive2://master:10000: ********</span><br><span class="line">Error: Could not open client transport with JDBC Uri: jdbc:hive2://master:10000: Failed to open new session: java.lang.RuntimeException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.security.authorize.AuthorizationException): User: admin is not allowed to impersonate (state=08S01,code=0)</span><br></pre></td></tr></table></figure><p>此时会发现，虽然配置了hive认证，但是使用beeline或者其他客户端，依旧无法连接hive</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>1，首先确定hive是否开启<br>2，然后再hadoop下的core-site.xml加入配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.admin.hosts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.admin.groups<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意配置中的“admin”代表的是一个用户，你异常中User后面的用户写的是哪个，你在这里就配置哪个。<br>hadoop.proxyuser.admin.hosts 配置成*的意义，表示任意节点使用hadoop集群的代理用户admin都能访问hdfs集群<br>hadoop.proxyuser.admin.groups 表示代理用户的组所属  </p><p>3，然后在hadoop下的hdfs-site.xml中加入配置  </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.webhdfs.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4, 重启hadoop集群和hive,然后beeline重新连接hive</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">shell&gt; beeline </span><br><span class="line">SLF4J: Class path contains multiple SLF4J bindings.</span><br><span class="line">SLF4J: Found binding <span class="keyword">in</span> [jar:file:/yibao/data/app/hive-2.3.5/lib/log4j-slf4j-impl-2.6.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span><br><span class="line">SLF4J: Found binding <span class="keyword">in</span> [jar:file:/yibao/data/app/hadoop-2.7.7/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span><br><span class="line">SLF4J: See http://www.slf4j.org/codes.html<span class="comment">#multiple_bindings for an explanation.</span></span><br><span class="line">SLF4J: Actual binding is of <span class="built_in">type</span> [org.apache.logging.slf4j.Log4jLoggerFactory]</span><br><span class="line">Beeline version 2.3.5 by Apache Hive</span><br><span class="line">beeline&gt; !connect jdbc:hive2://master:10000 </span><br><span class="line">Connecting to jdbc:hive2://master:10000</span><br><span class="line">Enter username <span class="keyword">for</span> jdbc:hive2://master:10000: admin</span><br><span class="line">Enter password <span class="keyword">for</span> jdbc:hive2://master:10000: ********</span><br><span class="line">Connected to: Apache Hive (version 2.3.5)</span><br><span class="line">Driver: Hive JDBC (version 2.3.5)</span><br><span class="line">Transaction isolation: TRANSACTION_REPEATABLE_READ</span><br><span class="line">0: jdbc:hive2://master:10000&gt; show databases;</span><br><span class="line">+----------------+</span><br><span class="line">| database_name  |</span><br><span class="line">+----------------+</span><br><span class="line">| default        |</span><br><span class="line">| sakura         |</span><br><span class="line">+----------------+</span><br><span class="line">2 rows selected (0.341 seconds)</span><br><span class="line">0: jdbc:hive2://master:10000&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在前面&lt;a href=&quot;https://ngames-dev.cn/2019/06/30/hadoop+hive+hbase%E7%8E%AF%E5%A2%83/&quot;&gt;hadoop+hive+hbase环境&lt;/a&gt;里面，hive部分简单的配置了基于MySQL的本地模式安装&lt;br&gt;但是考虑到安全，需要给hive添加认证登陆&lt;br&gt;而且，使用hive命令beeline链接hive，也是强行需要密码的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在之前的hive-site.xml配置中，&lt;code&gt;hive.server2.authentication&lt;/code&gt; 的配置为NONE，表示没有用户认证。&lt;br&gt;而HiveServer2支持多种用户安全认证方式：NONE,NOSASL, KERBEROS, LDAP, PAM ,CUSTOM等等，在此，我们使用CUSTOM自定义安全认证  &lt;/p&gt;
    
    </summary>
    
    
      <category term="大数据" scheme="https://ngames-dev.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="hive" scheme="https://ngames-dev.cn/tags/hive/"/>
    
  </entry>
  
  <entry>
    <title>hadoop+hive+hbase环境</title>
    <link href="https://ngames-dev.cn/2019/06/30/hadoop+hive+hbase%E7%8E%AF%E5%A2%83/"/>
    <id>https://ngames-dev.cn/2019/06/30/hadoop+hive+hbase环境/</id>
    <published>2019-06-29T16:00:00.000Z</published>
    <updated>2019-09-06T09:23:30.125Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>相关软件准备 apache-hive-2.3.5-bin.tar.gz  hadoop-2.7.7.tar.gz  hbase-1.3.5-bin.tar.gz  mysql-5.7.22-linux-glibc2.12-x86_64.tar.gz  mysql-connector-java-5.1.42-bin.jar  zookeeper-3.4.14.tar.gz</p></blockquote><h3 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h3><ol><li><p>准备三台服务器，修改hostname主机名，分别为master, slave1, slave2,并将三台主机名添加到/etc/hosts中</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10.27.214.15 slave1</span><br><span class="line">10.26.234.215 slave2</span><br><span class="line">10.26.108.150 master</span><br></pre></td></tr></table></figure></li><li><p>准备好相关的安装目录，mkdir /yibao/data/app (所有的项目都会安装在次目录下)</p></li><li><p>配置三台服务器之间无密码登陆</p><a id="more"></a></li></ol><h3 id="配置Java环境"><a href="#配置Java环境" class="headerlink" title="配置Java环境"></a>配置Java环境</h3><p>三台都需要配置</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/usr/<span class="built_in">local</span>/java/jdk1.8.0_60/</span><br><span class="line">JAVA_BIN=/usr/<span class="built_in">local</span>/java/jdk1.8.0_60/bin</span><br><span class="line">JRE_HOME=/usr/<span class="built_in">local</span>/java/jdk1.8.0_60/jre</span><br><span class="line">PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/java/jdk1.8.0_60/bin:/usr/<span class="built_in">local</span>/java/jdk1.8.0_60/jre/bin</span><br><span class="line">CLASSPATH=/usr/<span class="built_in">local</span>/java/jdk1.8.0_60/jre/lib:/usr/<span class="built_in">local</span>/java/jdk1.8.0_60/lib:/usr/<span class="built_in">local</span>/java/jdk1.8.0_60/jre/lib/charsets.jar</span><br><span class="line"><span class="built_in">export</span>  JAVA_HOME  JAVA_BIN JRE_HOME  PATH  CLASSPATH</span><br></pre></td></tr></table></figure><h3 id="安装hadoop集群"><a href="#安装hadoop集群" class="headerlink" title="安装hadoop集群"></a>安装hadoop集群</h3><h4 id="解压hadoop到相关安装目录"><a href="#解压hadoop到相关安装目录" class="headerlink" title="解压hadoop到相关安装目录"></a>解压hadoop到相关安装目录</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf hadoop-2.7.7.tar.gz -C /yibao/data/app/</span><br></pre></td></tr></table></figure><h4 id="添加hadoop环境变量"><a href="#添加hadoop环境变量" class="headerlink" title="添加hadoop环境变量"></a>添加hadoop环境变量</h4><p>/etc/profile</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> HADOOP_HOME=/yibao/data/app/hadoop-2.7.7</span><br></pre></td></tr></table></figure><h4 id="配置hadoop中的配置文件"><a href="#配置hadoop中的配置文件" class="headerlink" title="配置hadoop中的配置文件"></a>配置hadoop中的配置文件</h4><p>主要配置四个配置文件，在hadoop-2.7.7/etc/hadoop目录中，分别为<br>core-site.xml<br>hdfs-site.xml<br>yarn-site.xml<br>mapred-site.xml(由mapred-site.xml.template拷贝）<br>slaves<br>hadoop-env.sh  </p><ol><li><p>修改core-site.xml  </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/yibao/data/app/hadoop-2.7.7/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://master:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>修改hdfs-site.xml  </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:9001<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/yibao/data/app/hadoop-2.7.7/namenode<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/yibao/data/app/hadoop-2.7.7/datanode<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.webhdfs.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.permissions<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.web.ugi<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>supergroup<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>修改mapred-site.xml  </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:10020<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.webapp.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:19888<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>修改yarn-site.xml  </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services.mapreduce.shuffle.class<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.mapred.ShuffleHandler<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:8032<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.scheduler.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:8030<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.resource-tracker.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:8031<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.admin.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:8033<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.webapp.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:8078<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>slaves  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">slave1</span><br><span class="line">slave2</span><br></pre></td></tr></table></figure></li><li><p>hadoop-env.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/java/jdk1.8.0_60</span><br><span class="line"><span class="built_in">export</span> HADOOP_SSH_OPTS=<span class="string">"-p 22222"</span>  <span class="comment">#由于三台主机的ssh端口都是22222,所以此处添加</span></span><br></pre></td></tr></table></figure></li><li><p>将目录cp到slave1,slave2两台服务器中</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r -P 22222 hadoop-2.7.7 slave1:/yibao/data/app/</span><br><span class="line">scp -r -P 22222 hadoop-2.7.7 slave2:/yibao/data/app/</span><br></pre></td></tr></table></figure></li><li><p>在slave1,slave2中/etc/profile添加HADOOP_HOME环境变量</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> HADOOP_HOME=/yibao/data/app/hadoop-2.7.7</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure></li></ol><h4 id="验证并启动hadoop"><a href="#验证并启动hadoop" class="headerlink" title="验证并启动hadoop"></a>验证并启动hadoop</h4><ol start="9"><li><p>验证，在master节点中初始化namenode节点,确认无误后，启动hadoop集群</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./bin/hadoop namenode -format <span class="comment">#初始化namenode节点</span></span><br><span class="line">./sbin/start-all.sh  <span class="comment">#启动hadoop集群</span></span><br></pre></td></tr></table></figure></li><li><p>之后可以使用jps命令查看每台机器上的Java进程<br>master节点：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">28368 Jps</span><br><span class="line">11287 SecondaryNameNode</span><br><span class="line">11534 ResourceManager</span><br><span class="line">11055 NameNode</span><br></pre></td></tr></table></figure></li></ol><p>slave1节点:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">32020 DataNode</span><br><span class="line">13626 Jps</span><br><span class="line">32142 NodeManager</span><br></pre></td></tr></table></figure><p>slave2节点：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2608 NodeManager</span><br><span class="line">2469 DataNode</span><br><span class="line">21542 Jps</span><br></pre></td></tr></table></figure><p>此时可查看NameNode进程端口50070,访问 <a href="http://master:50070,可以看到熟悉的Hadoop界面" target="_blank" rel="noopener">http://master:50070,可以看到熟悉的Hadoop界面</a></p><h3 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h3><h4 id="解压mysql并安装"><a href="#解压mysql并安装" class="headerlink" title="解压mysql并安装"></a>解压mysql并安装</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo -i <span class="comment">#使用root用户安装</span></span><br><span class="line">tar zxvf mysql-5.7.22-linux-glibc2.12-x86_64.tar.gz -C /yibao/data/app/</span><br><span class="line"><span class="built_in">cd</span> /yibao/data/app</span><br><span class="line">mv mysql-5.7.22-linux-glibc2.12-x86_64 mysql</span><br><span class="line"><span class="built_in">cd</span> mysql</span><br><span class="line">groupadd mysql</span><br><span class="line">groupadd mysql</span><br><span class="line">useradd -r -g mysql -s /sbin/nologin mysql</span><br><span class="line">chown -R mysql.mysql .</span><br><span class="line">./bin/mysqld --initialize --user=mysql --basedir=/yibao/data/app/mysql --datadir=/yibao/data/app/mysql/data  <span class="comment">#返回root@localhost密码</span></span><br></pre></td></tr></table></figure><h4 id="创建mysql配置文件"><a href="#创建mysql配置文件" class="headerlink" title="创建mysql配置文件"></a>创建mysql配置文件</h4><p>vim /etc/my.cnf</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">basedir=/yibao/data/app/mysql </span><br><span class="line">datadir=/yibao/data/app/mysql/data</span><br><span class="line">port=3306</span><br><span class="line">character_set_server=utf8</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line"><span class="comment">#skip-grant-tables</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#innodb_buffer_pool_size=1G</span></span><br><span class="line">innodb_log_file_size=256M</span><br><span class="line">max_allowed_packet=64M</span><br><span class="line"></span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br></pre></td></tr></table></figure><h4 id="mysql加入服务"><a href="#mysql加入服务" class="headerlink" title="mysql加入服务"></a>mysql加入服务</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cp support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">chmod +x /etc/init.d/mysqld </span><br><span class="line">chkconfig --add mysqld</span><br><span class="line">chkconfig mysqld on</span><br><span class="line">service mysqld start</span><br></pre></td></tr></table></figure><h3 id="安装hive"><a href="#安装hive" class="headerlink" title="安装hive"></a>安装hive</h3><p>基于MySQL的本地模式安装（hive只需安装master即可）</p><h4 id="解压hive安装包"><a href="#解压hive安装包" class="headerlink" title="解压hive安装包"></a>解压hive安装包</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf apache-hive-2.3.5-bin.tar.gz -C /yibao/data/app/</span><br><span class="line"><span class="built_in">cd</span> /yibao/data/app</span><br><span class="line">mv apache-hive-2.3.5-bin hive-2.3.5</span><br></pre></td></tr></table></figure><h4 id="配置hive"><a href="#配置hive" class="headerlink" title="配置hive"></a>配置hive</h4><ol><li><p>将mysql驱动包放置hive-2.3.5/lib目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp mysql-connector-java-5.1.42-bin.jar hive-2.3.5/lib/</span><br></pre></td></tr></table></figure></li><li><p>登陆mysql创建hive链接需要的账号，和数据库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p -hlocalhost</span><br><span class="line">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO <span class="string">'hive'</span>@<span class="string">'localhost'</span> IDENTIFIED BY <span class="string">"hive_password"</span>;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line">mysql&gt; CREATE DATABASE hive;</span><br></pre></td></tr></table></figure></li><li><p>配置hive环境变量<br>将以下加入/etc/profile文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> HIVE_HOME=/yibao/data/app/hive-2.3.5</span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$HIVE_HOME</span>/bin</span><br></pre></td></tr></table></figure></li><li><p>配置hive配置文件hive-site.xml(由hive-default.xml.template复制生成)  </p></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.metastore.warehouse.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>/yibao/data/app/hivedata<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>location of default database for the warehouse<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.server2.authentication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>NONE<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Driver class name for a JDBC metastore<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>jdbc:mysql://localhost:3306/hive?createDatabaseIfNotExist=true&amp;amp;useSSL=false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">JDBC connect string for a JDBC metastore.</span><br><span class="line">To use SSL to encrypt/authenticate the connection, provide database-specific SSL flag in the connection URL.</span><br><span class="line">For example, jdbc:postgresql://myhost/db?ssl=true for postgres database.</span><br><span class="line"><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>hive<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Username to use against metastore database<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>hive_password<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>password to use against metastore database<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.exec.local.scratchdir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>/yibao/data/app/hive_tmp/HiveJobsLog<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Local scratch space for Hive jobs<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.downloaded.resources.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>/yibao/data/app/hive_tmp/resources<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Temporary local directory for added resources in the remote file system.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.querylog.location<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>/yibao/data/app/hive_tmp/HiveRunLog<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Location of Hive run time structured log file<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.server2.logging.operation.log.location<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>/yibao/data/app/hive_tmp/OpertitionLog<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Top level directory where operation logs are stored if logging functionality is enabled<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="5"><li><p>创建hivedata,hive_tmp文件夹</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /yibao/data/app/hivedata /yibao/data/app/hive_tmp</span><br></pre></td></tr></table></figure></li><li><p>修改hive-env.sh文件（由hive-env.sh.template拷贝生成）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/java/jdk1.8.0_60</span><br><span class="line"><span class="built_in">export</span> HADOOP_HOME=/yibao/data/app/hadoop-2.7.7</span><br><span class="line"><span class="built_in">export</span> HIVE_HOME=/yibao/data/app/hive-2.3.5</span><br><span class="line"><span class="built_in">export</span> HIVE_CONF_DIR=<span class="variable">$HIVE_HOME</span>/conf</span><br><span class="line"><span class="built_in">export</span> HIVE_AUX_JARS_PATH=<span class="variable">$HIVE_HOME</span>/lib</span><br></pre></td></tr></table></figure></li></ol><h4 id="初始化并启动"><a href="#初始化并启动" class="headerlink" title="初始化并启动"></a>初始化并启动</h4><ol start="7"><li><p>hive初始化元数据</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/schematool -initSchema -dbType mysql</span><br></pre></td></tr></table></figure></li><li><p>使用hive命令启动hive</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hive&gt; show databases;</span><br><span class="line">OK</span><br><span class="line">default</span><br><span class="line">Time taken: 7.743 seconds, Fetched: 1 row(s)</span><br></pre></td></tr></table></figure></li></ol><h3 id="安装zookeeper集群"><a href="#安装zookeeper集群" class="headerlink" title="安装zookeeper集群"></a>安装zookeeper集群</h3><p>zookeeper集群三台都需要安装,先配置master,之后scp到slave</p><h4 id="解压zookeeper"><a href="#解压zookeeper" class="headerlink" title="解压zookeeper"></a>解压zookeeper</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf zookeeper-3.4.14.tar.gz -C /yibao/data/app/</span><br><span class="line"><span class="built_in">cd</span> /yibao/data/app/zookeeper-3.4.14/conf</span><br><span class="line">cp zoo_sample.cfg zoo.cfg</span><br></pre></td></tr></table></figure><h4 id="配置zookeeper"><a href="#配置zookeeper" class="headerlink" title="配置zookeeper"></a>配置zookeeper</h4><ol><li><p>修改zoo.cfg</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tickTime=2000</span><br><span class="line">initLimit=10</span><br><span class="line">syncLimit=5</span><br><span class="line">dataDir=/yibao/data/app/zookeeper-3.4.14/data</span><br><span class="line">clientPort=2181</span><br><span class="line">server.0=master:2888:3888</span><br><span class="line">server.1=slave1:2888:3888</span><br><span class="line">server.2=slave2:2888:3888</span><br></pre></td></tr></table></figure></li><li><p>创建zookeeper data目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /yibao/data/app/zookeeper-3.4.14/data</span><br><span class="line"><span class="built_in">echo</span> 0 &gt; /yibao/data/app/zookeeper-3.4.14/data/myid</span><br></pre></td></tr></table></figure></li><li><p>将zookeeper-3.4.14同步至slave</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r -P 22222 zookeeper-3.4.14 slave1:/yibao/data/app/</span><br><span class="line">scp -r -P 22222 zookeeper-3.4.14 slave2:/yibao/data/app/</span><br></pre></td></tr></table></figure></li><li><p>修改zookeeper id<br>slave1 下/yibao/data/app/zookeeper-3.4.14/data/myid 改为1<br>slave2 下/yibao/data/app/zookeeper-3.4.14/data/myid 改为2</p></li><li><p>配置zookeeper环境变量,加入/etc/profile</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> ZOOKEEPER_HOME=/yibao/data/app/zookeeper-3.4.14</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$ZOOKEEPER_HOME</span>/bin</span><br></pre></td></tr></table></figure></li><li><p>启动zookeeper<br>master: ./bin/zkServer.sh start<br>slave1: ./bin/zkServer.sh start<br>slave2: ./bin/zkServer.sh start  </p></li><li><p>验证<br>master上执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">./bin/zkCli.sh</span><br><span class="line">2019-06-30 15:30:12,558 [myid:] - INFO  [main:Environment@100] - Client </span><br><span class="line">.......................</span><br><span class="line">WatchedEvent state:SyncConnected <span class="built_in">type</span>:None path:null</span><br><span class="line">[zk: localhost:2181(CONNECTED) 0] create /sakura Gaara</span><br><span class="line">Created /sakura</span><br><span class="line">[zk: localhost:2181(CONNECTED) 1] get /sakura</span><br><span class="line">Gaara</span><br><span class="line">...................</span><br><span class="line">[zk: localhost:2181(CONNECTED) 2]</span><br></pre></td></tr></table></figure></li></ol><p>slave1, slave2上去验证<br> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">./bin/zkCli.sh</span><br><span class="line">Connecting to localhost:2181</span><br><span class="line">2019-06-30 15:33:03,582 [myid:] - INFO  [main:Environment@100] - Client </span><br><span class="line">.......................</span><br><span class="line">WatchedEvent state:SyncConnected <span class="built_in">type</span>:None path:null</span><br><span class="line">[zk: localhost:2181(CONNECTED) 0] get /sakura</span><br><span class="line">Gaara</span><br><span class="line">...........</span><br><span class="line">[zk: localhost:2181(CONNECTED) 1]</span><br></pre></td></tr></table></figure></p><h3 id="安装hbase集群"><a href="#安装hbase集群" class="headerlink" title="安装hbase集群"></a>安装hbase集群</h3><h4 id="解压hbase"><a href="#解压hbase" class="headerlink" title="解压hbase"></a>解压hbase</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf hbase-1.3.5-bin.tar.gz -C /yibao/data/app</span><br><span class="line"><span class="built_in">cd</span> hbase-1.3.5/conf</span><br></pre></td></tr></table></figure><h4 id="配置hbase"><a href="#配置hbase" class="headerlink" title="配置hbase"></a>配置hbase</h4><ol><li><p>修改hbase-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.rootdir<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://master:9000/yibao/data/app/hbase-1.3.5<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.cluster.distributed<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.master<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:60000<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.zookeeper.property.dataDir<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/yibao/data/app/hbase-1.3.5/zookeeperdata<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.zookeeper.quorum<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>master,slave1,slave2<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.zookeeper.property.clientPort<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>2181<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/yibao/data/app/hbase-1.3.5/tmpdata<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在conf下创建backup-masters文件，设置slave1为Backup Masters  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"slave1"</span> &gt; backup-masters</span><br></pre></td></tr></table></figure></li><li><p>修改regionservers，设置slave1,slave2为Region Servers  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat regionservers </span><br><span class="line">slave1</span><br><span class="line">slave2</span><br></pre></td></tr></table></figure></li><li><p>修改hbase-env.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> HBASE_SSH_OPTS=<span class="string">"-p 22222"</span> <span class="comment"># 由于ssh端口是22222，所以此处添加</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/java/jdk1.8.0_60</span><br><span class="line"><span class="built_in">export</span> HBASE_CLASSPATH=/yibao/data/app/hbase-1.3.5/conf</span><br><span class="line"><span class="built_in">export</span> HBASE_MANAGES_ZK=<span class="literal">false</span></span><br><span class="line"><span class="built_in">export</span> HBASE_HOME=/yibao/data/app/hbase-1.3.5</span><br><span class="line"><span class="built_in">export</span> HADOOP_HOME=/yibao/data/app/hadoop-2.7.7</span><br><span class="line"><span class="built_in">export</span> HBASE_LOG_DIR=/yibao/data/app/hbase-1.3.5/logs</span><br></pre></td></tr></table></figure></li><li><p>创建hbase配置所需的文件夹</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /yibao/data/app/hbase-1.3.5</span><br><span class="line">mkdir -p tmpdata zookeeperdata</span><br></pre></td></tr></table></figure></li><li><p>将hbase-1.3.5同步到slave1,slave2</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r -P 22222 hbase-1.3.5 slave1:/yibao/data/app/</span><br><span class="line">scp -r -P 22222 hbase-1.3.5 slave2:/yibao/data/app/</span><br></pre></td></tr></table></figure></li><li><p>三台服务器配置hbase环境变量</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> HBASE_HOME=/yibao/data/app/hbase-1.3.5</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HBASE_HOME</span>/bin</span><br></pre></td></tr></table></figure></li></ol><h4 id="启动hbase"><a href="#启动hbase" class="headerlink" title="启动hbase"></a>启动hbase</h4><ol start="8"><li><p>master上启动hbase,启动之前确认ZK已经启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$HBASE_HOME</span></span><br><span class="line">bin/start-hbase.sh</span><br></pre></td></tr></table></figure></li><li><p>启动后jps验证<br>master: jps<br>启动的HMaster进程为hbase进程</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">25588 HMaster</span><br><span class="line">4678 Jps</span><br><span class="line">11287 SecondaryNameNode</span><br><span class="line">6552 QuorumPeerMain</span><br><span class="line">11534 ResourceManager</span><br><span class="line">11055 NameNode</span><br></pre></td></tr></table></figure></li></ol><p>slave1: jps<br>启动的HMaster进程为配置slave1为Backup Masters，HRegionServer进程为Region Servers</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">24402 Jps</span><br><span class="line">10402 HRegionServer</span><br><span class="line">11267 QuorumPeerMain</span><br><span class="line">32020 DataNode</span><br><span class="line">31546 Bootstrap</span><br><span class="line">10508 HMaster</span><br><span class="line">32142 NodeManager</span><br></pre></td></tr></table></figure><p>slave2: jps<br>启动的HRegionServer进程为Region Servers</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">2608 NodeManager</span><br><span class="line">2388 Bootstrap</span><br><span class="line">2469 DataNode</span><br><span class="line">14135 QuorumPeerMain</span><br><span class="line">18442 HRegionServer</span><br><span class="line">32431 Jps</span><br></pre></td></tr></table></figure><ol start="10"><li>web界面访问master主机HMaster进程的端口16010<br>也可以看出详细的信息，显示Master，Region Servers，Backup Masters，Tables等更多的详细信息</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;相关软件准备 apache-hive-2.3.5-bin.tar.gz  hadoop-2.7.7.tar.gz  hbase-1.3.5-bin.tar.gz  mysql-5.7.22-linux-glibc2.12-x86_64.tar.gz  mysql-connector-java-5.1.42-bin.jar  zookeeper-3.4.14.tar.gz&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;环境介绍&quot;&gt;&lt;a href=&quot;#环境介绍&quot; class=&quot;headerlink&quot; title=&quot;环境介绍&quot;&gt;&lt;/a&gt;环境介绍&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;准备三台服务器，修改hostname主机名，分别为master, slave1, slave2,并将三台主机名添加到/etc/hosts中&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;10.27.214.15 slave1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10.26.234.215 slave2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10.26.108.150 master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;准备好相关的安装目录，mkdir /yibao/data/app (所有的项目都会安装在次目录下)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置三台服务器之间无密码登陆&lt;/p&gt;
    
    </summary>
    
    
      <category term="大数据" scheme="https://ngames-dev.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="hive" scheme="https://ngames-dev.cn/tags/hive/"/>
    
      <category term="hadoop" scheme="https://ngames-dev.cn/tags/hadoop/"/>
    
      <category term="hbase" scheme="https://ngames-dev.cn/tags/hbase/"/>
    
  </entry>
  
  <entry>
    <title>nginx配置url重写</title>
    <link href="https://ngames-dev.cn/2019/06/06/nginx%E9%85%8D%E7%BD%AEurl%E9%87%8D%E5%86%99/"/>
    <id>https://ngames-dev.cn/2019/06/06/nginx配置url重写/</id>
    <published>2019-06-05T16:00:00.000Z</published>
    <updated>2019-09-06T09:23:30.125Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>url重写是指通过配置conf文件，以让网站的url中达到某种状态时则定向/跳转到某个规则<br>比如常见的伪静态、301重定向、浏览器定向等</p></blockquote><h2 id="rewrite语法"><a href="#rewrite语法" class="headerlink" title="rewrite语法"></a>rewrite语法</h2><p>在配置文件的server块中写，如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    rewrite 规则 定向路径 重写类型;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>规则：可以是字符串或者正则来表示想匹配的目标url<br>定向路径：表示匹配到规则后要定向的路径，如果规则里有正则，则可以使用$index来表示正则里的捕获分组<br>重写类型：<br>last 相当于Apache里德(L)标记，表示完成rewrite，浏览器地址栏URL地址不变<br>break 本条规则匹配完成后，终止匹配，不再匹配后面的规则，浏览器地址栏URL地址不变<br>redirect 返回302临时重定向，浏览器地址会显示跳转后的URL地址<br>permanent 返回301永久重定向，浏览器地址栏会显示跳转后的URL地址  </p><p><strong>简单例子</strong>  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    <span class="comment"># 访问 /last.html 的时候，页面内容重写到 /index.html 中</span></span><br><span class="line">    rewrite /last.html /index.html last;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 访问 /break.html 的时候，页面内容重写到 /index.html 中，并停止后续的匹配</span></span><br><span class="line">    rewrite /break.html /index.html <span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 访问 /redirect.html 的时候，页面直接302定向到 /index.html中</span></span><br><span class="line">    rewrite /redirect.html /index.html redirect;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 访问 /permanent.html 的时候，页面直接301定向到 /index.html中</span></span><br><span class="line">    rewrite /permanent.html /index.html permanent;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 把 /html/*.html =&gt; /post/*.html ，301定向</span></span><br><span class="line">    rewrite ^/html/(.+?).html$ /post/<span class="variable">$1</span>.html permanent;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 把 /search/key =&gt; /search.html?keyword=key</span></span><br><span class="line">    rewrite ^/search\/([^\/]+?)(\/|$) /search.html?keyword=<span class="variable">$1</span> permanent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>last和break的区别</strong><br>因为301和302不能简单的只返回状态码，还必须有重定向的URL，这就是return指令无法返回301,302的原因了。这里 last 和 break 区别有点难以理解  </p><p>last一般写在server和if中，而break一般使用在location中<br>last不终止重写后的url匹配，即新的url会再从server走一遍匹配流程，而break终止重写后的匹配<br>break和last都能组织继续执行后面的rewrite指令<br>在location里一旦返回break则直接生效并停止后续的匹配location  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    location / &#123;</span><br><span class="line">        rewrite /last/ /q.html last;</span><br><span class="line">        rewrite /<span class="built_in">break</span>/ /q.html <span class="built_in">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location = /q.html &#123;</span><br><span class="line">        <span class="built_in">return</span> 400;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问/last/时重写到/q.html，然后使用新的uri再匹配，正好匹配到locatoin = /q.html然后返回了400<br>访问/break时重写到/q.html，由于返回了break，则直接停止了  </p><h2 id="if判断"><a href="#if判断" class="headerlink" title="if判断"></a>if判断</h2><p>只是上面的简单重写很多时候满足不了需求，比如需要判断当文件不存在时、当路径包含xx时等条件，则需要用到if  </p><p><strong>语法</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (表达式) &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当表达式只是一个变量时，如果值为空或任何以0开头的字符串都会当做false<br>直接比较变量和内容时，使用=或!=<br><code>~正则表达式匹配，~*不区分大小写的匹配，!~区分大小写的不匹配</code><br>一些内置的条件判断：<br>-f和!-f用来判断是否存在文件<br>-d和!-d用来判断是否存在目录<br>-e和!-e用来判断是否存在文件或目录<br>-x和!-x用来判断文件是否可执行  </p><p><strong>内置的全局变量</strong>  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$args</span> ：这个变量等于请求行中的参数，同<span class="variable">$query_string</span></span><br><span class="line"><span class="variable">$content_length</span> ： 请求头中的Content-length字段。</span><br><span class="line"><span class="variable">$content_type</span> ： 请求头中的Content-Type字段。</span><br><span class="line"><span class="variable">$document_root</span> ： 当前请求在root指令中指定的值。</span><br><span class="line"><span class="variable">$host</span> ： 请求主机头字段，否则为服务器名称。</span><br><span class="line"><span class="variable">$http_user_agent</span> ： 客户端agent信息</span><br><span class="line"><span class="variable">$http_cookie</span> ： 客户端cookie信息</span><br><span class="line"><span class="variable">$limit_rate</span> ： 这个变量可以限制连接速率。</span><br><span class="line"><span class="variable">$request_method</span> ： 客户端请求的动作，通常为GET或POST。</span><br><span class="line"><span class="variable">$remote_addr</span> ： 客户端的IP地址。</span><br><span class="line"><span class="variable">$remote_port</span> ： 客户端的端口。</span><br><span class="line"><span class="variable">$remote_user</span> ： 已经经过Auth Basic Module验证的用户名。</span><br><span class="line"><span class="variable">$request_filename</span> ： 当前请求的文件路径，由root或<span class="built_in">alias</span>指令与URI请求生成。</span><br><span class="line"><span class="variable">$scheme</span> ： HTTP方法（如http，https）。</span><br><span class="line"><span class="variable">$server_protocol</span> ： 请求使用的协议，通常是HTTP/1.0或HTTP/1.1。</span><br><span class="line"><span class="variable">$server_addr</span> ： 服务器地址，在完成一次系统调用后可以确定这个值。</span><br><span class="line"><span class="variable">$server_name</span> ： 服务器名称。</span><br><span class="line"><span class="variable">$server_port</span> ： 请求到达服务器的端口号。</span><br><span class="line"><span class="variable">$request_uri</span> ： 包含请求参数的原始URI，不包含主机名，如：”/foo/bar.php?arg=baz”。</span><br><span class="line"><span class="variable">$uri</span> ： 不带请求参数的当前URI，<span class="variable">$uri</span>不包含主机名，如”/foo/bar.html”。</span><br><span class="line"><span class="variable">$document_uri</span> ： 与<span class="variable">$uri</span>相同。</span><br></pre></td></tr></table></figure><p>如：</p><p>访问链接是：<a href="http://localhost:88/test1/test2/test.php" target="_blank" rel="noopener">http://localhost:88/test1/test2/test.php</a><br>网站路径是：/var/www/html  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$host</span>：localhost</span><br><span class="line"><span class="variable">$server_port</span>：88</span><br><span class="line"><span class="variable">$request_uri</span>：http://localhost:88/test1/test2/test.php</span><br><span class="line"><span class="variable">$document_uri</span>：/test1/test2/test.php</span><br><span class="line"><span class="variable">$document_root</span>：/var/www/html</span><br><span class="line"><span class="variable">$request_filename</span>：/var/www/html/test1/test2/test.php</span><br></pre></td></tr></table></figure><p>例子<br>如果文件不存在则返回400  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!-f <span class="variable">$request_filename</span>) &#123;</span><br><span class="line">    <span class="built_in">return</span> 400;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果host不是xuexb.com，则301到xuexb.com中  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( <span class="variable">$host</span> != <span class="string">"xuexb.com"</span> )&#123;</span><br><span class="line">    rewrite ^/(.*)$ https://xuexb.com/<span class="variable">$1</span> permanent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果请求类型不是POST则返回405  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$request_method</span> = POST) &#123;</span><br><span class="line">    <span class="built_in">return</span> 405;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果参数中有 a=1 则301到指定域名  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$args</span> ~ a=1) &#123;</span><br><span class="line">    rewrite ^ http://example.com/ permanent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在某种场景下可结合location规则来使用，如：<br>访问 /test.html 时  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">location = /test.html &#123;</span><br><span class="line">    <span class="comment"># 默认值为xiaowu</span></span><br><span class="line">    <span class="built_in">set</span> <span class="variable">$name</span> xiaowu;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果参数中有 name=xx 则使用该值</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$args</span> ~* name=(\w+?)(&amp;|$)) &#123;</span><br><span class="line">        <span class="built_in">set</span> <span class="variable">$name</span> <span class="variable">$1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 301</span></span><br><span class="line">    rewrite ^ /<span class="variable">$name</span>.html permanent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面表示：  </p><p>/test.html =&gt; /xiaowu.html<br>/test.html?name=ok =&gt; /ok.html?name=ok</p><h2 id="location语法"><a href="#location语法" class="headerlink" title="location语法"></a>location语法</h2><p>在server块中使用，如：  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    location 表达式 &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>location表达式类型  </p><p>如果直接写一个路径，则匹配该路径下的<br>~ 表示执行一个正则匹配，区分大小写<br><code>~* 表示执行一个正则匹配，不区分大小写</code><br>^~ 表示普通字符匹配。使用前缀匹配。如果匹配成功，则不再匹配其他location。<br>= 进行普通字符精确匹配。也就是完全匹配。<br>优先级<br>等号类型（=）的优先级最高。一旦匹配成功，则不再查找其他匹配项。<br><code>^~类型表达式。一旦匹配成功，则不再查找其他匹配项。</code><br>正则表达式类型（~ ~*）的优先级次之。如果有多个location的正则能匹配的话，则使用正则表达式最长的那个。<br>常规字符串匹配类型。按前缀匹配。  </p><p><strong>例子 - 假地址掩饰真地址</strong>  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    <span class="comment"># 用 xxoo_admin 来掩饰 admin</span></span><br><span class="line">    location / &#123;</span><br><span class="line">        <span class="comment"># 使用break拿一旦匹配成功则忽略后续location</span></span><br><span class="line">        rewrite /xxoo_admin /admin <span class="built_in">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 访问真实地址直接报没权限</span></span><br><span class="line">    location /admin &#123;</span><br><span class="line">        <span class="built_in">return</span> 403;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;url重写是指通过配置conf文件，以让网站的url中达到某种状态时则定向/跳转到某个规则&lt;br&gt;比如常见的伪静态、301重定向、浏览器定向等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;rewrite语法&quot;&gt;&lt;a href=&quot;#rewrite语法&quot; class=&quot;headerlink&quot; title=&quot;rewrite语法&quot;&gt;&lt;/a&gt;rewrite语法&lt;/h2&gt;&lt;p&gt;在配置文件的server块中写，如：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rewrite 规则 定向路径 重写类型;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="nginx" scheme="https://ngames-dev.cn/categories/nginx/"/>
    
    
      <category term="nginx" scheme="https://ngames-dev.cn/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Git Page添加网易云音乐</title>
    <link href="https://ngames-dev.cn/2019/04/26/Git%20Page%E6%B7%BB%E5%8A%A0%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90/"/>
    <id>https://ngames-dev.cn/2019/04/26/Git Page添加网易云音乐/</id>
    <published>2019-04-25T16:00:00.000Z</published>
    <updated>2019-09-06T09:23:30.124Z</updated>
    
    <content type="html"><![CDATA[<ul><li>添加到 <code>_post.html</code> 合适的位置 </li><li>在写好的markdown文档的头文件中添加：<code>music-id: xxx</code> 配置项。具体的id号就是选取的歌曲的外链中的id号。  </li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">marginheight</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">330</span> <span class="attr">height</span>=<span class="string">86</span> <span class="attr">src</span>=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=&#123; &#123; page.music-id &#125; &#125;&amp;auto=1&amp;height=66"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>但是这个好像被网易云屏蔽了</p><hr><p>/assets/mp3/duli.mp3</p>_includes中添加文件open-embed.html， [文件内容](https://github.com/SakuraGaara/sakuragaara.github.io/blob/master/_includes/open-embed.html)  <p>而后在_includes/_layout.html文件中添加 <code>\{\% include open-embed.html \%\}</code> ，以每次打开页面都能加载open-embed.html中的内容  </p><p>最后添加音乐之需要在md文件中添加</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>http://xxxx.mp3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>获取网易云音乐id</p><p><a href="http://music.163.com/song/media/outer/url?id=id.mp3" target="_blank" rel="noopener">http://music.163.com/song/media/outer/url?id=id.mp3</a></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;添加到 &lt;code&gt;_post.html&lt;/code&gt; 合适的位置 &lt;/li&gt;
&lt;li&gt;在写好的markdown文档的头文件中添加：&lt;code&gt;music-id: xxx&lt;/code&gt; 配置项。具体的id号就是选取的歌曲的外链中的id号。  &lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;iframe&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;frameborder&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;no&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;border&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;marginwidth&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;marginheight&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;330&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;86&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;//music.163.com/outchain/player?type=2&amp;amp;id=&amp;#123; &amp;#123; page.music-id &amp;#125; &amp;#125;&amp;amp;auto=1&amp;amp;height=66&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;iframe&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="网易云" scheme="https://ngames-dev.cn/categories/%E7%BD%91%E6%98%93%E4%BA%91/"/>
    
    
      <category term="网易云" scheme="https://ngames-dev.cn/tags/%E7%BD%91%E6%98%93%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>一图掌握kubernetes客户端命令kubectl</title>
    <link href="https://ngames-dev.cn/2019/04/26/%E4%B8%80%E5%9B%BE%E6%8E%8C%E6%8F%A1kubernetes%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%91%BD%E4%BB%A4kubectl/"/>
    <id>https://ngames-dev.cn/2019/04/26/一图掌握kubernetes客户端命令kubectl/</id>
    <published>2019-04-25T16:00:00.000Z</published>
    <updated>2019-09-06T09:23:30.124Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>kubectl客户端命令</p></blockquote><p><a href="https://sakuragaara.github.io/images/img/20190426/kubernetes-kubectl-cheatsheet.png" target="_blank" rel="noopener">https://sakuragaara.github.io/images/img/20190426/kubernetes-kubectl-cheatsheet.png</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;kubectl客户端命令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://sakuragaara.github.io/images/img/20190426/kubernetes-kubectl-cheatsheet.p
      
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://ngames-dev.cn/categories/kubernetes/"/>
    
    
      <category term="kubernetes" scheme="https://ngames-dev.cn/tags/kubernetes/"/>
    
      <category term="kubectl" scheme="https://ngames-dev.cn/tags/kubectl/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes Pod控制器</title>
    <link href="https://ngames-dev.cn/2019/04/23/kuberneres%20Pod%E6%8E%A7%E5%88%B6%E5%99%A8/"/>
    <id>https://ngames-dev.cn/2019/04/23/kuberneres Pod控制器/</id>
    <published>2019-04-22T16:00:00.000Z</published>
    <updated>2019-10-31T10:54:37.088Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Pod是kubernetes的最小单元, 自主式创建的Pod删除之后就没有了，但是通过资源控制器创建的Pod如果被删除还会重建<br>  <strong>自主式Pod：</strong> 创建一个Pod资源清单，<code>kubectl create -f xxxx.yaml</code><br>  <strong>资源控制器：</strong> <code>kubectl run xxxx --image=xxxx --replicas=2 --port=80</code> 默认属于 <code>deployment</code>控制器管理<br>  <strong>Pod控制器</strong>  就是用于实现代替我们去管理pod的中间层，并帮助我们确保每一个Pod资源处于我们所定义或期望的目标状态pod资源出现故障首先要重启，如果一直重启有问题的话会基于某种策略重新编排。自动适应期望pod数量<br>  <strong><a href="https://sakuragaara.github.io/kubernetes/2019/04/18/kubernetes-Pod%E8%B5%84%E6%BA%90%E6%B8%85%E5%8D%95%E6%B3%A8%E8%A7%A3/#" target="_blank" rel="noopener">Pod资源清单</a> 作为模板内嵌在Pod控制器内进行创建</strong>  </p></blockquote><a id="more"></a><h2 id="Pod控制器"><a href="#Pod控制器" class="headerlink" title="Pod控制器"></a>Pod控制器</h2><h3 id="ReplicaSet"><a href="#ReplicaSet" class="headerlink" title="ReplicaSet"></a>ReplicaSet</h3><p><strong>ReplicaSet: 新一代的ReplicationController</strong><br>代用户创建指定数量的Pod副本数量，并确保Pod副本一直满足用户期望的数量状态，多退少补，而且还支持自动扩缩容机制<br><strong><em>但是kuberneters不建议直接使用ReporcaSet</em></strong><br>ReporcaSet主要由三个重要组件组成：<br>（1） 管控用户期望的Pod副本数量<br>（2） 标签选择器，判定归自己管理可控制的Pod副本<br>（3） Pod资源模板（当现存的pod副本数量不足，会根据Pod资源模板进行新建，帮助用户管理无状态的Pod资源，精确反应用户定义的目标数量）  </p><h3 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h3><p><strong>Deployment： 无状态，守护进程类，只关注群体不关注个体</strong><br>工作在ReplicaSet之上，通过ReplicaSet管理无状态Pod资源，是目前来说最好的控制器(意味着满足ReplicaSet的所有功能)<br>除此之外，支持滚动更新和回滚等机制，而且还提供声明式配置，可随时通过修改声明来定义目标期望状态  </p><h3 id="DaemonSet"><a href="#DaemonSet" class="headerlink" title="DaemonSet"></a>DaemonSet</h3><p><strong><em>DaemonSet：无状态，守护进程类，只关注群体不关注个体 Pod与Node一对一的关系</em></strong><br>确保集群中每一个节点上只运行一个特定的Pod副本，系统级的后台任务，新增节点他都会自动添加pod<br>也可以是满足条件的节点上运行特定的副本  </p><h3 id="Job"><a href="#Job" class="headerlink" title="Job"></a>Job</h3><p><strong><em>Job：有状态，一次性任务</em></strong><br>只要完成就立即退出，不需要重启或重建，没有完成重构job。只能执行一次性任务　  </p><h3 id="Cronjob"><a href="#Cronjob" class="headerlink" title="Cronjob"></a>Cronjob</h3><p><strong><em>Cronjob：有状态，周期性任务</em></strong><br>周期性任务控制，不需要持续后台运行  </p><h3 id="StatefulSet"><a href="#StatefulSet" class="headerlink" title="StatefulSet"></a>StatefulSet</h3><p><strong><em>StatefulSet：管理有状态应用</em></strong><br>管理有状态应用（redis cluster）针对管理的应用器配置管理是不一样的，没有什么共通的规律，需要人为的封装在脚本中实行，相当之大的逻辑处理。（运维技能封装到运维脚本中）  </p><h2 id="Pod控制器应用"><a href="#Pod控制器应用" class="headerlink" title="Pod控制器应用"></a>Pod控制器应用</h2><h3 id="ReplicaSet-1"><a href="#ReplicaSet-1" class="headerlink" title="ReplicaSet"></a>ReplicaSet</h3><p>help:<code>kubectl explain ReplicaSet</code> 简写 <code>rs</code><br>ReplicaSet先定义控制器 <code>apiVersion</code>,<code>kind</code>,<code>metadata</code>,<code>spec</code>等资源<br>而在<code>spec</code>资源中，定义Pod数量，控制器标签选择器和Pod的模板<br>模板中定义Pod<code>metadata</code>,<code>spec</code>等资源，metadata中Pod的标签必须需要继承控制器的标签属性<br>支持动态修改<code>kubectl edit rs myapp</code> , 但是并不支持修改模板中的Pod内容，因为控制器定义的数量不变,除非人为手动删除控制器中的pod  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ReplicaSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">myapp</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">2</span><span class="comment"># Pod数量</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span>  <span class="comment"># 定义ReplicaSet标签</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">myapp</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">flask-app</span></span><br><span class="line"><span class="attr">      namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">      labels:</span><span class="comment"># 必须继承ReplicaSet标签，否则一直创建</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">myapp</span></span><br><span class="line"><span class="attr">        ifram:</span> <span class="string">flask</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">flaskapp</span></span><br><span class="line"><span class="attr">          image:</span> <span class="string">sakuragaara/flaskapp:v1</span></span><br><span class="line"><span class="attr">          imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line"><span class="attr">          ports:</span></span><br><span class="line"><span class="attr">          - name:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">            containerPort:</span> <span class="number">5000</span></span><br><span class="line"><span class="attr">          livenessProbe:</span></span><br><span class="line"><span class="attr">            tcpSocket:</span></span><br><span class="line"><span class="attr">                port:</span> <span class="number">5000</span></span><br><span class="line"><span class="attr">            timeoutSeconds:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">      restartPolicy:</span> <span class="string">Always</span></span><br></pre></td></tr></table></figure><h3 id="Deployment-1"><a href="#Deployment-1" class="headerlink" title="Deployment"></a>Deployment</h3><p>help: <code>kubectl explain deployment</code>  简写 <code>deploy</code><br>Deployment与ReplicaSet一样，定义控制器<code>apiVersion</code>,<code>kind</code>,<code>metadata</code>,<code>spec</code>等资源<br>而在<code>spec</code>资源中，定义Pod数量，控制器标签选择器和Pod的模板<br>支持动态修改Pod副本数量，更新资源镜像，支持回滚<br>  修改Pod副本数量,更新资源Pod镜像<br>  可以使用<code>kubectl edit deployment flask-deploy</code>编辑修改，也可以编辑文件flask-deploy.yaml之后，<code>kubectl apply -f flask-deploy.yaml</code>更新，默认为滚动更新方式<br>  更新Pod镜像资源后，可以使用<code>kubectl get rs -o wide</code>查看,默认的rs模板被保留，这就是备份，随时可以使用它进行回滚  </p><h4 id="创建和查看"><a href="#创建和查看" class="headerlink" title="创建和查看"></a>创建和查看</h4><p>  <img src="/images/img/20190423/kubectl_create.png" alt="创建和查看">  </p><h4 id="更新副本数量"><a href="#更新副本数量" class="headerlink" title="更新副本数量"></a>更新副本数量</h4><ul><li>可使用修改yaml更新，可以<code>kubectl edit</code>或者<code>kubectl scale</code>更新<br><img src="/images/img/20190423/kubectl_update1.png" alt="更新副本数量">  </li></ul><h4 id="更新镜像"><a href="#更新镜像" class="headerlink" title="更新镜像"></a>更新镜像</h4><ul><li>使用修改yaml更新，也可以使用<code>kubectl set image</code>的方式进行更新<br><img src="/images/img/20190423/kubectl_update2.png" alt="更新镜像"><br><img src="/images/img/20190423/kubectl_update3.png" alt="更新镜像">  </li></ul><h4 id="回滚"><a href="#回滚" class="headerlink" title="回滚"></a>回滚</h4><ul><li>使用<code>kubectl rollout history deployment flask-deploy</code>,可查看Deployment更新历史版本,<code>--revision=1</code> 可查看Deployment的详细信息，在<code>kubectl apply</code>时添加<code>--record</code>才会查看到更新命令备注信息  </li><li>使用<code>kubectl rollout undo deployment flask-deploy --to-revision=1</code> 进行回滚<br><img src="/images/img/20190423/kubectl_rollout.png" alt="回滚">  </li></ul><h4 id="使用修改补丁方式"><a href="#使用修改补丁方式" class="headerlink" title="使用修改补丁方式"></a>使用修改补丁方式</h4><p>  如<code>kubectl patch deployment flask-deploy -p &#39;{&quot;spec&quot;:{&quot;replicas&quot;:5}}&#39;</code> -p参数，只支持json格式修改  </p><h4 id="灰度发布（金丝雀发布）"><a href="#灰度发布（金丝雀发布）" class="headerlink" title="灰度发布（金丝雀发布）"></a>灰度发布（金丝雀发布）</h4><p>  Deployment默认为滚动更新方式，<code>kubectl describe deployment flask-deploy</code> 可以查看，可以修改其发布方式为灰度发布<br>  <code>spec.strategy.rollingUpdate.maxUnavailable</code><br>  用来控制不可用Pod数量的最大值，从而在删除旧Pod时保证一定数量的可用Pod。当replicas=3，如果配置为1，则更新过程中会保证至少有2个可用Pod。默认为1<br>  <code>spec.strategy.rollingUpdate.maxSurge</code><br>  用来控制超过期望数量的Pod数量最大值，从而在创建新Pod时限制总量。当replicas=3,如配置为1,则更新过着中会保证Pod总数量最多有4个。默认为1<br>  （1）补丁方式更新为灰度发布<br>    <code>kubectl patch deploy  flask-deploy -p &#39;{&quot;spec&quot;:{&quot;strategy&quot;:{&quot;rollingUpdate&quot;:{&quot;maxSurge&quot;:1,&quot;maxUnavailable&quot;:0}}}}&#39;</code><br>  <img src="/images/img/20190423/kubectl_strategyType.png" alt="灰度发布"><br>  （2）更新镜像，暂停,并监控pod更新状态<br>    <img src="/images/img/20190423/k1.png" alt="k1"><br>    <img src="/images/img/20190423/k2.png" alt="k2"><br>    <img src="/images/img/20190423/k3.png" alt="k3">  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">flask-deploy.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line"><span class="attr">  name:</span> <span class="string">flask-deploy</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">flask</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">flask-pod</span></span><br><span class="line"><span class="attr">      namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">flask</span></span><br><span class="line"><span class="attr">        langure:</span> <span class="string">python</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">flask-container</span></span><br><span class="line"><span class="attr">        image:</span> <span class="string">sakuragaara/flaskapp:v1</span></span><br><span class="line"><span class="attr">        imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">          containerPort:</span> <span class="number">5000</span></span><br><span class="line"><span class="attr">        livenessProbe:</span></span><br><span class="line"><span class="attr">          httpGet:</span></span><br><span class="line"><span class="attr">            port:</span> <span class="number">5000</span></span><br><span class="line"><span class="attr">            scheme:</span> <span class="string">HTTP</span></span><br><span class="line"><span class="attr">            path:</span> <span class="string">/index</span></span><br><span class="line"><span class="attr">          initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">          timeoutSeconds:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Pod是kubernetes的最小单元, 自主式创建的Pod删除之后就没有了，但是通过资源控制器创建的Pod如果被删除还会重建&lt;br&gt;  &lt;strong&gt;自主式Pod：&lt;/strong&gt; 创建一个Pod资源清单，&lt;code&gt;kubectl create -f xxxx.yaml&lt;/code&gt;&lt;br&gt;  &lt;strong&gt;资源控制器：&lt;/strong&gt; &lt;code&gt;kubectl run xxxx --image=xxxx --replicas=2 --port=80&lt;/code&gt; 默认属于 &lt;code&gt;deployment&lt;/code&gt;控制器管理&lt;br&gt;  &lt;strong&gt;Pod控制器&lt;/strong&gt;  就是用于实现代替我们去管理pod的中间层，并帮助我们确保每一个Pod资源处于我们所定义或期望的目标状态pod资源出现故障首先要重启，如果一直重启有问题的话会基于某种策略重新编排。自动适应期望pod数量&lt;br&gt;  &lt;strong&gt;&lt;a href=&quot;https://sakuragaara.github.io/kubernetes/2019/04/18/kubernetes-Pod%E8%B5%84%E6%BA%90%E6%B8%85%E5%8D%95%E6%B3%A8%E8%A7%A3/#&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Pod资源清单&lt;/a&gt; 作为模板内嵌在Pod控制器内进行创建&lt;/strong&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://ngames-dev.cn/categories/kubernetes/"/>
    
    
      <category term="kubernetes" scheme="https://ngames-dev.cn/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Flask蓝图</title>
    <link href="https://ngames-dev.cn/2019/04/18/Flask%E8%93%9D%E5%9B%BE/"/>
    <id>https://ngames-dev.cn/2019/04/18/Flask蓝图/</id>
    <published>2019-04-17T16:00:00.000Z</published>
    <updated>2019-10-14T07:39:31.007Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Flask蓝图提供了模块化管理程序路由的功能，使程序结构清晰、简单易懂<br>首先，让我们来看下flask应用与蓝图之间的关系。蓝图代表着应用的一个个功能模块，能做到即插即用。</p></blockquote><p><img src="/images/img/2019-04-18-buleprint.png" alt="buleprint"></p><h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">project</span><br><span class="line">├── app</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   └── web</span><br><span class="line">│       ├── __init__.py</span><br><span class="line">│       └── login.py</span><br><span class="line">└── app.py</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="Demo-Code"><a href="#Demo-Code" class="headerlink" title="Demo Code"></a>Demo Code</h3><ul><li>app/__init__.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_app</span><span class="params">()</span>:</span></span><br><span class="line">    app = Flask(__name__)</span><br><span class="line">    app.secret_key = <span class="string">'XxxxxxX'</span></span><br><span class="line">    registry_blueprint(app)</span><br><span class="line">    <span class="keyword">return</span> app</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">registry_blueprint</span><span class="params">(app)</span>:</span></span><br><span class="line">    <span class="keyword">from</span> app.web <span class="keyword">import</span> web</span><br><span class="line">    app.register_blueprint(web)</span><br></pre></td></tr></table></figure><ul><li>app.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> app <span class="keyword">import</span> create_app</span><br><span class="line">app = create_app()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><ul><li>web/__init__.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Blueprint</span><br><span class="line"></span><br><span class="line">web = Blueprint(<span class="string">'web'</span>, __name__)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> app.web <span class="keyword">import</span> login</span><br></pre></td></tr></table></figure><ul><li>web/login.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> web</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@web.route('/login/&lt;username&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(username)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> username</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Flask蓝图提供了模块化管理程序路由的功能，使程序结构清晰、简单易懂&lt;br&gt;首先，让我们来看下flask应用与蓝图之间的关系。蓝图代表着应用的一个个功能模块，能做到即插即用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/images/img/2019-04-18-buleprint.png&quot; alt=&quot;buleprint&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;结构&quot;&gt;&lt;a href=&quot;#结构&quot; class=&quot;headerlink&quot; title=&quot;结构&quot;&gt;&lt;/a&gt;结构&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;project&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── app&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── __init__.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   └── web&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│       ├── __init__.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│       └── login.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└── app.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Flask" scheme="https://ngames-dev.cn/categories/Flask/"/>
    
    
      <category term="Flask" scheme="https://ngames-dev.cn/tags/Flask/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes Pod资源清单注解</title>
    <link href="https://ngames-dev.cn/2019/04/18/kubernetes%20Pod%E8%B5%84%E6%BA%90%E6%B8%85%E5%8D%95%E6%B3%A8%E8%A7%A3/"/>
    <id>https://ngames-dev.cn/2019/04/18/kubernetes Pod资源清单注解/</id>
    <published>2019-04-17T16:00:00.000Z</published>
    <updated>2019-11-01T10:13:36.177Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>创建资源的方法：<br>定义yaml格式提供配置清单,将资源清单提交给apiServer<br>  apiServer可自动将其转换为json格式，而后提交给Scheduler(集群中的调度器)<br>  由Scheduler完成调度，调度目标节点完成创建，并启动相关服务  </p></blockquote><h2 id="Pod核心资源配置清单："><a href="#Pod核心资源配置清单：" class="headerlink" title="Pod核心资源配置清单："></a>Pod核心资源配置清单：</h2><blockquote><p>资源清单定义帮助 <code>kubectl explain</code> <code>kubectl explain pods</code> 等查看可嵌套字段  </p></blockquote><h3 id="apiVersion"><a href="#apiVersion" class="headerlink" title="apiVersion"></a>apiVersion</h3><blockquote><p>格式为group/version，所属群组版本<br>支持的版本 <code>kubectl api-versions</code> 可查看  </p></blockquote><h3 id="kind"><a href="#kind" class="headerlink" title="kind"></a>kind</h3><blockquote><p>定义资源类别，Pod,Service,Deployment,Event,Secret等(注意大小写)  </p></blockquote><a id="more"></a><h3 id="metadata"><a href="#metadata" class="headerlink" title="metadata"></a>metadata</h3><blockquote><p>元数据 <code>kubectl explain pods.metadata</code> 查看帮助  </p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">pod_name</span></span><br><span class="line"><span class="attr">    namespace:</span> <span class="string">名称空间</span>  </span><br><span class="line"><span class="attr">    labels:</span> <span class="bullet">--</span> <span class="string">标签</span>  </span><br><span class="line"><span class="attr">       key:</span> <span class="string">value</span></span><br><span class="line"><span class="attr">    annotations:</span> <span class="string">资源注解</span></span><br></pre></td></tr></table></figure><h3 id="spec"><a href="#spec" class="headerlink" title="spec"></a>spec</h3><blockquote><p>disired state 期望状态, <code>kubectl explain pods.spec</code>查看帮助  </p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">    containers:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      image:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      imagePullPolicy:</span> <span class="string">&lt;string&gt;</span> <span class="string">[IfNotPresent,Always,Never]</span></span><br><span class="line">        <span class="comment"># Always：不管镜像是否存在都会进行一次拉取。  </span></span><br><span class="line">        <span class="comment"># Never：不管镜像是否存在都不会进行拉取  </span></span><br><span class="line">        <span class="comment"># IfNotPresent：只有镜像不存在时，才会进行镜像拉取,默认为IfNotPresent，但:latest标签的镜像默认为Always</span></span><br><span class="line">       </span><br><span class="line"><span class="attr">      ports:</span> <span class="string">&lt;[]Object&gt;</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">        containerPort:</span> <span class="string">&lt;integer&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">      command:</span> <span class="string">&lt;[]string&gt;</span> <span class="comment"># 运行的应用程序，类似docker的entrypoint,并且这里的命令不会允许中shell中</span></span><br><span class="line"><span class="attr">      args:</span> <span class="string">&lt;[]string&gt;</span> <span class="comment"># args将参数传给command</span></span><br><span class="line">      </span><br><span class="line"><span class="attr">      lifecycle:</span></span><br><span class="line"><span class="attr">        postStart:</span> <span class="string">&lt;Object&gt;</span> </span><br><span class="line">            <span class="comment"># 容器创建成功后，运行前的任务，用于资源部署、环境准备等，在完成之前，容器处于ContainerCreating状态</span></span><br><span class="line"><span class="attr">        preStop:</span> <span class="string">&lt;Object&gt;</span> </span><br><span class="line">          <span class="comment"># 在容器被终止前的任务，用于优雅关闭应用程序、通知其他系统等等</span></span><br><span class="line">       </span><br><span class="line"><span class="attr">      livenessProbe:</span> <span class="string">&lt;Object&gt;</span> </span><br><span class="line">        <span class="comment"># 存活探针,确定何时重启容器当应用程序处于运行状态但无法做进一步操作，</span></span><br><span class="line">        <span class="comment"># liveness探针将捕获到deadlock，重启处于该状态下的容器 </span></span><br><span class="line">        <span class="comment"># Kubernetes支持3种类型的应用健康检查动作，分别为HTTP Get、Container Exec和TCP Socket  </span></span><br><span class="line"><span class="attr">      readinessProbe:</span> <span class="string">&lt;Object&gt;</span></span><br><span class="line">        <span class="comment"># 就绪探针,确定容器是否已经就绪可以接受流量,</span></span><br><span class="line">        <span class="comment"># 只有当Pod中的容器都处于就绪状态时kubelet才会认定该Pod处于就绪状态</span></span><br><span class="line">        <span class="comment"># 就绪状态, pod才会按照标签加入service  </span></span><br><span class="line">        <span class="comment">########### livenessProbe,readinessProbe 中接受属性</span></span><br><span class="line"><span class="attr">        exec:</span> <span class="string">&lt;Object&gt;</span></span><br><span class="line"><span class="attr">          command:</span> <span class="string">&lt;[]string&gt;</span>  </span><br><span class="line"><span class="attr">        httpGet:</span> <span class="string">&lt;Object&gt;</span></span><br><span class="line"><span class="attr">          host:</span> <span class="string">&lt;string&gt;</span> <span class="comment"># 连接的主机名，默认连接到pod的IP。你可能想在http header中设置”Host”而不是使用IP</span></span><br><span class="line"><span class="attr">          httpHeaders:</span> <span class="string">&lt;[]Object&gt;</span>  <span class="comment"># 自定义请求的header。HTTP运行重复的header</span></span><br><span class="line"><span class="attr">          path:</span> <span class="string">&lt;string&gt;</span> <span class="comment"># 访问的HTTP server的path</span></span><br><span class="line"><span class="attr">          port:</span> <span class="string">&lt;string&gt;</span> <span class="comment"># 访问的容器的端口名字或者端口号。端口号必须介于1和65525之间</span></span><br><span class="line"><span class="attr">          scheme:</span> <span class="string">&lt;string&gt;</span> <span class="comment"># 连接使用的schema，默认HTTP</span></span><br><span class="line"><span class="attr">        tcpSocket:</span> <span class="string">&lt;Object&gt;</span></span><br><span class="line"><span class="attr">          host:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">          port:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">        initialDelaySeconds:</span> <span class="string">&lt;integer&gt;</span> <span class="comment"># 容器启动后，等待多少秒之后进行第一次探测</span></span><br><span class="line"><span class="attr">        periodSeconds:</span> <span class="string">&lt;integer&gt;</span> <span class="comment"># 执行探测的频率。默认是10秒，最小1秒</span></span><br><span class="line"><span class="attr">        successThreshold:</span> <span class="string">&lt;integer&gt;</span> <span class="comment"># 探测失败后，最少连续探测成功多少次才被认定为成功。默认是1。对于liveness必须是1。最小值是1</span></span><br><span class="line"><span class="attr">        failureThreshold:</span> <span class="string">&lt;integer&gt;</span> <span class="comment"># 探测成功后，最少连续探测失败多少次才被认定为失败。默认是3。最小值是1</span></span><br><span class="line"><span class="attr">        timeoutSeconds:</span> <span class="string">&lt;integer&gt;</span> <span class="comment"># 探测超时时间。默认1秒，最小1秒</span></span><br><span class="line"></span><br><span class="line"><span class="attr">      resources:</span> <span class="comment"># CPU的单位是milicpu，500mcpu=0.5cpu；而内存的单位则包括E, P, T, G, M, K, Ei, Pi, Ti, Gi, Mi, Ki等</span></span><br><span class="line"><span class="attr">        requests:</span> <span class="comment"># 请求</span></span><br><span class="line"><span class="attr">          cpu:</span> <span class="string">"300m"</span></span><br><span class="line"><span class="attr">          memory:</span> <span class="string">"64Mi"</span></span><br><span class="line"><span class="attr">        limits:</span> <span class="comment"># 上限</span></span><br><span class="line"><span class="attr">          cpu:</span> <span class="string">"500m"</span></span><br><span class="line"><span class="attr">          memory:</span> <span class="string">"128Mi"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    initContainers:</span> <span class="comment"># Init Container在所有容器运行之前执行（run-to-completion），常用来初始化配置</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    nodeName:</span> <span class="string">nodename</span> <span class="string">指定node节点</span></span><br><span class="line"><span class="attr">    nodeSelector:</span> <span class="string">&lt;map[string]string&gt;</span> <span class="string">指定node的label标签</span></span><br><span class="line"><span class="attr">    restartPolicy:</span> <span class="string">&lt;string&gt;</span> <span class="string">Always,</span> <span class="string">OnFailure,</span> <span class="string">Never.</span> <span class="string">Default</span> <span class="string">to</span> <span class="string">Always.</span></span><br><span class="line">    <span class="comment"># Always：只要退出就重启</span></span><br><span class="line">    <span class="comment"># OnFailure：失败退出（exit code不等于0）时重启</span></span><br><span class="line">    <span class="comment"># Never：只要退出就不再重启</span></span><br></pre></td></tr></table></figure><h3 id="status"><a href="#status" class="headerlink" title="status"></a>status</h3><blockquote><p>当前状态 current state(只读), 由kubernetes集群维护,不需要用户自己定义</p></blockquote><h2 id="Demo-Code"><a href="#Demo-Code" class="headerlink" title="Demo Code"></a>Demo Code</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">flaskapp-pod-v1</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">flaskapp</span></span><br><span class="line"><span class="attr">    version:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">  annotations:</span> </span><br><span class="line"><span class="attr">    note:</span> <span class="string">"This is Flask app."</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  containers:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">flaskapp-container-v1</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">sakuragaara/flaskapp:v1</span></span><br><span class="line"><span class="attr">    imagePullPolicy:</span> <span class="string">Never</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">        containerPort:</span> <span class="number">5000</span></span><br><span class="line"><span class="attr">    livenessProbe:</span></span><br><span class="line"><span class="attr">      httpGet:</span></span><br><span class="line"><span class="attr">        port:</span> <span class="number">5000</span></span><br><span class="line"><span class="attr">        path:</span> <span class="string">/index</span></span><br><span class="line"><span class="attr">      initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line"><span class="attr">      periodSeconds:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">      successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">      timeoutSeconds:</span> <span class="number">8</span></span><br><span class="line"><span class="attr">    env:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">MY_NODE_NAME</span></span><br><span class="line"><span class="attr">          valueFrom:</span></span><br><span class="line"><span class="attr">            fieldRef:</span></span><br><span class="line"><span class="attr">              fieldPath:</span> <span class="string">spec.nodeName</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">MY_POD_NAME</span></span><br><span class="line"><span class="attr">          valueFrom:</span></span><br><span class="line"><span class="attr">            fieldRef:</span></span><br><span class="line"><span class="attr">              fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">MY_POD_NAMESPACE</span></span><br><span class="line"><span class="attr">          valueFrom:</span></span><br><span class="line"><span class="attr">            fieldRef:</span></span><br><span class="line"><span class="attr">              fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">MY_POD_IP</span></span><br><span class="line"><span class="attr">          valueFrom:</span></span><br><span class="line"><span class="attr">            fieldRef:</span></span><br><span class="line"><span class="attr">              fieldPath:</span> <span class="string">status.podIP</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">MY_APP_NAME</span></span><br><span class="line"><span class="attr">          value:</span> <span class="string">Flask</span> <span class="string">APP</span></span><br><span class="line"><span class="attr">    resources:</span></span><br><span class="line"><span class="attr">      requests:</span></span><br><span class="line"><span class="attr">        cpu:</span> <span class="string">"0.1"</span></span><br><span class="line"><span class="attr">        memory:</span> <span class="string">"56Mi"</span></span><br><span class="line"><span class="attr">      limits:</span></span><br><span class="line"><span class="attr">        cpu:</span> <span class="string">"1"</span></span><br><span class="line"><span class="attr">        memory:</span> <span class="string">"128Mi"</span></span><br></pre></td></tr></table></figure><p><strong><em>tcpSocket没有加host，主要是host默认为containers的IP，而flask启动是0.0.0.0，使用127.0.0.1监听会报错</em></strong></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;创建资源的方法：&lt;br&gt;定义yaml格式提供配置清单,将资源清单提交给apiServer&lt;br&gt;  apiServer可自动将其转换为json格式，而后提交给Scheduler(集群中的调度器)&lt;br&gt;  由Scheduler完成调度，调度目标节点完成创建，并启动相关服务  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Pod核心资源配置清单：&quot;&gt;&lt;a href=&quot;#Pod核心资源配置清单：&quot; class=&quot;headerlink&quot; title=&quot;Pod核心资源配置清单：&quot;&gt;&lt;/a&gt;Pod核心资源配置清单：&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;资源清单定义帮助 &lt;code&gt;kubectl explain&lt;/code&gt; &lt;code&gt;kubectl explain pods&lt;/code&gt; 等查看可嵌套字段  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;apiVersion&quot;&gt;&lt;a href=&quot;#apiVersion&quot; class=&quot;headerlink&quot; title=&quot;apiVersion&quot;&gt;&lt;/a&gt;apiVersion&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;格式为group/version，所属群组版本&lt;br&gt;支持的版本 &lt;code&gt;kubectl api-versions&lt;/code&gt; 可查看  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;kind&quot;&gt;&lt;a href=&quot;#kind&quot; class=&quot;headerlink&quot; title=&quot;kind&quot;&gt;&lt;/a&gt;kind&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;定义资源类别，Pod,Service,Deployment,Event,Secret等(注意大小写)  &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://ngames-dev.cn/categories/kubernetes/"/>
    
    
      <category term="kubernetes" scheme="https://ngames-dev.cn/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>AWS云搭建安全简单免费的VPN服务</title>
    <link href="https://ngames-dev.cn/2019/04/16/AWS%E4%BA%91%E6%90%AD%E5%BB%BA%E5%AE%89%E5%85%A8%E7%AE%80%E5%8D%95%E5%85%8D%E8%B4%B9%E7%9A%84VPN%E6%9C%8D%E5%8A%A1/"/>
    <id>https://ngames-dev.cn/2019/04/16/AWS云搭建安全简单免费的VPN服务/</id>
    <published>2019-04-15T16:00:00.000Z</published>
    <updated>2019-10-14T07:39:31.006Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Reference resources:<br><a href="https://www.webdigi.co.uk/blog/2015/how-to-setup-your-own-private-secure-free-vpn-on-the-amazon-aws-cloud-in-10-minutes/" target="_blank" rel="noopener">https://www.webdigi.co.uk/blog/2015/how-to-setup-your-own-private-secure-free-vpn-on-the-amazon-aws-cloud-in-10-minutes/</a>   </p></blockquote><h2 id="Creating-your-Private-VPN-Server"><a href="#Creating-your-Private-VPN-Server" class="headerlink" title="Creating your Private VPN Server"></a>Creating your Private VPN Server</h2><p>================================</p><p>1. Setup a free Amazon (AWS) cloud account.<br>Visit <a href="https://www.webdigi.co.ukhttp://aws.amazon.com/free/" target="_blank" rel="noopener">http://aws.amazon.com/free/ </a> and complete the signup. If you already have an Amazon AWS account then please login and follow on.</p><a id="more"></a><ol start="2"><li>Select a region for your VPN server.<br>The VPN server can be in the following locations – North Virginia, Oregon, California, Ireland, Frankfurt, Singapore, Tokyo, Sydney, São Paulo. All your traffic will flow through the region that your VPN server is hosted. The selected region will appear in bold next to your name on the top header bar.</li></ol><p><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/AWS-Region.png" alt="AWS-Region "></p><p>3. Open CloudFormation in the Amazon AWS control panel.<br>You can follow this <a href="https://www.webdigi.co.ukhttps://console.aws.amazon.com/cloudformation/home" target="_blank" rel="noopener">link </a> or click on the cloud formation link from the AWS page.</p><p><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/Cloud-Formation.png" alt="Cloud-Formation "></p><p>4. Start creating a stack with CloudFormation. Click on “Create Stack” button on top of the page.</p><p><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/CloudFormation-CreateStack.png" alt="CloudFormation-CreateStack "></p><p>5. Setting up the template for the stack<br>Enter a stack Name say MyVPN (you use what you like). Then under Template, Source, select “Specify an Amazon S3 template URL” and paste in this URL <strong><a href="https://s3.amazonaws.com/webdigi/VPN/Unified-Cloud-Formation.yaml" target="_blank" rel="noopener">https://s3.amazonaws.com/webdigi/VPN/Unified-Cloud-Formation.yaml</a></strong> and then click Next.</p><p><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/CloudFormation-SelectTemplate.png" alt="CloudFormation-SelectTemplate "></p><p>6. Setup VPN access details in the Specify Parameters page<br>Speed: Select Standard.VPN-Free and this should do for most use cases. We have also added faster server options if you ever require VPN with multiple simultaneous video streams and so on.<br>Username: VPN username for your VPN server.<br>VPNPassword: VPN password for your VPN server.<br>VPNPhrase: VPN passphrase the L2TP – IPSEC connections on your VPN server.<br><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/CloudFormation-SpecifyParameters.png" alt="CloudFormation-SpecifyParameters "></p><p>7. You will then be taken to the Options section and you can click Next without having to fill anything on this page.</p><p><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/CloudFormation-Options.png" alt="CloudFormation-Options "></p><p>Finally, you will see a review page as in the screenshot below. Just click on Create and the VPN server will be created in a few minutes.<br><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/CloudFormation-Review.png" alt="CloudFormation-Review "></p><p>8. Monitoring the VPN server creation</p><p>You will see a page which shows that the status is Create in progress as below.</p><p><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/CloudFormation-CreateInProgress.png" alt="CloudFormation-CreateInProgress "></p><p>Within about 2 minutes you should see that the stack create in progress is complete as below.</p><p><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/CloudFormation-CreateComplete.png" alt="CloudFormation-CreateComplete "></p><p>9. Obtain the private VPN server IP address</p><p>Once the stack status shows as CREATE_COMPLETE you can then click on the Outputs tab.</p><p><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/CloudFormation-OutputsTab.png" alt="CloudFormation-OutputsTab "></p><p>Now in the outputs tab you can see the server IP address as highlighted below.</p><p><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/CloudFormation-Outputs.png" alt="CloudFormation-Outputs "></p><p>Awesome, you should now have your private VPN server running in the IP address shown in the outputs tab. Please note that the IP address is unique for your server and you need it to connect your devices. <strong>Now your VPN server is ready</strong> and let us connect to it.</p><h2 id="Connecting-to-your-private-VPN-server"><a href="#Connecting-to-your-private-VPN-server" class="headerlink" title="Connecting to your private VPN server"></a>Connecting to your private VPN server</h2><p>=====================================</p><p>Each device has its own configuration to connect to a VPN server. We have added a how to for a few popular devices below. Please note that your private VPN server <strong>supports both PPTP and L2TP</strong> with IPSEC. This means that your VPN server supports most devices out there including older routers. You can connect to your VPN server with either PPTP or L2TP as supported by your device.</p><p>The parameters for your VPN connection are<br><strong>Server Address</strong>: The IP address from step 9 and this is unique for your VPN server.<br><strong>VPN Username &amp; Password</strong>: From step 6 above. Same username &amp; password for PPTP / L2TP VPN.<br><strong>VPN Passphrase</strong>: You set this up on step 6 above and only have to be used with an L2TP connection.</p><p>Examples below use PPTP but you can also find out how to setup L2TP with IPSEC on various websites.</p><p>1. Setting up VPN on an Android 5.0<br><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/Android-VPN-Step1.png" alt="Android-VPN-Step1 "><br><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/Android-VPN-Step2.png" alt="Android-VPN-Step2 "><br><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/Android-VPN-Step3.png" alt="Android-VPN-Step3 "><br><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/Android-VPN-Step4.png" alt="Android-VPN-Step4 "><br><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/Android-VPN-Step5.png" alt="Android-VPN-Step5 "></p><p>2. Setting up VPN on a MAC with the PPTP connection.<br>*<em>UPDATE Nov 2016: PPTP is not supported on macOS Sierra so follow point 3 using L2TP over IPSEC (below).<br>*</em><br>First open System Preferences, then Network and follow the screenshots below.<br><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/MAC-VPN-Step1.png" alt="MAC-VPN-Step1 "><br><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/MAC-VPN-Step2.png" alt="MAC-VPN-Step2 "><br><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/MAC-VPN-Step3.png" alt="MAC-VPN-Step3 "><br><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/MAC-VPN-Step4.png" alt="MAC-VPN-Step4 "><br><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/MAC-VPN-Step5.png" alt="MAC-VPN-Step5 "><br><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/MAC-VPN-Step6.png" alt="MAC-VPN-Step6 "><br><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/MAC-VPN-Step7.png" alt="MAC-VPN-Step7 "></p><p>3. Setting up VPN on a Mac with L2TP over IPSec<br><strong>UPDATE Nov 2016: L2TP is recommended now. Follow instructions as in PPTP after you setup up to point 8 below.</strong></p><p><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/L2TP-1.png" alt="l2tp-1 "></p><p><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/L2TP-2.png" alt="l2tp-2 "></p><p><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/L2TP-3.png" alt="l2tp-3 "></p><p>Follow other steps as outlined in the above section on PPTP to finish the setup.</p><p>4. Setting up VPN on Asus RT-AC68U router</p><p><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/ASUS-RT-AC68U-VPN.png" alt="ASUS-RT-AC68U-VPN "></p><p>5. For all other devices please search for Setting up PPTP VPN on my iphone and so on. You can also setup an L2TP IPSEC VPN which is more secure but might not be supported on all devices.</p><h2 id="Tips-Suggestions"><a href="#Tips-Suggestions" class="headerlink" title="Tips / Suggestions"></a>Tips / Suggestions</h2><p>==================</p><p>1. If you want to delete your VPN server then just open CloudFormation on AWS. Make sure you select the same region that you created your VPN server. Then just click on Delete Stack button and your private VPN server will be removed.</p><p><img src="https://www.webdigi.co.uk/blog/wp-content/uploads/2015/03/CloudFormation-DeleteStack.png" alt="CloudFormation-DeleteStack "></p><p>2. You can have multiple VPN servers all over the world. You just have to repeat the setup steps in this guide by selecting different regions. Please note that AWS free tier gives you a total of 750 hours a month free. You can also delete and create VPN servers as frequently as you want.</p><p>3. Setting up a VPN connection on your router will allow all devices on its network to use the VPN server. This could be beneficial for use with AppleTV / Chromecast and any device that does not support a VPN.</p><p>4. You can test if your VPN connection is active by just searching for “what is my ip address” on your favourite search engine. The IP address reported will be that of your private VPN server if everything is your connection is enabled. If your VPN connection is not enabled or if the VPN server settings are not complete then it will report your ISP’s IP address.</p><p>5. We love your feedback and let us know if you face any issues in the comments section below or on our <a href="https://www.webdigi.co.ukhttps://github.com/webdigi/AWS-VPN-Server-Setup" target="_blank" rel="noopener">github page for setting up your private VPN on AWS </a>.</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Reference resources:&lt;br&gt;&lt;a href=&quot;https://www.webdigi.co.uk/blog/2015/how-to-setup-your-own-private-secure-free-vpn-on-the-amazon-aws-cloud-in-10-minutes/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.webdigi.co.uk/blog/2015/how-to-setup-your-own-private-secure-free-vpn-on-the-amazon-aws-cloud-in-10-minutes/&lt;/a&gt;   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Creating-your-Private-VPN-Server&quot;&gt;&lt;a href=&quot;#Creating-your-Private-VPN-Server&quot; class=&quot;headerlink&quot; title=&quot;Creating your Private VPN Server&quot;&gt;&lt;/a&gt;Creating your Private VPN Server&lt;/h2&gt;&lt;p&gt;================================&lt;/p&gt;
&lt;p&gt;1. Setup a free Amazon (AWS) cloud account.&lt;br&gt;Visit &lt;a href=&quot;https://www.webdigi.co.ukhttp://aws.amazon.com/free/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://aws.amazon.com/free/ &lt;/a&gt; and complete the signup. If you already have an Amazon AWS account then please login and follow on.&lt;/p&gt;
    
    </summary>
    
    
      <category term="VPN" scheme="https://ngames-dev.cn/categories/VPN/"/>
    
    
      <category term="vpn" scheme="https://ngames-dev.cn/tags/vpn/"/>
    
  </entry>
  
  <entry>
    <title>Nginx访问控制(持续更新)</title>
    <link href="https://ngames-dev.cn/2019/04/10/Nginx%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6(%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0)/"/>
    <id>https://ngames-dev.cn/2019/04/10/Nginx访问控制(持续更新)/</id>
    <published>2019-04-09T16:00:00.000Z</published>
    <updated>2019-10-14T07:39:31.006Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>NGINX实现IF语句里的AND，OR多重判断<br>正常清空下使用allow,deny 可以完成，但是对于同时过滤ip和页面，就无法按照正常规则去实现</p></blockquote><h3 id="Nginx的rewrite规则参考"><a href="#Nginx的rewrite规则参考" class="headerlink" title="Nginx的rewrite规则参考"></a>Nginx的rewrite规则参考</h3><ul><li>~ 为区分大小写匹配</li><li>~* 为不区分大小写匹配</li><li>!<del>和!</del>*分别为区分大小写不匹配及不区分大小写不匹</li></ul><a id="more"></a><ul><li>-f和!-f用来判断是否存在文件</li><li>-d和!-d用来判断是否存在目录</li><li>-e和!-e用来判断是否存在文件或目录</li><li>-x和!-x用来判断文件是否可执行</li></ul><ul><li>last 相当于Apache里的[L]标记，表示完成rewrite，呵呵这应该是最常用的</li><li>break 终止匹配, 不再匹配后面的规则</li><li>redirect 返回302临时重定向 地址栏会显示跳转后的地址</li><li>permanent 返回301永久重定向 地址栏会显示跳转后的地址</li></ul><table><thead><tr><th>Nginx参数</th><th>解释</th></tr></thead><tbody><tr><td>arg_PARAMETER</td><td>这个变量包含GET请求中，如果有变量PARAMETER时的值。</td></tr><tr><td>args</td><td>这个变量等于请求行中(GET请求)的参数，如：foo=123&amp;bar=blahblah;</td></tr><tr><td>binary_remote_addr</td><td>二进制的客户地址。</td></tr><tr><td>body_bytes_sent</td><td>响应时送出的body字节数数量。即使连接中断，这个数据也是精确的。</td></tr><tr><td>content_length</td><td>请求头中的Content-length字段。</td></tr><tr><td>content_type</td><td>请求头中的Content-Type字段。</td></tr><tr><td>cookie_COOKIE</td><td>cookie COOKIE变量的值</td></tr><tr><td>document_root</td><td>当前请求在root指令中指定的值。</td></tr><tr><td>document_uri</td><td>与uri相同。</td></tr><tr><td>host</td><td>请求主机头字段，否则为服务器名称。</td></tr><tr><td>hostname</td><td>Set to themachine’s hostname as returned by gethostname</td></tr><tr><td>http_HEADER</td><td></td></tr><tr><td>is_args</td><td>如果有args参数，这个变量等于”?”，否则等于””，空值。</td></tr><tr><td>http_user_agent</td><td>客户端agent信息</td></tr><tr><td>http_cookie</td><td>客户端cookie信息</td></tr><tr><td>limit_rate</td><td>这个变量可以限制连接速率。</td></tr><tr><td>query_string</td><td>与args相同。</td></tr><tr><td>request_body_file</td><td>客户端请求主体信息的临时文件名。</td></tr><tr><td>request_method</td><td>客户端请求的动作，通常为GET或POST。</td></tr><tr><td>remote_addr</td><td>客户端的IP地址。</td></tr><tr><td>remote_port</td><td>客户端的端口。</td></tr><tr><td>remote_user</td><td>已经经过Auth Basic Module验证的用户名。</td></tr><tr><td>request_completion</td><td>如果请求结束，设置为OK. 当请求未结束或如果该请求不是请求链串的最后一个时，为空(Empty)。</td></tr><tr><td>request_method</td><td>GET或POST</td></tr><tr><td>request_filename</td><td>当前请求的文件路径，由root或alias指令与URI请求生成。</td></tr><tr><td>request_uri</td><td>包含请求参数的原始URI，不包含主机名，如：”/foo/bar.php?arg=baz”。不能修改。</td></tr><tr><td>scheme</td><td>HTTP方法（如http，https）。</td></tr><tr><td>server_protocol</td><td>请求使用的协议，通常是HTTP/1.0或HTTP/1.1。</td></tr><tr><td>server_addr</td><td>服务器地址，在完成一次系统调用后可以确定这个值。</td></tr><tr><td>server_name</td><td>服务器名称。</td></tr><tr><td>server_port</td><td>请求到达服务器的端口号。</td></tr></tbody></table><h3 id="NGINX实现IF语句里的AND，OR多重判断"><a href="#NGINX实现IF语句里的AND，OR多重判断" class="headerlink" title="NGINX实现IF语句里的AND，OR多重判断"></a>NGINX实现IF语句里的AND，OR多重判断</h3><p>nginx的配置中不支持if条件的逻辑与／逻辑或运算 ，并且不支持if的嵌套语法，我们可以用变量的方式来实现<br>具体方法为AND 就用变量叠加，OR就用0或1切换</p><p>如定义结尾以swagger-ui.html和api-docs的页面，只能由202.101.172.35和8.8.8.8访问：</p><ul><li>伪代码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if ($remote_addr !~ &quot;(202.101.172.35|8.8.8.8)&quot; &amp;&amp; $request_uri ~* (swagger-ui.html|api-docs)$) &#123;</span><br><span class="line">  return 403;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>上述伪代码Nginx实现</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">set $flag 0;</span><br><span class="line">    if ($remote_addr !~ &quot;122.224.128.14&quot;) &#123;</span><br><span class="line">set $flag &quot;$&#123;flag&#125;1&quot;;</span><br><span class="line">&#125;</span><br><span class="line">if ($request_uri ~* (swagger-ui.html|api-docs)$) &#123;</span><br><span class="line">set $flag &quot;$&#123;flag&#125;2&quot;;</span><br><span class="line">&#125;</span><br><span class="line">if ($flag = &quot;012&quot;) &#123;</span><br><span class="line">return 403;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;NGINX实现IF语句里的AND，OR多重判断&lt;br&gt;正常清空下使用allow,deny 可以完成，但是对于同时过滤ip和页面，就无法按照正常规则去实现&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Nginx的rewrite规则参考&quot;&gt;&lt;a href=&quot;#Nginx的rewrite规则参考&quot; class=&quot;headerlink&quot; title=&quot;Nginx的rewrite规则参考&quot;&gt;&lt;/a&gt;Nginx的rewrite规则参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;~ 为区分大小写匹配&lt;/li&gt;
&lt;li&gt;~* 为不区分大小写匹配&lt;/li&gt;
&lt;li&gt;!&lt;del&gt;和!&lt;/del&gt;*分别为区分大小写不匹配及不区分大小写不匹&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Nginx" scheme="https://ngames-dev.cn/categories/Nginx/"/>
    
    
      <category term="nginx" scheme="https://ngames-dev.cn/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>阿里云ECS安全基线检查</title>
    <link href="https://ngames-dev.cn/2019/04/09/%E9%98%BF%E9%87%8C%E4%BA%91ECS%E5%AE%89%E5%85%A8%E5%9F%BA%E7%BA%BF%E6%A3%80%E6%9F%A5/"/>
    <id>https://ngames-dev.cn/2019/04/09/阿里云ECS安全基线检查/</id>
    <published>2019-04-08T16:00:00.000Z</published>
    <updated>2019-10-14T07:39:31.005Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>阿里云ECS安全基线检查<br>Centos6, Centos7</p></blockquote><h3 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h3><p>1, 设置用户权限配置文件的权限<br>描述<br>设置用户权限配置文件的权限<br>加固建议<br>执行以下5条命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chown root:root /etc/passwd /etc/shadow /etc/group /etc/gshadow</span><br><span class="line">chmod 0644 /etc/group </span><br><span class="line">chmod 0644 /etc/passwd </span><br><span class="line">chmod 0400 /etc/shadow </span><br><span class="line">chmod 0400 /etc/gshadow</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="etc-ssh-sshd-config"><a href="#etc-ssh-sshd-config" class="headerlink" title="/etc/ssh/sshd_config"></a>/etc/ssh/sshd_config</h3><p>2，确保SSH MaxAuthTries设置为3到6之间<br>描述<br>设置较低的Max AuthTrimes参数将降低SSH服务器被暴力攻击成功的风险<br>加固建议<br>在 <code>/etc/ssh/sshd_config</code> 中取消MaxAuthTries注释符号#，设置最大密码尝试失败次数3-6，建议为4： <code>MaxAuthTries 4</code></p><p>3, 禁止SSH空密码用户登录<br>描述<br>禁止SSH空密码用户登录<br>加固建议<br>在 <code>/etc/ssh/sshd_config</code> 中取消<code>PermitEmptyPasswords no</code>注释符号#</p><p>4, 确保SSH LogLevel设置为INFO<br>描述<br>确保SSH LogLevel设置为INFO,记录登录和注销活动<br>加固建议<br>编辑 <code>/etc/ssh/sshd_config</code> 文件以按如下方式设置参数(取消注释): <code>LogLevel INFO</code></p><p>5, SSHD强制使用V2安全协议<br>描述<br>SSHD强制使用V2安全协议<br>加固建议<br>编辑 <code>/etc/ssh/sshd_config</code> 文件以按如下方式设置参数： <code>Protocol 2</code></p><p>6, 设置SSH空闲超时退出时间<br>描述<br>设置SSH空闲超时退出时间,可降低未授权用户访问其他用户ssh会话的风险<br>加固建议<br>编辑<code>/etc/ssh/sshd_config</code>，将ClientAliveInterval 设置为300到900，即5-15分钟，将ClientAliveCountMax设置为0。 <code>ClientAliveInterval 900 ClientAliveCountMax 0</code></p><h3 id="etc-login-defs"><a href="#etc-login-defs" class="headerlink" title="/etc/login.defs"></a>/etc/login.defs</h3><p>7, 设置密码失效时间<br>描述<br>设置密码失效时间，强制定期修改密码，减少密码被泄漏和猜测风险，使用非密码登陆方式(如密钥对)请忽略此项<br>加固建议<br>使用非密码登陆方式如密钥对，请忽略此项。在 <code>/etc/login.defs</code> 中将 PASS_MAX_DAYS 参数设置为 60-180之间，如 <code>PASS_MAX_DAYS 90</code> 。需同时执行命令设置root密码失效时间： <code>chage --maxdays 90 root</code></p><p>8, 设置密码修改最小间隔时间<br>描述<br>设置密码修改最小间隔时间，限制密码更改过于频繁<br>加固建议<br>在 <code>/etc/login.defs</code> 中将 PASS_MIN_DAYS 参数设置为7-14之间,建议为7： <code>PASS_MIN_DAYS 7</code> 需同时执行命令为root用户设置： <code>chage --mindays 7 root</code></p><p>9, 确保密码到期警告天数为7或更多<br>描述<br>确保密码到期警告天数为7或更多<br>加固建议<br>在 <code>/etc/login.defs</code> 中将 PASS_WARN_AGE 参数设置为7-14之间，建议为7： <code>PASS_WARN_AGE 7</code> 。同时执行命令使root用户设置生效： <code>chage --warndays 7 root</code></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;阿里云ECS安全基线检查&lt;br&gt;Centos6, Centos7&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;文件权限&quot;&gt;&lt;a href=&quot;#文件权限&quot; class=&quot;headerlink&quot; title=&quot;文件权限&quot;&gt;&lt;/a&gt;文件权限&lt;/h3&gt;&lt;p&gt;1, 设置用户权限配置文件的权限&lt;br&gt;描述&lt;br&gt;设置用户权限配置文件的权限&lt;br&gt;加固建议&lt;br&gt;执行以下5条命令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;chown root:root /etc/passwd /etc/shadow /etc/group /etc/gshadow&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod 0644 /etc/group &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod 0644 /etc/passwd &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod 0400 /etc/shadow &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod 0400 /etc/gshadow&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="安全" scheme="https://ngames-dev.cn/categories/%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="ECS安全" scheme="https://ngames-dev.cn/tags/ECS%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>mysqlbinlog实时同步至elasticsearch</title>
    <link href="https://ngames-dev.cn/2019/04/02/mysqlbinlog%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5%E8%87%B3elasticsearch/"/>
    <id>https://ngames-dev.cn/2019/04/02/mysqlbinlog实时同步至elasticsearch/</id>
    <published>2019-04-01T16:00:00.000Z</published>
    <updated>2019-10-14T07:39:31.005Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>canal从mysql中获取binlog日志信息，输出至kafka，logstash从kafka中获取日志信息，写入elasticsearch<br>不过看起来好像毫无意义,所以做的比较简易</p></blockquote><a id="more"></a><h2 id="demo环境介绍"><a href="#demo环境介绍" class="headerlink" title="demo环境介绍"></a>demo环境介绍</h2><ul><li>MYSQL: 使用docker做的一个5.7的环境，用于做自己网站的一个数据库</li><li>Canal: 是阿里巴巴旗下的一款开源项目，纯Java开发。基于数据库增量日志解析，提供增量数据订阅&amp;消费，目前主要支持了MySQL（也支持mariaDB）</li><li>kafka: 使用docker-compose创建的一个集群[<a href="https://sakuragaara.github.io/kafka/2019/03/07/kafka/" target="_blank" rel="noopener">docker-compose.yml</a>]</li><li>elasticsearch+kibana: 使用docker-compose创建的单节点demo</li><li>logstash: 用于从kafka写入elasticearch</li></ul><h2 id="Canal简单配置"><a href="#Canal简单配置" class="headerlink" title="Canal简单配置"></a>Canal简单配置</h2><p>1.修改以下文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim conf/canal.properties</span><br><span class="line">canal.serverMode = kafka # 配置输出至kafka</span><br><span class="line">canal.mq.servers = 127.0.0.1:9091 # kafka server</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim conf/example/instance.properties</span><br><span class="line">canal.instance.master.address=127.0.0.1:3000 # mysql数据库地址</span><br><span class="line"></span><br><span class="line">canal.instance.dbUsername=canal</span><br><span class="line">canal.instance.dbPassword=canal</span><br><span class="line">canal.instance.connectionCharset = UTF-8</span><br><span class="line">canal.instance.defaultDatabaseName = book # 可注释掉，则为所有数据库</span><br><span class="line"></span><br><span class="line">canal.mq.topic=book # 定义kafka订阅主题</span><br></pre></td></tr></table></figure><p>2.启动canal</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/startup.sh</span><br></pre></td></tr></table></figure><p>3.以上则完成Canal配置，检查kafka是否可接受到canal传来的日志内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> kafka <span class="keyword">import</span> KafkaConsumer</span><br><span class="line"></span><br><span class="line">consumer = KafkaConsumer(<span class="string">'book'</span>,bootstrap_servers=<span class="string">'127.0.0.1:9092'</span>, auto_offset_reset=<span class="string">'earliest'</span>)</span><br><span class="line"><span class="keyword">for</span> msg <span class="keyword">in</span> consumer:</span><br><span class="line">    print(<span class="string">'topic: %s \n partition: %s \n offset: %s \n headers: %s \n timestamp: %s \n timestamp_type: %s \n key: %s \n value: %s '</span> % (</span><br><span class="line">          msg.topic,</span><br><span class="line">          msg.partition,</span><br><span class="line">          msg.offset,</span><br><span class="line">          msg.headers,</span><br><span class="line">          msg.timestamp,</span><br><span class="line">          msg.timestamp_type,</span><br><span class="line">          msg.key,</span><br><span class="line">          msg.value.decode(<span class="string">'utf8'</span>))</span><br><span class="line">          )</span><br></pre></td></tr></table></figure><p>向数据库中插入数据，运行脚步是否能得到输出结果</p><p>![mysqltest](/images/img/2019-04-02 2.16.59.png)<br>![kafka-consumer](/images/img/2019-04-02 2.39.41.png)  </p><p>kafka既然能接受到canal传来的日志，接下来就可以配置logstash从Kafka接受消息写入es</p><h2 id="配置logstash"><a href="#配置logstash" class="headerlink" title="配置logstash"></a>配置logstash</h2><p>1.准备logstash配置文件kafka-logstash-es.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    kafka &#123;</span><br><span class="line">        bootstrap_servers =&gt; &quot;172.16.149.242:9092&quot;  # 5.x版本，写法bootstrap_servers</span><br><span class="line">        group_id =&gt; &quot;elastic_consumer&quot;</span><br><span class="line">        topics =&gt; [&quot;book&quot;]</span><br><span class="line">        consumer_threads =&gt; 3</span><br><span class="line">        decorate_events =&gt; true</span><br><span class="line">        codec =&gt; &quot;json&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">        hosts=&gt; [&quot;172.16.149.242:9200&quot;]</span><br><span class="line">        index =&gt; &quot;logstash-book-%&#123;[table]&#125;-%&#123;+YYYY-MM-dd&#125;&quot;  # 按照不同的表和日期做索引</span><br><span class="line">        codec =&gt; &quot;json&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>logstash-kafka-plugin 配置文件<a href="https://www.elastic.co/guide/en/logstash/current/plugins-inputs-kafka.html" target="_blank" rel="noopener">参考</a><br>配置与logstash版本相关</p><p>2.启动logstash,并查看es是否有索引</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/logstash -f kafka-logstash-es.conf</span><br></pre></td></tr></table></figure><p>3.验证es是否有索引和相关数据<br>![check_es](/images/img/2019-04-02 3.06.28.png)</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;canal从mysql中获取binlog日志信息，输出至kafka，logstash从kafka中获取日志信息，写入elasticsearch&lt;br&gt;不过看起来好像毫无意义,所以做的比较简易&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="elasticsearch" scheme="https://ngames-dev.cn/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="https://ngames-dev.cn/tags/elasticsearch/"/>
    
      <category term="canal" scheme="https://ngames-dev.cn/tags/canal/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes应用[一]</title>
    <link href="https://ngames-dev.cn/2019/03/28/kubernetes%E5%BA%94%E7%94%A8%5B%E4%B8%80%5D/"/>
    <id>https://ngames-dev.cn/2019/03/28/kubernetes应用[一]/</id>
    <published>2019-03-27T16:00:00.000Z</published>
    <updated>2019-10-14T07:39:31.004Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>kubectl相关命令操作</p></blockquote><ul><li>查看节点详细信息<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master-01 ~]# kubectl describe node node-01</span><br></pre></td></tr></table></figure></li></ul><h2 id="pod"><a href="#pod" class="headerlink" title="pod"></a>pod</h2><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><ul><li>创建pod <code>kubectl run</code>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@master-01 ~]# kubectl run nginx-deploy --image=nginx:latest --port=80 --replicas=1 --dry-run=true  </span><br><span class="line">nginx-deploy 创建pod名称  </span><br><span class="line">--image 指定镜像  </span><br><span class="line">--port 指定端口  </span><br><span class="line">--reolices 指定pod内创建几个容器  </span><br><span class="line">--dry-run 干跑模式</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><h3 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h3><ul><li><p>查看pod <code>kubectl get pods</code>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master-01 ~]# kubectl get pods  </span><br><span class="line">NAME                           READY   STATUS    RESTARTS   AGE  </span><br><span class="line">nginx-deploy-86bf78c77-ftscg   1/1     Running   0          4h17m</span><br></pre></td></tr></table></figure></li><li><p>查看pod详细信息 <code>kubectl describe</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master-01 ~]# kubectl describe pod nginx-deploy-86bf78c77-ftscg</span><br></pre></td></tr></table></figure></li></ul><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><ul><li>删除pod <code>kubectl delete</code>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master-01 ~]# kubectl delete pod nginx-deploy-86bf78c77-ftscg  </span><br><span class="line">pod &quot;nginx-deploy-86bf78c77-ftscg&quot; deleted</span><br></pre></td></tr></table></figure></li></ul><p>删除之后发现会自动创建一个pod<br>[root@master-01 ~]# kubectl get pod  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NAME                           READY   STATUS    RESTARTS   AGE  </span><br><span class="line">nginx-deploy-86bf78c77-ffj8d   1/1     Running   0          35s</span><br></pre></td></tr></table></figure><h3 id="彻底删除-kubectl-delete-deployment"><a href="#彻底删除-kubectl-delete-deployment" class="headerlink" title="彻底删除 kubectl delete deployment"></a>彻底删除 <code>kubectl delete deployment</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master-01 ~]# kubectl delete deployment nginx-deploy</span><br><span class="line">deployment.extensions &quot;nginx-deploy&quot; deleted</span><br></pre></td></tr></table></figure><h2 id="service"><a href="#service" class="headerlink" title="service"></a>service</h2><h3 id="创建-1"><a href="#创建-1" class="headerlink" title="创建"></a>创建</h3><ul><li>创建服务 <code>kubectl expose</code>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@master-01 ~]# kubectl expose deployment nginx-deploy --name=nginx --port=80 --target-port=80 --protocol=TCP  </span><br><span class="line">nginx-deploy 为上面创建的pod名  </span><br><span class="line">--name 指定服务名  </span><br><span class="line">--port 指定pod端口  </span><br><span class="line">--target-port 指定service端口映射pod端口  </span><br><span class="line">--protocol 端口类型</span><br></pre></td></tr></table></figure></li></ul><h3 id="查看-1"><a href="#查看-1" class="headerlink" title="查看"></a>查看</h3><ul><li><p>查看服务 <code>kubectl get service</code>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master-01 ~]# kubectl get service  </span><br><span class="line">NAME         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE  </span><br><span class="line">kubernetes   ClusterIP   10.96.0.1       &lt;none&gt;        443/TCP   21h  </span><br><span class="line">nginx        ClusterIP   10.104.62.105   &lt;none&gt;        80/TCP    2m35s  </span><br><span class="line">这时，在pod内可以使用地址&lt;http://10.104.62.105&gt;或者服务名&lt;http://nginx&gt;访问nginx,但是节点依旧无法访问</span><br></pre></td></tr></table></figure></li><li><p>查看服务具体信息 <code>kubectl describe service</code>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@master-01 ~]# kubectl describe service nginx  </span><br><span class="line">Name:              nginx  </span><br><span class="line">Namespace:         default  </span><br><span class="line">Labels:            run=nginx-deploy  </span><br><span class="line">Annotations:       &lt;none&gt;  </span><br><span class="line">Selector:          run=nginx-deploy  </span><br><span class="line">Type:              ClusterIP  </span><br><span class="line">IP:                10.104.62.105  </span><br><span class="line">Port:              &lt;unset&gt;  80/TCP  </span><br><span class="line">TargetPort:        80/TCP  </span><br><span class="line">Endpoints:         10.244.1.3:80  </span><br><span class="line">Session Affinity:  None  </span><br><span class="line">Events:            &lt;none&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="update"><a href="#update" class="headerlink" title="update"></a>update</h2><h3 id="更改pod规模"><a href="#更改pod规模" class="headerlink" title="更改pod规模"></a>更改pod规模</h3><ul><li>动态更新pod规模，增加/减少pod <code>kubectl scale</code> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@master-01 ~]# kubectl scale --replicas=5 deployment nginx-deploy  </span><br><span class="line">[root@master-01 ~]# kubectl get pod -o wide  </span><br><span class="line">NAME                           READY   STATUS    RESTARTS   AGE   IP           NODE      NOMINATED NODE  </span><br><span class="line">client                         1/1     Running   0          26m   10.244.2.3   node-02   &lt;none&gt;  </span><br><span class="line">nginx-deploy-86bf78c77-8mp2p   1/1     Running   0          57s   10.244.2.5   node-02   &lt;none&gt;  </span><br><span class="line">nginx-deploy-86bf78c77-ffj8d   1/1     Running   0          51m   10.244.1.3   node-01   &lt;none&gt;  </span><br><span class="line">nginx-deploy-86bf78c77-g7s7j   1/1     Running   0          57s   10.244.2.6   node-02   &lt;none&gt;  </span><br><span class="line">nginx-deploy-86bf78c77-tsxmp   1/1     Running   0          57s   10.244.1.4   node-01   &lt;none&gt;  </span><br><span class="line">nginx-deploy-86bf78c77-vddwx   1/1     Running   0          57s   10.244.2.4   node-02   &lt;none&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="更改Pod镜像"><a href="#更改Pod镜像" class="headerlink" title="更改Pod镜像"></a>更改Pod镜像</h3><ul><li><p>滚动更新image <code>kubectl set image</code>  </p></li><li><p>首先查看一下当前的  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@master-01 ~]# kubectl describe pod nginx-deploy|grep -E &quot;^Name:|Image:&quot;  </span><br><span class="line">Name:               nginx-deploy-86bf78c77-5h4rh  </span><br><span class="line">    Image:          nginx:1.14-alpine  </span><br><span class="line">Name:               nginx-deploy-86bf78c77-ffj8d  </span><br><span class="line">    Image:          nginx:1.14-alpine  </span><br><span class="line">Name:               nginx-deploy-86bf78c77-qn7zh  </span><br><span class="line">    Image:          nginx:1.14-alpine  </span><br><span class="line">Name:               nginx-deploy-86bf78c77-tkmtj  </span><br><span class="line">    Image:          nginx:1.14-alpine  </span><br><span class="line">Name:               nginx-deploy-86bf78c77-vddwx  </span><br><span class="line">    Image:          nginx:1.14-alpine</span><br></pre></td></tr></table></figure></li><li><p>使用 <code>kubectl set image</code> 更新镜像  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master-01 ~]# kubectl set image deployment nginx-deploy nginx-deploy=nginx:1.15.10-perl  </span><br><span class="line">deployment.extensions/nginx-deploy image updated</span><br></pre></td></tr></table></figure></li><li><p>更新的同时可使用<code>kubectl rollout status</code>查看镜像升级状态  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@master-01 ~]# kubectl rollout status deployment nginx-deploy  </span><br><span class="line">Waiting for deployment &quot;nginx-deploy&quot; rollout to finish: 3 out of 5 new replicas have been updated...  </span><br><span class="line">Waiting for deployment &quot;nginx-deploy&quot; rollout to finish: 3 out of 5 new replicas have been updated...  </span><br><span class="line">Waiting for deployment &quot;nginx-deploy&quot; rollout to finish: 3 out of 5 new replicas have been updated...  </span><br><span class="line">Waiting for deployment &quot;nginx-deploy&quot; rollout to finish: 3 out of 5 new replicas have been updated...  </span><br><span class="line">Waiting for deployment &quot;nginx-deploy&quot; rollout to finish: 3 out of 5 new replicas have been updated...  </span><br><span class="line">Waiting for deployment &quot;nginx-deploy&quot; rollout to finish: 4 out of 5 new replicas have been updated...  </span><br><span class="line">Waiting for deployment &quot;nginx-deploy&quot; rollout to finish: 4 out of 5 new replicas have been updated...  </span><br><span class="line">Waiting for deployment &quot;nginx-deploy&quot; rollout to finish: 4 out of 5 new replicas have been updated...  </span><br><span class="line">Waiting for deployment &quot;nginx-deploy&quot; rollout to finish: 4 out of 5 new replicas have been updated...  </span><br><span class="line">Waiting for deployment &quot;nginx-deploy&quot; rollout to finish: 4 out of 5 new replicas have been updated...  </span><br><span class="line">Waiting for deployment &quot;nginx-deploy&quot; rollout to finish: 2 old replicas are pending termination...  </span><br><span class="line">Waiting for deployment &quot;nginx-deploy&quot; rollout to finish: 2 old replicas are pending termination...  </span><br><span class="line">Waiting for deployment &quot;nginx-deploy&quot; rollout to finish: 2 old replicas are pending termination...  </span><br><span class="line">Waiting for deployment &quot;nginx-deploy&quot; rollout to finish: 1 old replicas are pending termination...  </span><br><span class="line">Waiting for deployment &quot;nginx-deploy&quot; rollout to finish: 1 old replicas are pending termination...  </span><br><span class="line">Waiting for deployment &quot;nginx-deploy&quot; rollout to finish: 1 old replicas are pending termination...  </span><br><span class="line">Waiting for deployment &quot;nginx-deploy&quot; rollout to finish: 4 of 5 updated replicas are available...  </span><br><span class="line">deployment &quot;nginx-deploy&quot; successfully rolled out  </span><br><span class="line">再次查看Pod信息，镜像已变动  </span><br><span class="line">[root@master-01 ~]# kubectl describe pod nginx-deploy|grep -E &quot;^Name:|Image:&quot;           </span><br><span class="line">Name:               nginx-deploy-7596d8b647-58xcs  </span><br><span class="line">    Image:          nginx:1.15.10-perl  </span><br><span class="line">Name:               nginx-deploy-7596d8b647-dlf76  </span><br><span class="line">    Image:          nginx:1.15.10-perl  </span><br><span class="line">Name:               nginx-deploy-7596d8b647-shkcn  </span><br><span class="line">    Image:          nginx:1.15.10-perl  </span><br><span class="line">Name:               nginx-deploy-7596d8b647-tttkd  </span><br><span class="line">    Image:          nginx:1.15.10-perl  </span><br><span class="line">Name:               nginx-deploy-7596d8b647-znf24  </span><br><span class="line">    Image:          nginx:1.15.10-perl</span><br></pre></td></tr></table></figure></li></ul><h3 id="回滚镜像"><a href="#回滚镜像" class="headerlink" title="回滚镜像"></a>回滚镜像</h3><ul><li>回滚 <code>kubectl rollout undo</code>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@master-01 ~]# kubectl rollout undo deployment nginx-deploy  </span><br><span class="line">deployment.extensions/nginx-deploy  </span><br><span class="line">[root@master-01 ~]# kubectl describe pod nginx-deploy|grep -E &quot;^Name:|Image:&quot;  </span><br><span class="line">Name:                      nginx-deploy-7596d8b647-dlf76  </span><br><span class="line">    Image:          nginx:1.15.10-perl  </span><br><span class="line">Name:                      nginx-deploy-7596d8b647-tttkd  </span><br><span class="line">    Image:          nginx:1.15.10-perl  </span><br><span class="line">Name:                      nginx-deploy-7596d8b647-znf24  </span><br><span class="line">    Image:          nginx:1.15.10-perl  </span><br><span class="line">Name:               nginx-deploy-86bf78c77-55bdr  </span><br><span class="line">    Image:          nginx:1.14-alpine  </span><br><span class="line">Name:               nginx-deploy-86bf78c77-9q54l  </span><br><span class="line">    Image:          nginx:1.14-alpine  </span><br><span class="line">Name:               nginx-deploy-86bf78c77-h6qlf  </span><br><span class="line">    Image:          nginx:1.14-alpine  </span><br><span class="line">Name:               nginx-deploy-86bf78c77-h9fgd  </span><br><span class="line">    Image:          nginx:1.14-alpine  </span><br><span class="line">Name:               nginx-deploy-86bf78c77-vfdzs  </span><br><span class="line">    Image:          nginx:1.14-alpine  </span><br><span class="line">[root@master-01 ~]# kubectl describe pod nginx-deploy|grep -E &quot;^Name:|Image:&quot;  </span><br><span class="line">Name:               nginx-deploy-86bf78c77-55bdr  </span><br><span class="line">    Image:          nginx:1.14-alpine  </span><br><span class="line">Name:               nginx-deploy-86bf78c77-9q54l  </span><br><span class="line">    Image:          nginx:1.14-alpine  </span><br><span class="line">Name:               nginx-deploy-86bf78c77-h6qlf  </span><br><span class="line">    Image:          nginx:1.14-alpine  </span><br><span class="line">Name:               nginx-deploy-86bf78c77-h9fgd  </span><br><span class="line">    Image:          nginx:1.14-alpine  </span><br><span class="line">Name:               nginx-deploy-86bf78c77-vfdzs  </span><br><span class="line">    Image:          nginx:1.14-alpine</span><br></pre></td></tr></table></figure></li></ul><h2 id="设置外部访问"><a href="#设置外部访问" class="headerlink" title="设置外部访问"></a>设置外部访问</h2><ul><li><p>首先查看服务  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master-01 ~]# kubectl get svc nginx  </span><br><span class="line">NAME    TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE  </span><br><span class="line">nginx   ClusterIP   10.104.62.105   &lt;none&gt;        80/TCP    5d23h</span><br></pre></td></tr></table></figure></li><li><p>更改服务clusterIP类型<code>kubectl edit svc</code>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@master-01 ~]# kubectl edit svc nginx  </span><br><span class="line">apiVersion: v1  </span><br><span class="line">kind: Service  </span><br><span class="line">metadata:  </span><br><span class="line">  creationTimestamp: 2019-03-22T07:50:32Z  </span><br><span class="line">  labels:  </span><br><span class="line">    run: nginx-deploy  </span><br><span class="line">  name: nginx  </span><br><span class="line">  namespace: default  </span><br><span class="line">  resourceVersion: &quot;98592&quot;  </span><br><span class="line">  selfLink: /api/v1/namespaces/default/services/nginx  </span><br><span class="line">  uid: 2b765b06-4c77-11e9-a182-000c29bb0a84  </span><br><span class="line">spec:  </span><br><span class="line">  clusterIP: 10.104.62.105  </span><br><span class="line">  ports:  </span><br><span class="line">    port: 80  </span><br><span class="line">    protocol: TCP  </span><br><span class="line">    targetPort: 80  </span><br><span class="line">  selector:  </span><br><span class="line">    run: nginx-deploy  </span><br><span class="line">  sessionAffinity: None  </span><br><span class="line">  type: NodePorts  </span><br><span class="line">status:  </span><br><span class="line">  loadBalancer: &#123;&#125;</span><br></pre></td></tr></table></figure></li><li><p>再次查看服务  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master-01 ~]# kubectl get svc nginx  </span><br><span class="line">NAME    TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE  </span><br><span class="line">nginx   NodePort   10.104.62.105   &lt;none&gt;        80:32660/TCP   5d23h</span><br></pre></td></tr></table></figure></li></ul><p>此时可以使用集群内任意Node节点通过32660端口访问  </p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;kubectl相关命令操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;查看节点详细信息&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@master-01 ~]# kubectl describe node node-01&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;pod&quot;&gt;&lt;a href=&quot;#pod&quot; class=&quot;headerlink&quot; title=&quot;pod&quot;&gt;&lt;/a&gt;pod&lt;/h2&gt;&lt;h3 id=&quot;创建&quot;&gt;&lt;a href=&quot;#创建&quot; class=&quot;headerlink&quot; title=&quot;创建&quot;&gt;&lt;/a&gt;创建&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;创建pod &lt;code&gt;kubectl run&lt;/code&gt;   &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@master-01 ~]# kubectl run nginx-deploy --image=nginx:latest --port=80 --replicas=1 --dry-run=true  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nginx-deploy 创建pod名称  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--image 指定镜像  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--port 指定端口  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--reolices 指定pod内创建几个容器  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--dry-run 干跑模式&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://ngames-dev.cn/categories/kubernetes/"/>
    
    
      <category term="kubernetes" scheme="https://ngames-dev.cn/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>python之elasticsearch初试</title>
    <link href="https://ngames-dev.cn/2019/03/27/python%E4%B9%8Belasticsearch%E5%88%9D%E8%AF%95/"/>
    <id>https://ngames-dev.cn/2019/03/27/python之elasticsearch初试/</id>
    <published>2019-03-26T16:00:00.000Z</published>
    <updated>2019-09-06T09:23:30.120Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>python elasticsearch库应用<br>Doc: <a href="https://pypi.org/project/elasticsearch/" target="_blank" rel="noopener">https://pypi.org/project/elasticsearch/</a></p></blockquote><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># --coding: utf-8 --</span></span><br><span class="line"><span class="keyword">from</span> elasticsearch <span class="keyword">import</span> Elasticsearch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_es_config</span><span class="params">()</span>:</span></span><br><span class="line">    es = Elasticsearch(</span><br><span class="line">        [<span class="string">'http://xxxxxxxxxxx.public.elasticsearch.aliyuncs.com'</span>],</span><br><span class="line">        http_auth=(<span class="string">'elastic'</span>, <span class="string">'123456'</span>),</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> es</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search_body</span><span class="params">(index, doc)</span>:</span></span><br><span class="line">    <span class="string">"""搜索"""</span></span><br><span class="line">    es=get_es_config()</span><br><span class="line">    <span class="keyword">if</span> es.indices.exists(index=index):</span><br><span class="line">        res=es.search(index=index,body=doc)</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> res[<span class="string">"hits"</span>][<span class="string">"hits"</span>]:</span><br><span class="line">            print(line)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">close_index</span><span class="params">(index)</span>:</span></span><br><span class="line">    <span class="string">"""关闭/删除索引"""</span></span><br><span class="line">    es = get_es_config()</span><br><span class="line">    <span class="keyword">if</span> es.indices.exists(index=index):</span><br><span class="line">        <span class="keyword">if</span> es.indices.close(index):</span><br><span class="line">            print(<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">if</span> es.indices.delete(index):</span><br><span class="line">            print(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">search_body(<span class="string">"my_index-2018.01.30"</span>,</span><br><span class="line">            doc=&#123;</span><br><span class="line">                <span class="string">"query"</span>: &#123;</span><br><span class="line">                    <span class="string">"match"</span>: &#123;</span><br><span class="line">                        <span class="string">"geoip.city_name"</span>: <span class="string">"Hangzhou"</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">close_index(<span class="string">"my_index-2018.01.30"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;python elasticsearch库应用&lt;br&gt;Doc: &lt;a href=&quot;https://pypi.org/project/elasticsearch/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://pypi.org/project/elasticsearch/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="elasticsearch" scheme="https://ngames-dev.cn/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="https://ngames-dev.cn/tags/elasticsearch/"/>
    
      <category term="python" scheme="https://ngames-dev.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes安装</title>
    <link href="https://ngames-dev.cn/2019/03/20/kubernetes%E5%AE%89%E8%A3%85/"/>
    <id>https://ngames-dev.cn/2019/03/20/kubernetes安装/</id>
    <published>2019-03-19T16:00:00.000Z</published>
    <updated>2019-10-14T07:39:31.003Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>kubeadm: 主要用于提供安装kubernetes的辅助工具<br>master: nodes: 安装kubelet, kubeadm, docker, kubectl # kubectl仅master安装即可<br>master: kubeadm init  初始化集群主节点<br>nodes: kubeadm join  将node节点加入集群<br>Doc: <a href="https://github.com/kubernetes/kubeadm/blob/master/docs/design/design_v1.10.md" target="_blank" rel="noopener">https://github.com/kubernetes/kubeadm/blob/master/docs/design/design_v1.10.md</a>  </p></blockquote><h2 id="安装前配置"><a href="#安装前配置" class="headerlink" title="安装前配置"></a>安装前配置</h2><h3 id="关闭iptables-和firewalld"><a href="#关闭iptables-和firewalld" class="headerlink" title="关闭iptables 和firewalld"></a>关闭<code>iptables</code> 和<code>firewalld</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl stop iptables.service  </span><br><span class="line">$ systemctl disable iptables.service  </span><br><span class="line">$ systemctl stop firewalld.service   </span><br><span class="line">$ systemctl disable firewalld.service</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="基于主机名"><a href="#基于主机名" class="headerlink" title="基于主机名"></a>基于主机名</h3><p>master和nodes主机名添加至/etc/hosts  </p><h3 id="主机网络桥接设置"><a href="#主机网络桥接设置" class="headerlink" title="主机网络桥接设置"></a>主机网络桥接设置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat /proc/sys/net/bridge/bridge-nf-call-ip6tables  </span><br><span class="line">1  </span><br><span class="line">$ cat /proc/sys/net/bridge/bridge-nf-call-iptables  </span><br><span class="line">1</span><br></pre></td></tr></table></figure><h2 id="安装kuberbetes和docker"><a href="#安装kuberbetes和docker" class="headerlink" title="安装kuberbetes和docker"></a>安装kuberbetes和docker</h2><h3 id="准备镜像源到-etc-yum-repos-d"><a href="#准备镜像源到-etc-yum-repos-d" class="headerlink" title="准备镜像源到/etc/yum.repos.d/"></a>准备镜像源到/etc/yum.repos.d/</h3><ul><li><p>docker-ce源   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd ; wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -P /etc/yum.repos.d/  </span><br><span class="line">$ yum list docker-ce --showduplicates |sort -r</span><br></pre></td></tr></table></figure></li><li><p>kubernetes源  </p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ (cat &lt;&lt; EOF  </span><br><span class="line">[kubernetes]  </span><br><span class="line">name=Kubernets Repo  </span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/  </span><br><span class="line">enabled=1  </span><br><span class="line">gpgcheck=1  </span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg  </span><br><span class="line">EOF  </span><br><span class="line">) &gt; /etc/yum.repos.d/kubernetes.repo  </span><br><span class="line">  </span><br><span class="line">wget https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg  </span><br><span class="line">wget https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg  </span><br><span class="line">rpm --import yum-key.gpg  </span><br><span class="line">rpm --import rpm-package-key.gpg  </span><br><span class="line">yum repolist</span><br></pre></td></tr></table></figure><h3 id="安装kuberbetes和docker-1"><a href="#安装kuberbetes和docker-1" class="headerlink" title="安装kuberbetes和docker"></a>安装kuberbetes和docker</h3><ul><li>安装kublete、kubeadm、docker、kubectl kubectl仅master安装即可  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install docker-ce-18.06.3 kubelet-1.12.0 kubeadm-1.12.0 kubectl-1.12.0</span><br></pre></td></tr></table></figure></li></ul><h3 id="配置kuberbetes和docker"><a href="#配置kuberbetes和docker" class="headerlink" title="配置kuberbetes和docker"></a>配置kuberbetes和docker</h3><ul><li>docker添加代理，[service]下添加,为了翻墙更改docker默认拉取镜像的源[这一步仅仅是为了翻墙下载镜像]  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vim /usr/lib/systemd/system/docker.service  </span><br><span class="line">Environment=&quot;HTTPS_PROXY=http://www.ik8s.io:10080&quot;  </span><br><span class="line">Environment=&quot;NO_PROXY=127.0.0.0/8,172.16.0.0/16&quot;</span><br></pre></td></tr></table></figure></li></ul><h3 id="配置开机自动启动"><a href="#配置开机自动启动" class="headerlink" title="配置开机自动启动"></a>配置开机自动启动</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker kubelet  </span><br><span class="line">systemctl daemon-reload  </span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><h3 id="禁用Swap功能"><a href="#禁用Swap功能" class="headerlink" title="禁用Swap功能"></a>禁用Swap功能</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/sysconfig/kubelet  </span><br><span class="line">KUBELET_EXTRA_ATGS=&quot;--fail-swap-on=false&quot;</span><br></pre></td></tr></table></figure><h3 id="Master初始化"><a href="#Master初始化" class="headerlink" title="Master初始化"></a>Master初始化</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init --help;   </span><br><span class="line">kubeadm init --kubernetes-version=v1.12.0 --pod-network-cidr=10.244.0.0/16 --service-cidr=10.96.0.0/12 --ignore-preflight-errors=Swap</span><br></pre></td></tr></table></figure><ul><li><p>初始化参数  </p></li><li><p>–apiserver-advertise-address：表示apiserver对外的地址是什么，默认是0.0.0.0  </p></li><li><p>–apiserver-bind-port：表示apiserver的端口是什么，默认是6443  </p></li><li><p>–cert-dir：加载证书的目录，默认在/etc/kubernetes/pki  </p></li><li><p>–config：配置文件  </p></li><li><p>–ignore-preflight-errors：在预检中如果有错误可以忽略掉，比如忽略 IsPrivilegedUser,Swap.等  </p></li><li><p>–kubernetes-version：指定要初始化k8s的版本信息是什么  </p></li><li><p>–pod-network-cidr ：指定pod使用哪个网段，默认使用10.244.0.0/16  </p></li><li><p>–service-cidr：指定service组件使用哪个网段，默认10.96.0.0/12  </p></li><li><p>初始化产生信息  </p></li><li><p>提示在master上执行，和加入master的命令[也可以指定–ignore-preflight-errors忽略Swap]  </p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">………………………………………………………………  </span><br><span class="line">Your Kubernetes master has initialized successfully!  </span><br><span class="line">  </span><br><span class="line">To start using your cluster, you need to run the following as a regular user:  </span><br><span class="line">  </span><br><span class="line">  mkdir -p $HOME/.kube  </span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config  </span><br><span class="line">  sudo chown $(id -u):$(id -g) $HOME/.kube/config  </span><br><span class="line">  </span><br><span class="line">You should now deploy a pod network to the cluster.  </span><br><span class="line">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:  </span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/  </span><br><span class="line">  </span><br><span class="line">You can now join any number of machines by running the following on each node  </span><br><span class="line">as root:  </span><br><span class="line">  </span><br><span class="line">  kubeadm join 192.168.1.171:6443 --token r9105w.5r5je2vko3jyn8be --discovery-token-ca-cert-hash sha256:d7a99553b49b88d8933785fee033663adebd6d6909323cea6173d009ad66a7f8</span><br></pre></td></tr></table></figure><ul><li><p>master继续执行  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir -p $HOME/.kube  </span><br><span class="line">$ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config  </span><br><span class="line">$ sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure></li><li><p>若初始化失败：可先行下载镜像,下载脚本  </p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ cat pull-images.sh   </span><br><span class="line">#!/bin/bash  </span><br><span class="line">images=(kube-apiserver:v1.12.0 kube-controller-manager:v1.12.0 kube-scheduler:v1.12.0 kube-proxy:v1.12.0 pause:3.1 etcd:3.2.24 coredns:1.2.2)  </span><br><span class="line">  </span><br><span class="line">for ima in $&#123;images[@]&#125;  </span><br><span class="line">do  </span><br><span class="line">   docker pull   registry.cn-shenzhen.aliyuncs.com/lurenjia/$ima  </span><br><span class="line">   docker tag    registry.cn-shenzhen.aliyuncs.com/lurenjia/$ima   k8s.gcr.io/$ima  </span><br><span class="line">   docker rmi  -f  registry.cn-shenzhen.aliyuncs.com/lurenjia/$ima  </span><br><span class="line">done</span><br></pre></td></tr></table></figure><ul><li>查看状态信息  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get cs  </span><br><span class="line">NAME                 STATUS    MESSAGE              ERROR  </span><br><span class="line">scheduler            Healthy   ok                     </span><br><span class="line">controller-manager   Healthy   ok                     </span><br><span class="line">etcd-0               Healthy   \&#123;&quot;health&quot;: &quot;true&quot;\&#125;   </span><br><span class="line">  </span><br><span class="line">$ kubectl get nodes  </span><br><span class="line">NAME        STATUS     ROLES    AGE   VERSION  </span><br><span class="line">master-01   NotReady   master   40m   v1.12.0</span><br></pre></td></tr></table></figure><p>master01为未就绪状态，需要一个重要的网络插件flannel  </p><h3 id="安装flannel网络组件"><a href="#安装flannel网络组件" class="headerlink" title="安装flannel网络组件"></a>安装flannel网络组件</h3><ul><li>[参考] <a href="https://github.com/coreos/flannel" target="_blank" rel="noopener">https://github.com/coreos/flannel</a>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml  </span><br><span class="line">podsecuritypolicy.extensions/psp.flannel.unprivileged created  </span><br><span class="line">clusterrole.rbac.authorization.k8s.io/flannel created  </span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/flannel created  </span><br><span class="line">serviceaccount/flannel created  </span><br><span class="line">configmap/kube-flannel-cfg created  </span><br><span class="line">daemonset.extensions/kube-flannel-ds-amd64 created  </span><br><span class="line">daemonset.extensions/kube-flannel-ds-arm64 created  </span><br><span class="line">daemonset.extensions/kube-flannel-ds-arm created  </span><br><span class="line">daemonset.extensions/kube-flannel-ds-ppc64le created  </span><br><span class="line">daemonset.extensions/kube-flannel-ds-s390x created</span><br></pre></td></tr></table></figure></li></ul><h2 id="kubectl-get-h"><a href="#kubectl-get-h" class="headerlink" title="kubectl get -h"></a>kubectl get -h</h2><table><thead><tr><th align="left">命令</th><th align="left">注释</th></tr></thead><tbody><tr><td align="left">kubectl get cs</td><td align="left">查看状态信息 cs=componentstatus</td></tr><tr><td align="left">kubectl get nodes</td><td align="left">查看node信息</td></tr><tr><td align="left">kubectl get pods [-n kube-system -o wide]</td><td align="left">查看所有pod,-n 指定命名空间,-o wide 输出扩展信息</td></tr><tr><td align="left">kubectl get ns</td><td align="left">查看所有命名空间</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;kubeadm: 主要用于提供安装kubernetes的辅助工具&lt;br&gt;master: nodes: 安装kubelet, kubeadm, docker, kubectl # kubectl仅master安装即可&lt;br&gt;master: kubeadm init  初始化集群主节点&lt;br&gt;nodes: kubeadm join  将node节点加入集群&lt;br&gt;Doc: &lt;a href=&quot;https://github.com/kubernetes/kubeadm/blob/master/docs/design/design_v1.10.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/kubernetes/kubeadm/blob/master/docs/design/design_v1.10.md&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;安装前配置&quot;&gt;&lt;a href=&quot;#安装前配置&quot; class=&quot;headerlink&quot; title=&quot;安装前配置&quot;&gt;&lt;/a&gt;安装前配置&lt;/h2&gt;&lt;h3 id=&quot;关闭iptables-和firewalld&quot;&gt;&lt;a href=&quot;#关闭iptables-和firewalld&quot; class=&quot;headerlink&quot; title=&quot;关闭iptables 和firewalld&quot;&gt;&lt;/a&gt;关闭&lt;code&gt;iptables&lt;/code&gt; 和&lt;code&gt;firewalld&lt;/code&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ systemctl stop iptables.service  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ systemctl disable iptables.service  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ systemctl stop firewalld.service   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ systemctl disable firewalld.service&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://ngames-dev.cn/categories/kubernetes/"/>
    
    
      <category term="kubernetes" scheme="https://ngames-dev.cn/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Homebrew源替换及重置</title>
    <link href="https://ngames-dev.cn/2019/03/07/Homebrew%E6%BA%90%E6%9B%BF%E6%8D%A2%E5%8F%8A%E9%87%8D%E7%BD%AE/"/>
    <id>https://ngames-dev.cn/2019/03/07/Homebrew源替换及重置/</id>
    <published>2019-03-06T16:00:00.000Z</published>
    <updated>2019-09-06T09:23:30.119Z</updated>
    
    <content type="html"><![CDATA[<h3 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- 替换brew.git:</span><br><span class="line">cd &quot;$(brew --repo)&quot;</span><br><span class="line">git remote set-url origin https://mirrors.ustc.edu.cn/brew.git</span><br><span class="line"></span><br><span class="line">- 替换homebrew-core.git:</span><br><span class="line">cd &quot;$(brew --repo)/Library/Taps/homebrew/homebrew-core&quot;</span><br><span class="line">git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git</span><br><span class="line"></span><br><span class="line">brew update</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="重置"><a href="#重置" class="headerlink" title="重置"></a>重置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- 重置brew.git:</span><br><span class="line">cd &quot;$(brew --repo)&quot;</span><br><span class="line">git remote set-url origin https://github.com/Homebrew/brew.git</span><br><span class="line"></span><br><span class="line">- 重置homebrew-core.git:</span><br><span class="line">cd &quot;$(brew --repo)/Library/Taps/homebrew/homebrew-core&quot;</span><br><span class="line">git remote set-url origin https://github.com/Homebrew/homebrew-core.git</span><br><span class="line"></span><br><span class="line">brew update</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;替换&quot;&gt;&lt;a href=&quot;#替换&quot; class=&quot;headerlink&quot; title=&quot;替换&quot;&gt;&lt;/a&gt;替换&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- 替换brew.git:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd &amp;quot;$(brew --repo)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git remote set-url origin https://mirrors.ustc.edu.cn/brew.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 替换homebrew-core.git:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd &amp;quot;$(brew --repo)/Library/Taps/homebrew/homebrew-core&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brew update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Homebrew" scheme="https://ngames-dev.cn/categories/Homebrew/"/>
    
    
      <category term="Homebrew" scheme="https://ngames-dev.cn/tags/Homebrew/"/>
    
      <category term="源" scheme="https://ngames-dev.cn/tags/%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>kafka docker-compose</title>
    <link href="https://ngames-dev.cn/2019/03/07/kafka/"/>
    <id>https://ngames-dev.cn/2019/03/07/kafka/</id>
    <published>2019-03-06T16:00:00.000Z</published>
    <updated>2019-09-06T09:23:30.119Z</updated>
    
    <content type="html"><![CDATA[<h3 id="单实例"><a href="#单实例" class="headerlink" title="单实例"></a>单实例</h3><ul><li>docker-compose启动  </li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'2'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  zoo1:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">wurstmeister/zookeeper</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">unless-stopped</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">zoo1</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"2181:2181"</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">zookeeper</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  kafka1:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">wurstmeister/kafka</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"9092:9092"</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">      KAFKA_ADVERTISED_HOST_NAME:</span> <span class="string">localhost</span></span><br><span class="line"><span class="attr">      KAFKA_ZOOKEEPER_CONNECT:</span> <span class="string">"zoo1:2181"</span></span><br><span class="line"><span class="attr">      KAFKA_BROKER_ID:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">      KAFKA_CREATE_TOPICS:</span> <span class="string">"stream-in:1:1,stream-out:1:1"</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">zoo1</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">kafka</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="kafka集群"><a href="#kafka集群" class="headerlink" title="kafka集群"></a>kafka集群</h3><hr><ul><li>docker-compose启动  </li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  zoo1:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">wurstmeister/zookeeper</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">unless-stopped</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">zoo1</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"2181:2181"</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">zookeeper</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  kafka1:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">wurstmeister/kafka</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"9091:9092"</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">      KAFKA_ADVERTISED_HOST_NAME:</span> <span class="number">172.16</span><span class="number">.149</span><span class="number">.242</span>  <span class="comment"># 此处填写为宿主机IP</span></span><br><span class="line"><span class="attr">      KAFKA_ADVERTISED_PORT:</span> <span class="number">9091</span></span><br><span class="line"><span class="attr">      KAFKA_ZOOKEEPER_CONNECT:</span> <span class="string">"zoo1:2181"</span></span><br><span class="line"><span class="attr">      KAFKA_BROKER_ID:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">      KAFKA_CREATE_TOPICS:</span> <span class="string">"stream-in:1:1,stream-out:1:1"</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">zoo1</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">kafka1</span></span><br><span class="line"><span class="attr">  kafka2:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">wurstmeister/kafka</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"9092:9092"</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">      KAFKA_ADVERTISED_HOST_NAME:</span> <span class="number">172.16</span><span class="number">.149</span><span class="number">.242</span></span><br><span class="line"><span class="attr">      KAFKA_ADVERTISED_PORT:</span> <span class="number">9092</span></span><br><span class="line"><span class="attr">      KAFKA_ZOOKEEPER_CONNECT:</span> <span class="string">"zoo1:2181"</span></span><br><span class="line"><span class="attr">      KAFKA_BROKER_ID:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">zoo1</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">kafka2</span></span><br><span class="line"><span class="attr">  kafka3:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">wurstmeister/kafka</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"9093:9092"</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">      KAFKA_ADVERTISED_HOST_NAME:</span> <span class="number">172.16</span><span class="number">.149</span><span class="number">.242</span></span><br><span class="line"><span class="attr">      KAFKA_ADVERTISED_PORT:</span> <span class="number">9093</span></span><br><span class="line"><span class="attr">      KAFKA_ZOOKEEPER_CONNECT:</span> <span class="string">"zoo1:2181"</span></span><br><span class="line"><span class="attr">      KAFKA_BROKER_ID:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">zoo1</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">kafka3</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  kafka-manage:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">sheepkiller/kafka-manager</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"9999:9000"</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">      ZK_HOSTS:</span> <span class="attr">zoo1:2181</span></span><br><span class="line"><span class="attr">      APPLICATION_SECRET:</span> <span class="string">"letmein"</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">kafka-manager</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">zoo1</span></span><br></pre></td></tr></table></figure><h3 id="测试脚本"><a href="#测试脚本" class="headerlink" title="测试脚本"></a>测试脚本</h3><hr><ul><li>生产者  </li><li>kafka-send.py  </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> kafka <span class="keyword">import</span> KafkaProducer</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">500</span>):</span><br><span class="line">    msg_dict = &#123;</span><br><span class="line">    <span class="string">"sleep_time"</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="string">"db_config"</span>: &#123;</span><br><span class="line">        <span class="string">"database"</span>: <span class="string">"xx_db"</span>,</span><br><span class="line">        <span class="string">"host"</span>: <span class="string">"xxxx"</span></span><br><span class="line">        &#125;,</span><br><span class="line">    <span class="string">"table"</span>: <span class="string">"msg"</span>,</span><br><span class="line">    <span class="string">"msg"</span>: <span class="string">"Hello World"</span></span><br><span class="line">    &#125;   </span><br><span class="line">    msg_dict[<span class="string">"number"</span>] = i</span><br><span class="line">    msg=json.dumps(msg_dict)</span><br><span class="line">    <span class="comment"># print(msg)</span></span><br><span class="line">    <span class="keyword">for</span> host <span class="keyword">in</span> [<span class="string">"172.16.149.242:9091"</span>,<span class="string">"172.16.149.242:9092"</span>,<span class="string">"172.16.149.242:9093"</span>]:</span><br><span class="line">        producer = KafkaProducer(bootstrap_servers=host)</span><br><span class="line">        producer.send(<span class="string">'sakura'</span>, value=msg.encode(<span class="string">"utf-8"</span>), partition=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">producer.close()</span><br></pre></td></tr></table></figure><ul><li>消费者</li><li>kafka-consumer.py   </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> kafka <span class="keyword">import</span> KafkaConsumer</span><br><span class="line"></span><br><span class="line">consumer = KafkaConsumer(<span class="string">'sakura'</span>, bootstrap_servers=[<span class="string">"172.16.149.242:9092"</span>])</span><br><span class="line"><span class="keyword">for</span> msg <span class="keyword">in</span> consumer:</span><br><span class="line">    recv = <span class="string">"%s:%d:%d: key=%s value=%s"</span> %(msg.topic, msg.partition, msg.offset, msg.key, msg.value)</span><br><span class="line">    print(recv)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;单实例&quot;&gt;&lt;a href=&quot;#单实例&quot; class=&quot;headerlink&quot; title=&quot;单实例&quot;&gt;&lt;/a&gt;单实例&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;docker-compose启动  &lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;version:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;services:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  zoo1:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    image:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;wurstmeister/zookeeper&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    restart:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;unless-stopped&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    hostname:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;zoo1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    ports:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;      -&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;2181:2181&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    container_name:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;zookeeper&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  kafka1:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    image:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;wurstmeister/kafka&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    ports:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;      -&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;9092:9092&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    environment:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      KAFKA_ADVERTISED_HOST_NAME:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;localhost&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      KAFKA_ZOOKEEPER_CONNECT:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;zoo1:2181&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      KAFKA_BROKER_ID:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      KAFKA_CREATE_TOPICS:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;stream-in:1:1,stream-out:1:1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    depends_on:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;      -&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;zoo1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    container_name:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;kafka&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="kafka" scheme="https://ngames-dev.cn/categories/kafka/"/>
    
    
      <category term="docker compose" scheme="https://ngames-dev.cn/tags/docker-compose/"/>
    
      <category term="kafka" scheme="https://ngames-dev.cn/tags/kafka/"/>
    
  </entry>
  
</feed>
